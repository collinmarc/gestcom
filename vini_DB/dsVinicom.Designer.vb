'------------------------------------------------------------------------------
' <auto-generated>
'     Ce code a été généré par un outil.
'     Version du runtime :4.0.30319.42000
'
'     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
'     le code est régénéré.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsVinicom"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsVinicom
    Inherits Global.System.Data.DataSet
    
    Private tableEXPORTPARAM As EXPORTPARAMDataTable
    
    Private tableREGLEMENT As REGLEMENTDataTable
    
    Private tableCONSTANTES As CONSTANTESDataTable
    
    Private tableMVT_STOCK As MVT_STOCKDataTable
    
    Private tableFRN_COMM As FRN_COMMDataTable
    
    Private tableTRANSPORTEUR As TRANSPORTEURDataTable
    
    Private tableFACTCOM As FACTCOMDataTable
    
    Private tableLOCK As LOCKDataTable
    
    Private tableUSERSRIGHTS As USERSRIGHTSDataTable
    
    Private tableUSERS As USERSDataTable
    
    Private tableAPPELATION As APPELATIONDataTable
    
    Private tableFICHETECHNIQUE_FOURNISSEUR As FICHETECHNIQUE_FOURNISSEURDataTable
    
    Private tableIMAGES As IMAGESDataTable
    
    Private tableRECAP_COLISAGE As RECAP_COLISAGEDataTable
    
    Private tableRECAPCOLISAGEJOURN As RECAPCOLISAGEJOURNDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("EXPORTPARAM")) Is Nothing) Then
                MyBase.Tables.Add(New EXPORTPARAMDataTable(ds.Tables("EXPORTPARAM")))
            End If
            If (Not (ds.Tables("REGLEMENT")) Is Nothing) Then
                MyBase.Tables.Add(New REGLEMENTDataTable(ds.Tables("REGLEMENT")))
            End If
            If (Not (ds.Tables("CONSTANTES")) Is Nothing) Then
                MyBase.Tables.Add(New CONSTANTESDataTable(ds.Tables("CONSTANTES")))
            End If
            If (Not (ds.Tables("MVT_STOCK")) Is Nothing) Then
                MyBase.Tables.Add(New MVT_STOCKDataTable(ds.Tables("MVT_STOCK")))
            End If
            If (Not (ds.Tables("FRN_COMM")) Is Nothing) Then
                MyBase.Tables.Add(New FRN_COMMDataTable(ds.Tables("FRN_COMM")))
            End If
            If (Not (ds.Tables("TRANSPORTEUR")) Is Nothing) Then
                MyBase.Tables.Add(New TRANSPORTEURDataTable(ds.Tables("TRANSPORTEUR")))
            End If
            If (Not (ds.Tables("FACTCOM")) Is Nothing) Then
                MyBase.Tables.Add(New FACTCOMDataTable(ds.Tables("FACTCOM")))
            End If
            If (Not (ds.Tables("LOCK")) Is Nothing) Then
                MyBase.Tables.Add(New LOCKDataTable(ds.Tables("LOCK")))
            End If
            If (Not (ds.Tables("USERSRIGHTS")) Is Nothing) Then
                MyBase.Tables.Add(New USERSRIGHTSDataTable(ds.Tables("USERSRIGHTS")))
            End If
            If (Not (ds.Tables("USERS")) Is Nothing) Then
                MyBase.Tables.Add(New USERSDataTable(ds.Tables("USERS")))
            End If
            If (Not (ds.Tables("APPELATION")) Is Nothing) Then
                MyBase.Tables.Add(New APPELATIONDataTable(ds.Tables("APPELATION")))
            End If
            If (Not (ds.Tables("FICHETECHNIQUE_FOURNISSEUR")) Is Nothing) Then
                MyBase.Tables.Add(New FICHETECHNIQUE_FOURNISSEURDataTable(ds.Tables("FICHETECHNIQUE_FOURNISSEUR")))
            End If
            If (Not (ds.Tables("IMAGES")) Is Nothing) Then
                MyBase.Tables.Add(New IMAGESDataTable(ds.Tables("IMAGES")))
            End If
            If (Not (ds.Tables("RECAP_COLISAGE")) Is Nothing) Then
                MyBase.Tables.Add(New RECAP_COLISAGEDataTable(ds.Tables("RECAP_COLISAGE")))
            End If
            If (Not (ds.Tables("RECAPCOLISAGEJOURN")) Is Nothing) Then
                MyBase.Tables.Add(New RECAPCOLISAGEJOURNDataTable(ds.Tables("RECAPCOLISAGEJOURN")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property EXPORTPARAM() As EXPORTPARAMDataTable
        Get
            Return Me.tableEXPORTPARAM
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property REGLEMENT() As REGLEMENTDataTable
        Get
            Return Me.tableREGLEMENT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CONSTANTES() As CONSTANTESDataTable
        Get
            Return Me.tableCONSTANTES
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MVT_STOCK() As MVT_STOCKDataTable
        Get
            Return Me.tableMVT_STOCK
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FRN_COMM() As FRN_COMMDataTable
        Get
            Return Me.tableFRN_COMM
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TRANSPORTEUR() As TRANSPORTEURDataTable
        Get
            Return Me.tableTRANSPORTEUR
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FACTCOM() As FACTCOMDataTable
        Get
            Return Me.tableFACTCOM
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property LOCK() As LOCKDataTable
        Get
            Return Me.tableLOCK
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property USERSRIGHTS() As USERSRIGHTSDataTable
        Get
            Return Me.tableUSERSRIGHTS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property USERS() As USERSDataTable
        Get
            Return Me.tableUSERS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property APPELATION() As APPELATIONDataTable
        Get
            Return Me.tableAPPELATION
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FICHETECHNIQUE_FOURNISSEUR() As FICHETECHNIQUE_FOURNISSEURDataTable
        Get
            Return Me.tableFICHETECHNIQUE_FOURNISSEUR
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property IMAGES() As IMAGESDataTable
        Get
            Return Me.tableIMAGES
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RECAP_COLISAGE() As RECAP_COLISAGEDataTable
        Get
            Return Me.tableRECAP_COLISAGE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RECAPCOLISAGEJOURN() As RECAPCOLISAGEJOURNDataTable
        Get
            Return Me.tableRECAPCOLISAGEJOURN
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsVinicom = CType(MyBase.Clone,dsVinicom)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("EXPORTPARAM")) Is Nothing) Then
                MyBase.Tables.Add(New EXPORTPARAMDataTable(ds.Tables("EXPORTPARAM")))
            End If
            If (Not (ds.Tables("REGLEMENT")) Is Nothing) Then
                MyBase.Tables.Add(New REGLEMENTDataTable(ds.Tables("REGLEMENT")))
            End If
            If (Not (ds.Tables("CONSTANTES")) Is Nothing) Then
                MyBase.Tables.Add(New CONSTANTESDataTable(ds.Tables("CONSTANTES")))
            End If
            If (Not (ds.Tables("MVT_STOCK")) Is Nothing) Then
                MyBase.Tables.Add(New MVT_STOCKDataTable(ds.Tables("MVT_STOCK")))
            End If
            If (Not (ds.Tables("FRN_COMM")) Is Nothing) Then
                MyBase.Tables.Add(New FRN_COMMDataTable(ds.Tables("FRN_COMM")))
            End If
            If (Not (ds.Tables("TRANSPORTEUR")) Is Nothing) Then
                MyBase.Tables.Add(New TRANSPORTEURDataTable(ds.Tables("TRANSPORTEUR")))
            End If
            If (Not (ds.Tables("FACTCOM")) Is Nothing) Then
                MyBase.Tables.Add(New FACTCOMDataTable(ds.Tables("FACTCOM")))
            End If
            If (Not (ds.Tables("LOCK")) Is Nothing) Then
                MyBase.Tables.Add(New LOCKDataTable(ds.Tables("LOCK")))
            End If
            If (Not (ds.Tables("USERSRIGHTS")) Is Nothing) Then
                MyBase.Tables.Add(New USERSRIGHTSDataTable(ds.Tables("USERSRIGHTS")))
            End If
            If (Not (ds.Tables("USERS")) Is Nothing) Then
                MyBase.Tables.Add(New USERSDataTable(ds.Tables("USERS")))
            End If
            If (Not (ds.Tables("APPELATION")) Is Nothing) Then
                MyBase.Tables.Add(New APPELATIONDataTable(ds.Tables("APPELATION")))
            End If
            If (Not (ds.Tables("FICHETECHNIQUE_FOURNISSEUR")) Is Nothing) Then
                MyBase.Tables.Add(New FICHETECHNIQUE_FOURNISSEURDataTable(ds.Tables("FICHETECHNIQUE_FOURNISSEUR")))
            End If
            If (Not (ds.Tables("IMAGES")) Is Nothing) Then
                MyBase.Tables.Add(New IMAGESDataTable(ds.Tables("IMAGES")))
            End If
            If (Not (ds.Tables("RECAP_COLISAGE")) Is Nothing) Then
                MyBase.Tables.Add(New RECAP_COLISAGEDataTable(ds.Tables("RECAP_COLISAGE")))
            End If
            If (Not (ds.Tables("RECAPCOLISAGEJOURN")) Is Nothing) Then
                MyBase.Tables.Add(New RECAPCOLISAGEJOURNDataTable(ds.Tables("RECAPCOLISAGEJOURN")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableEXPORTPARAM = CType(MyBase.Tables("EXPORTPARAM"),EXPORTPARAMDataTable)
        If (initTable = true) Then
            If (Not (Me.tableEXPORTPARAM) Is Nothing) Then
                Me.tableEXPORTPARAM.InitVars
            End If
        End If
        Me.tableREGLEMENT = CType(MyBase.Tables("REGLEMENT"),REGLEMENTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableREGLEMENT) Is Nothing) Then
                Me.tableREGLEMENT.InitVars
            End If
        End If
        Me.tableCONSTANTES = CType(MyBase.Tables("CONSTANTES"),CONSTANTESDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCONSTANTES) Is Nothing) Then
                Me.tableCONSTANTES.InitVars
            End If
        End If
        Me.tableMVT_STOCK = CType(MyBase.Tables("MVT_STOCK"),MVT_STOCKDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMVT_STOCK) Is Nothing) Then
                Me.tableMVT_STOCK.InitVars
            End If
        End If
        Me.tableFRN_COMM = CType(MyBase.Tables("FRN_COMM"),FRN_COMMDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFRN_COMM) Is Nothing) Then
                Me.tableFRN_COMM.InitVars
            End If
        End If
        Me.tableTRANSPORTEUR = CType(MyBase.Tables("TRANSPORTEUR"),TRANSPORTEURDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTRANSPORTEUR) Is Nothing) Then
                Me.tableTRANSPORTEUR.InitVars
            End If
        End If
        Me.tableFACTCOM = CType(MyBase.Tables("FACTCOM"),FACTCOMDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFACTCOM) Is Nothing) Then
                Me.tableFACTCOM.InitVars
            End If
        End If
        Me.tableLOCK = CType(MyBase.Tables("LOCK"),LOCKDataTable)
        If (initTable = true) Then
            If (Not (Me.tableLOCK) Is Nothing) Then
                Me.tableLOCK.InitVars
            End If
        End If
        Me.tableUSERSRIGHTS = CType(MyBase.Tables("USERSRIGHTS"),USERSRIGHTSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableUSERSRIGHTS) Is Nothing) Then
                Me.tableUSERSRIGHTS.InitVars
            End If
        End If
        Me.tableUSERS = CType(MyBase.Tables("USERS"),USERSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableUSERS) Is Nothing) Then
                Me.tableUSERS.InitVars
            End If
        End If
        Me.tableAPPELATION = CType(MyBase.Tables("APPELATION"),APPELATIONDataTable)
        If (initTable = true) Then
            If (Not (Me.tableAPPELATION) Is Nothing) Then
                Me.tableAPPELATION.InitVars
            End If
        End If
        Me.tableFICHETECHNIQUE_FOURNISSEUR = CType(MyBase.Tables("FICHETECHNIQUE_FOURNISSEUR"),FICHETECHNIQUE_FOURNISSEURDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFICHETECHNIQUE_FOURNISSEUR) Is Nothing) Then
                Me.tableFICHETECHNIQUE_FOURNISSEUR.InitVars
            End If
        End If
        Me.tableIMAGES = CType(MyBase.Tables("IMAGES"),IMAGESDataTable)
        If (initTable = true) Then
            If (Not (Me.tableIMAGES) Is Nothing) Then
                Me.tableIMAGES.InitVars
            End If
        End If
        Me.tableRECAP_COLISAGE = CType(MyBase.Tables("RECAP_COLISAGE"),RECAP_COLISAGEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRECAP_COLISAGE) Is Nothing) Then
                Me.tableRECAP_COLISAGE.InitVars
            End If
        End If
        Me.tableRECAPCOLISAGEJOURN = CType(MyBase.Tables("RECAPCOLISAGEJOURN"),RECAPCOLISAGEJOURNDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRECAPCOLISAGEJOURN) Is Nothing) Then
                Me.tableRECAPCOLISAGEJOURN.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsVinicom"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsVinicom.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableEXPORTPARAM = New EXPORTPARAMDataTable()
        MyBase.Tables.Add(Me.tableEXPORTPARAM)
        Me.tableREGLEMENT = New REGLEMENTDataTable()
        MyBase.Tables.Add(Me.tableREGLEMENT)
        Me.tableCONSTANTES = New CONSTANTESDataTable()
        MyBase.Tables.Add(Me.tableCONSTANTES)
        Me.tableMVT_STOCK = New MVT_STOCKDataTable()
        MyBase.Tables.Add(Me.tableMVT_STOCK)
        Me.tableFRN_COMM = New FRN_COMMDataTable()
        MyBase.Tables.Add(Me.tableFRN_COMM)
        Me.tableTRANSPORTEUR = New TRANSPORTEURDataTable()
        MyBase.Tables.Add(Me.tableTRANSPORTEUR)
        Me.tableFACTCOM = New FACTCOMDataTable()
        MyBase.Tables.Add(Me.tableFACTCOM)
        Me.tableLOCK = New LOCKDataTable()
        MyBase.Tables.Add(Me.tableLOCK)
        Me.tableUSERSRIGHTS = New USERSRIGHTSDataTable()
        MyBase.Tables.Add(Me.tableUSERSRIGHTS)
        Me.tableUSERS = New USERSDataTable()
        MyBase.Tables.Add(Me.tableUSERS)
        Me.tableAPPELATION = New APPELATIONDataTable()
        MyBase.Tables.Add(Me.tableAPPELATION)
        Me.tableFICHETECHNIQUE_FOURNISSEUR = New FICHETECHNIQUE_FOURNISSEURDataTable()
        MyBase.Tables.Add(Me.tableFICHETECHNIQUE_FOURNISSEUR)
        Me.tableIMAGES = New IMAGESDataTable()
        MyBase.Tables.Add(Me.tableIMAGES)
        Me.tableRECAP_COLISAGE = New RECAP_COLISAGEDataTable()
        MyBase.Tables.Add(Me.tableRECAP_COLISAGE)
        Me.tableRECAPCOLISAGEJOURN = New RECAPCOLISAGEJOURNDataTable()
        MyBase.Tables.Add(Me.tableRECAPCOLISAGEJOURN)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeEXPORTPARAM() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeREGLEMENT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCONSTANTES() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMVT_STOCK() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFRN_COMM() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTRANSPORTEUR() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFACTCOM() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeLOCK() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeUSERSRIGHTS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeUSERS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeAPPELATION() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFICHETECHNIQUE_FOURNISSEUR() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeIMAGES() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeRECAP_COLISAGE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeRECAPCOLISAGEJOURN() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsVinicom = New dsVinicom()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub EXPORTPARAMRowChangeEventHandler(ByVal sender As Object, ByVal e As EXPORTPARAMRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub REGLEMENTRowChangeEventHandler(ByVal sender As Object, ByVal e As REGLEMENTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CONSTANTESRowChangeEventHandler(ByVal sender As Object, ByVal e As CONSTANTESRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MVT_STOCKRowChangeEventHandler(ByVal sender As Object, ByVal e As MVT_STOCKRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FRN_COMMRowChangeEventHandler(ByVal sender As Object, ByVal e As FRN_COMMRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TRANSPORTEURRowChangeEventHandler(ByVal sender As Object, ByVal e As TRANSPORTEURRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FACTCOMRowChangeEventHandler(ByVal sender As Object, ByVal e As FACTCOMRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub LOCKRowChangeEventHandler(ByVal sender As Object, ByVal e As LOCKRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub USERSRIGHTSRowChangeEventHandler(ByVal sender As Object, ByVal e As USERSRIGHTSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub USERSRowChangeEventHandler(ByVal sender As Object, ByVal e As USERSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub APPELATIONRowChangeEventHandler(ByVal sender As Object, ByVal e As APPELATIONRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FICHETECHNIQUE_FOURNISSEURRowChangeEventHandler(ByVal sender As Object, ByVal e As FICHETECHNIQUE_FOURNISSEURRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub IMAGESRowChangeEventHandler(ByVal sender As Object, ByVal e As IMAGESRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub RECAP_COLISAGERowChangeEventHandler(ByVal sender As Object, ByVal e As RECAP_COLISAGERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub RECAPCOLISAGEJOURNRowChangeEventHandler(ByVal sender As Object, ByVal e As RECAPCOLISAGEJOURNRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class EXPORTPARAMDataTable
        Inherits Global.System.Data.TypedTableBase(Of EXPORTPARAMRow)
        
        Private columnEXP_TYPE As Global.System.Data.DataColumn
        
        Private columnEXP_NLIGNE As Global.System.Data.DataColumn
        
        Private columnEXP_NCHAMPS As Global.System.Data.DataColumn
        
        Private columnEXP_TYPECHAMPS As Global.System.Data.DataColumn
        
        Private columnEXP_VALEUR As Global.System.Data.DataColumn
        
        Private columnEXP_LONGUEUR As Global.System.Data.DataColumn
        
        Private columnEXP_DESCRIPTION As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "EXPORTPARAM"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXP_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXP_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXP_NLIGNEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXP_NLIGNE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXP_NCHAMPSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXP_NCHAMPS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXP_TYPECHAMPSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXP_TYPECHAMPS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXP_VALEURColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXP_VALEUR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXP_LONGUEURColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXP_LONGUEUR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXP_DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXP_DESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As EXPORTPARAMRow
            Get
                Return CType(Me.Rows(index),EXPORTPARAMRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EXPORTPARAMRowChanging As EXPORTPARAMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EXPORTPARAMRowChanged As EXPORTPARAMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EXPORTPARAMRowDeleting As EXPORTPARAMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EXPORTPARAMRowDeleted As EXPORTPARAMRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddEXPORTPARAMRow(ByVal row As EXPORTPARAMRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddEXPORTPARAMRow(ByVal EXP_TYPE As String, ByVal EXP_NLIGNE As Integer, ByVal EXP_NCHAMPS As Integer, ByVal EXP_TYPECHAMPS As String, ByVal EXP_VALEUR As String, ByVal EXP_LONGUEUR As Integer, ByVal EXP_DESCRIPTION As String) As EXPORTPARAMRow
            Dim rowEXPORTPARAMRow As EXPORTPARAMRow = CType(Me.NewRow,EXPORTPARAMRow)
            Dim columnValuesArray() As Object = New Object() {EXP_TYPE, EXP_NLIGNE, EXP_NCHAMPS, EXP_TYPECHAMPS, EXP_VALEUR, EXP_LONGUEUR, EXP_DESCRIPTION}
            rowEXPORTPARAMRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowEXPORTPARAMRow)
            Return rowEXPORTPARAMRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByEXP_TYPEEXP_NLIGNEEXP_NCHAMPS(ByVal EXP_TYPE As String, ByVal EXP_NLIGNE As Integer, ByVal EXP_NCHAMPS As Integer) As EXPORTPARAMRow
            Return CType(Me.Rows.Find(New Object() {EXP_TYPE, EXP_NLIGNE, EXP_NCHAMPS}),EXPORTPARAMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As EXPORTPARAMDataTable = CType(MyBase.Clone,EXPORTPARAMDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New EXPORTPARAMDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnEXP_TYPE = MyBase.Columns("EXP_TYPE")
            Me.columnEXP_NLIGNE = MyBase.Columns("EXP_NLIGNE")
            Me.columnEXP_NCHAMPS = MyBase.Columns("EXP_NCHAMPS")
            Me.columnEXP_TYPECHAMPS = MyBase.Columns("EXP_TYPECHAMPS")
            Me.columnEXP_VALEUR = MyBase.Columns("EXP_VALEUR")
            Me.columnEXP_LONGUEUR = MyBase.Columns("EXP_LONGUEUR")
            Me.columnEXP_DESCRIPTION = MyBase.Columns("EXP_DESCRIPTION")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnEXP_TYPE = New Global.System.Data.DataColumn("EXP_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXP_TYPE)
            Me.columnEXP_NLIGNE = New Global.System.Data.DataColumn("EXP_NLIGNE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXP_NLIGNE)
            Me.columnEXP_NCHAMPS = New Global.System.Data.DataColumn("EXP_NCHAMPS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXP_NCHAMPS)
            Me.columnEXP_TYPECHAMPS = New Global.System.Data.DataColumn("EXP_TYPECHAMPS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXP_TYPECHAMPS)
            Me.columnEXP_VALEUR = New Global.System.Data.DataColumn("EXP_VALEUR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXP_VALEUR)
            Me.columnEXP_LONGUEUR = New Global.System.Data.DataColumn("EXP_LONGUEUR", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXP_LONGUEUR)
            Me.columnEXP_DESCRIPTION = New Global.System.Data.DataColumn("EXP_DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXP_DESCRIPTION)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnEXP_TYPE, Me.columnEXP_NLIGNE, Me.columnEXP_NCHAMPS}, true))
            Me.columnEXP_TYPE.AllowDBNull = false
            Me.columnEXP_TYPE.MaxLength = 10
            Me.columnEXP_NLIGNE.AllowDBNull = false
            Me.columnEXP_NCHAMPS.AllowDBNull = false
            Me.columnEXP_TYPECHAMPS.AllowDBNull = false
            Me.columnEXP_TYPECHAMPS.MaxLength = 10
            Me.columnEXP_VALEUR.MaxLength = 1073741823
            Me.columnEXP_LONGUEUR.AllowDBNull = false
            Me.columnEXP_DESCRIPTION.AllowDBNull = false
            Me.columnEXP_DESCRIPTION.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewEXPORTPARAMRow() As EXPORTPARAMRow
            Return CType(Me.NewRow,EXPORTPARAMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New EXPORTPARAMRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(EXPORTPARAMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.EXPORTPARAMRowChangedEvent) Is Nothing) Then
                RaiseEvent EXPORTPARAMRowChanged(Me, New EXPORTPARAMRowChangeEvent(CType(e.Row,EXPORTPARAMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.EXPORTPARAMRowChangingEvent) Is Nothing) Then
                RaiseEvent EXPORTPARAMRowChanging(Me, New EXPORTPARAMRowChangeEvent(CType(e.Row,EXPORTPARAMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.EXPORTPARAMRowDeletedEvent) Is Nothing) Then
                RaiseEvent EXPORTPARAMRowDeleted(Me, New EXPORTPARAMRowChangeEvent(CType(e.Row,EXPORTPARAMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.EXPORTPARAMRowDeletingEvent) Is Nothing) Then
                RaiseEvent EXPORTPARAMRowDeleting(Me, New EXPORTPARAMRowChangeEvent(CType(e.Row,EXPORTPARAMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveEXPORTPARAMRow(ByVal row As EXPORTPARAMRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsVinicom = New dsVinicom()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "EXPORTPARAMDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class REGLEMENTDataTable
        Inherits Global.System.Data.TypedTableBase(Of REGLEMENTRow)
        
        Private columnRGL_ID As Global.System.Data.DataColumn
        
        Private columnRGL_IDFACT As Global.System.Data.DataColumn
        
        Private columnRGL_MONTANT As Global.System.Data.DataColumn
        
        Private columnRGL_DATE As Global.System.Data.DataColumn
        
        Private columnRGL_REF As Global.System.Data.DataColumn
        
        Private columnRGL_ETAT As Global.System.Data.DataColumn
        
        Private columnRGL_TYPEFACT As Global.System.Data.DataColumn
        
        Private columnRGL_COMM As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "REGLEMENT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RGL_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRGL_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RGL_IDFACTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRGL_IDFACT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RGL_MONTANTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRGL_MONTANT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RGL_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRGL_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RGL_REFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRGL_REF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RGL_ETATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRGL_ETAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RGL_TYPEFACTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRGL_TYPEFACT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RGL_COMMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRGL_COMM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As REGLEMENTRow
            Get
                Return CType(Me.Rows(index),REGLEMENTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REGLEMENTRowChanging As REGLEMENTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REGLEMENTRowChanged As REGLEMENTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REGLEMENTRowDeleting As REGLEMENTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REGLEMENTRowDeleted As REGLEMENTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddREGLEMENTRow(ByVal row As REGLEMENTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddREGLEMENTRow(ByVal RGL_IDFACT As Short, ByVal RGL_MONTANT As Decimal, ByVal RGL_DATE As Date, ByVal RGL_REF As String, ByVal RGL_ETAT As Short, ByVal RGL_TYPEFACT As Short, ByVal RGL_COMM As String) As REGLEMENTRow
            Dim rowREGLEMENTRow As REGLEMENTRow = CType(Me.NewRow,REGLEMENTRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, RGL_IDFACT, RGL_MONTANT, RGL_DATE, RGL_REF, RGL_ETAT, RGL_TYPEFACT, RGL_COMM}
            rowREGLEMENTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowREGLEMENTRow)
            Return rowREGLEMENTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByRGL_ID(ByVal RGL_ID As Short) As REGLEMENTRow
            Return CType(Me.Rows.Find(New Object() {RGL_ID}),REGLEMENTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As REGLEMENTDataTable = CType(MyBase.Clone,REGLEMENTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New REGLEMENTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRGL_ID = MyBase.Columns("RGL_ID")
            Me.columnRGL_IDFACT = MyBase.Columns("RGL_IDFACT")
            Me.columnRGL_MONTANT = MyBase.Columns("RGL_MONTANT")
            Me.columnRGL_DATE = MyBase.Columns("RGL_DATE")
            Me.columnRGL_REF = MyBase.Columns("RGL_REF")
            Me.columnRGL_ETAT = MyBase.Columns("RGL_ETAT")
            Me.columnRGL_TYPEFACT = MyBase.Columns("RGL_TYPEFACT")
            Me.columnRGL_COMM = MyBase.Columns("RGL_COMM")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRGL_ID = New Global.System.Data.DataColumn("RGL_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRGL_ID)
            Me.columnRGL_IDFACT = New Global.System.Data.DataColumn("RGL_IDFACT", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRGL_IDFACT)
            Me.columnRGL_MONTANT = New Global.System.Data.DataColumn("RGL_MONTANT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRGL_MONTANT)
            Me.columnRGL_DATE = New Global.System.Data.DataColumn("RGL_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRGL_DATE)
            Me.columnRGL_REF = New Global.System.Data.DataColumn("RGL_REF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRGL_REF)
            Me.columnRGL_ETAT = New Global.System.Data.DataColumn("RGL_ETAT", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRGL_ETAT)
            Me.columnRGL_TYPEFACT = New Global.System.Data.DataColumn("RGL_TYPEFACT", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRGL_TYPEFACT)
            Me.columnRGL_COMM = New Global.System.Data.DataColumn("RGL_COMM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRGL_COMM)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnRGL_ID}, true))
            Me.columnRGL_ID.AutoIncrement = true
            Me.columnRGL_ID.AllowDBNull = false
            Me.columnRGL_ID.ReadOnly = true
            Me.columnRGL_ID.Unique = true
            Me.columnRGL_IDFACT.AllowDBNull = false
            Me.columnRGL_REF.MaxLength = 50
            Me.columnRGL_COMM.MaxLength = 1073741823
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewREGLEMENTRow() As REGLEMENTRow
            Return CType(Me.NewRow,REGLEMENTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New REGLEMENTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(REGLEMENTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.REGLEMENTRowChangedEvent) Is Nothing) Then
                RaiseEvent REGLEMENTRowChanged(Me, New REGLEMENTRowChangeEvent(CType(e.Row,REGLEMENTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.REGLEMENTRowChangingEvent) Is Nothing) Then
                RaiseEvent REGLEMENTRowChanging(Me, New REGLEMENTRowChangeEvent(CType(e.Row,REGLEMENTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.REGLEMENTRowDeletedEvent) Is Nothing) Then
                RaiseEvent REGLEMENTRowDeleted(Me, New REGLEMENTRowChangeEvent(CType(e.Row,REGLEMENTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.REGLEMENTRowDeletingEvent) Is Nothing) Then
                RaiseEvent REGLEMENTRowDeleting(Me, New REGLEMENTRowChangeEvent(CType(e.Row,REGLEMENTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveREGLEMENTRow(ByVal row As REGLEMENTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsVinicom = New dsVinicom()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "REGLEMENTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CONSTANTESDataTable
        Inherits Global.System.Data.TypedTableBase(Of CONSTANTESRow)
        
        Private columnCST_SOC_NOMSOC As Global.System.Data.DataColumn
        
        Private columnCST_SOC_ADRESSE_RUE1 As Global.System.Data.DataColumn
        
        Private columnCST_SOC_ADRESSE_RUE2 As Global.System.Data.DataColumn
        
        Private columnCST_SOC_ADRESSE_CP As Global.System.Data.DataColumn
        
        Private columnCST_SOC_ADRESSE_VILLE As Global.System.Data.DataColumn
        
        Private columnCST_SOC_TEL As Global.System.Data.DataColumn
        
        Private columnCST_SOC_FAX As Global.System.Data.DataColumn
        
        Private columnCST_SOC_PORT As Global.System.Data.DataColumn
        
        Private columnCST_SOC_EMAIL As Global.System.Data.DataColumn
        
        Private columnCST_FAX_PAGE_GARDE As Global.System.Data.DataColumn
        
        Private columnCST_FAX_ENVOI_PAGE_GARDE As Global.System.Data.DataColumn
        
        Private columnCST_FAX_SERVERNAME As Global.System.Data.DataColumn
        
        Private columnCST_DERN_NUM_CMD_CLT As Global.System.Data.DataColumn
        
        Private columnCST_DERN_NUM_SCMD As Global.System.Data.DataColumn
        
        Private columnCST_DERN_NUM_BA As Global.System.Data.DataColumn
        
        Private columnCST_VERSION_BD As Global.System.Data.DataColumn
        
        Private columnCST_FAX_PREFIX As Global.System.Data.DataColumn
        
        Private columnCST_TX_COMMISSION As Global.System.Data.DataColumn
        
        Private columnCST_DERN_NUM_FACTCOM As Global.System.Data.DataColumn
        
        Private columnCST_PATH_FACTCOM As Global.System.Data.DataColumn
        
        Private columnCST_DERN_NUM_FACT_TRP As Global.System.Data.DataColumn
        
        Private columnCST_TAXES_TRP As Global.System.Data.DataColumn
        
        Private columnCST_PATH_FACTTRP As Global.System.Data.DataColumn
        
        Private columnCST_TRP_IDMODEREGLEMENT As Global.System.Data.DataColumn
        
        Private columnCST_SOC2_NOMSOC As Global.System.Data.DataColumn
        
        Private columnCST_SOC2_ADRESSE_RUE1 As Global.System.Data.DataColumn
        
        Private columnCST_SOC2_ADRESSE_RUE2 As Global.System.Data.DataColumn
        
        Private columnCST_SOC2_ADRESSE_CP As Global.System.Data.DataColumn
        
        Private columnCST_SOC2_ADRESSE_VILLE As Global.System.Data.DataColumn
        
        Private columnCST_SOC2_TEL As Global.System.Data.DataColumn
        
        Private columnCST_SOC2_FAX As Global.System.Data.DataColumn
        
        Private columnCST_SOC2_EMAIL As Global.System.Data.DataColumn
        
        Private columnCST_SOC2_PORT As Global.System.Data.DataColumn
        
        Private columnCST_PLTFRM_NOM As Global.System.Data.DataColumn
        
        Private columnCST_PLTFRM_RUE1 As Global.System.Data.DataColumn
        
        Private columnCST_PLTFRM_RUE2 As Global.System.Data.DataColumn
        
        Private columnCST_PLTFRM_CP As Global.System.Data.DataColumn
        
        Private columnCST_PLTFRM_VILLE As Global.System.Data.DataColumn
        
        Private columnCST_PLTFRM_TEL As Global.System.Data.DataColumn
        
        Private columnCST_PLTFRM_FAX As Global.System.Data.DataColumn
        
        Private columnCST_PLTFRM_EMAIL As Global.System.Data.DataColumn
        
        Private columnCST_PLTFRM_PORT As Global.System.Data.DataColumn
        
        Private columnCST_TRP_TXGAZOLE As Global.System.Data.DataColumn
        
        Private columnCST_PU_PALL_PREP As Global.System.Data.DataColumn
        
        Private columnCST_PU_PALL_NONPREP As Global.System.Data.DataColumn
        
        Private columnFTP_HOSTNAME As Global.System.Data.DataColumn
        
        Private columnFTP_USERNAME As Global.System.Data.DataColumn
        
        Private columnFTP_PASSWORD As Global.System.Data.DataColumn
        
        Private columnFTP_REMOTEDIR As Global.System.Data.DataColumn
        
        Private columnFTP_LOCKFROMFILENAME As Global.System.Data.DataColumn
        
        Private columnFTP_LOCKTOFILENAME As Global.System.Data.DataColumn
        
        Private columnCST_DERN_NUM_FACT_COLISAGE As Global.System.Data.DataColumn
        
        Private columnCST_COL_IDMODEREGLEMENT As Global.System.Data.DataColumn
        
        Private columnCST_FACT_COL_TAXES As Global.System.Data.DataColumn
        
        Private columnCST_FACT_COL_PU_COLIS As Global.System.Data.DataColumn
        
        Private columnCST_SOC_RCS As Global.System.Data.DataColumn
        
        Private columnCST_SOC_TVAINTRA As Global.System.Data.DataColumn
        
        Private columnCST_SOC_LICENCE As Global.System.Data.DataColumn
        
        Private columnCST_SOC2_RCS As Global.System.Data.DataColumn
        
        Private columnCST_SOC2_TVAINTRA As Global.System.Data.DataColumn
        
        Private columnCST_SOC2_LICENCE As Global.System.Data.DataColumn
        
        Private columnCST_EXPORT_COMPTA_PATH As Global.System.Data.DataColumn
        
        Private columnCST_SOC_COMPTETVA As Global.System.Data.DataColumn
        
        Private columnCST_SOC_COMPTEPRODUIT As Global.System.Data.DataColumn
        
        Private columnCST_SOC_COMPTEBANQUE As Global.System.Data.DataColumn
        
        Private columnCST_SOC2_COMPTETVA As Global.System.Data.DataColumn
        
        Private columnCST_SOC2_COMPTEPRODUIT As Global.System.Data.DataColumn
        
        Private columnCST_SOC2_COMPTEBANQUE As Global.System.Data.DataColumn
        
        Private columnCST_SOC2_COMPTEPRODUIT_COL As Global.System.Data.DataColumn
        
        Private columnCST_ID As Global.System.Data.DataColumn
        
        Private columnCST_EDI_HOST As Global.System.Data.DataColumn
        
        Private columnCST_EDI_PORT As Global.System.Data.DataColumn
        
        Private columnCST_EDI_FROM As Global.System.Data.DataColumn
        
        Private columnCST_EDI_TEMP As Global.System.Data.DataColumn
        
        Private columnCST_SRVCE_PATH As Global.System.Data.DataColumn
        
        Private columnCST_SRVCE_NBSEC As Global.System.Data.DataColumn
        
        Private columnCST_SRVCE_PATHERROR As Global.System.Data.DataColumn
        
        Private columnCST_DERN_NUM_FACT_HBV As Global.System.Data.DataColumn
        
        Private columnCST_FTPEDI_SRV As Global.System.Data.DataColumn
        
        Private columnCST_FTPEDI_USER As Global.System.Data.DataColumn
        
        Private columnCST_FTPEDI_PWD As Global.System.Data.DataColumn
        
        Private columnCST_FTPEDI_PORT As Global.System.Data.DataColumn
        
        Private columnCST_FTPEDI_REP As Global.System.Data.DataColumn
        
        Private columnCST_FTPEDI_REPLOCAL As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CONSTANTES"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SOC_NOMSOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SOC_NOMSOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SOC_ADRESSE_RUE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SOC_ADRESSE_RUE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SOC_ADRESSE_RUE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SOC_ADRESSE_RUE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SOC_ADRESSE_CPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SOC_ADRESSE_CP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SOC_ADRESSE_VILLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SOC_ADRESSE_VILLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SOC_TELColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SOC_TEL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SOC_FAXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SOC_FAX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SOC_PORTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SOC_PORT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SOC_EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SOC_EMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_FAX_PAGE_GARDEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_FAX_PAGE_GARDE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_FAX_ENVOI_PAGE_GARDEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_FAX_ENVOI_PAGE_GARDE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_FAX_SERVERNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_FAX_SERVERNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_DERN_NUM_CMD_CLTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_DERN_NUM_CMD_CLT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_DERN_NUM_SCMDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_DERN_NUM_SCMD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_DERN_NUM_BAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_DERN_NUM_BA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_VERSION_BDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_VERSION_BD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_FAX_PREFIXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_FAX_PREFIX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_TX_COMMISSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_TX_COMMISSION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_DERN_NUM_FACTCOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_DERN_NUM_FACTCOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_PATH_FACTCOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_PATH_FACTCOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_DERN_NUM_FACT_TRPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_DERN_NUM_FACT_TRP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_TAXES_TRPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_TAXES_TRP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_PATH_FACTTRPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_PATH_FACTTRP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_TRP_IDMODEREGLEMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_TRP_IDMODEREGLEMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SOC2_NOMSOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SOC2_NOMSOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SOC2_ADRESSE_RUE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SOC2_ADRESSE_RUE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SOC2_ADRESSE_RUE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SOC2_ADRESSE_RUE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SOC2_ADRESSE_CPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SOC2_ADRESSE_CP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SOC2_ADRESSE_VILLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SOC2_ADRESSE_VILLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SOC2_TELColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SOC2_TEL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SOC2_FAXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SOC2_FAX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SOC2_EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SOC2_EMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SOC2_PORTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SOC2_PORT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_PLTFRM_NOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_PLTFRM_NOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_PLTFRM_RUE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_PLTFRM_RUE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_PLTFRM_RUE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_PLTFRM_RUE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_PLTFRM_CPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_PLTFRM_CP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_PLTFRM_VILLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_PLTFRM_VILLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_PLTFRM_TELColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_PLTFRM_TEL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_PLTFRM_FAXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_PLTFRM_FAX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_PLTFRM_EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_PLTFRM_EMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_PLTFRM_PORTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_PLTFRM_PORT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_TRP_TXGAZOLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_TRP_TXGAZOLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_PU_PALL_PREPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_PU_PALL_PREP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_PU_PALL_NONPREPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_PU_PALL_NONPREP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTP_HOSTNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTP_HOSTNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTP_USERNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTP_USERNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTP_PASSWORDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTP_PASSWORD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTP_REMOTEDIRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTP_REMOTEDIR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTP_LOCKFROMFILENAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTP_LOCKFROMFILENAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTP_LOCKTOFILENAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTP_LOCKTOFILENAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_DERN_NUM_FACT_COLISAGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_DERN_NUM_FACT_COLISAGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_COL_IDMODEREGLEMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_COL_IDMODEREGLEMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_FACT_COL_TAXESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_FACT_COL_TAXES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_FACT_COL_PU_COLISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_FACT_COL_PU_COLIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SOC_RCSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SOC_RCS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SOC_TVAINTRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SOC_TVAINTRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SOC_LICENCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SOC_LICENCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SOC2_RCSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SOC2_RCS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SOC2_TVAINTRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SOC2_TVAINTRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SOC2_LICENCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SOC2_LICENCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_EXPORT_COMPTA_PATHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_EXPORT_COMPTA_PATH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SOC_COMPTETVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SOC_COMPTETVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SOC_COMPTEPRODUITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SOC_COMPTEPRODUIT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SOC_COMPTEBANQUEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SOC_COMPTEBANQUE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SOC2_COMPTETVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SOC2_COMPTETVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SOC2_COMPTEPRODUITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SOC2_COMPTEPRODUIT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SOC2_COMPTEBANQUEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SOC2_COMPTEBANQUE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SOC2_COMPTEPRODUIT_COLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SOC2_COMPTEPRODUIT_COL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_EDI_HOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_EDI_HOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_EDI_PORTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_EDI_PORT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_EDI_FROMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_EDI_FROM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_EDI_TEMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_EDI_TEMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SRVCE_PATHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SRVCE_PATH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SRVCE_NBSECColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SRVCE_NBSEC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_SRVCE_PATHERRORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_SRVCE_PATHERROR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_DERN_NUM_FACT_HBVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_DERN_NUM_FACT_HBV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_FTPEDI_SRVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_FTPEDI_SRV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_FTPEDI_USERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_FTPEDI_USER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_FTPEDI_PWDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_FTPEDI_PWD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_FTPEDI_PORTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_FTPEDI_PORT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_FTPEDI_REPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_FTPEDI_REP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CST_FTPEDI_REPLOCALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCST_FTPEDI_REPLOCAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CONSTANTESRow
            Get
                Return CType(Me.Rows(index),CONSTANTESRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CONSTANTESRowChanging As CONSTANTESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CONSTANTESRowChanged As CONSTANTESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CONSTANTESRowDeleting As CONSTANTESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CONSTANTESRowDeleted As CONSTANTESRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCONSTANTESRow(ByVal row As CONSTANTESRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCONSTANTESRow( _
                    ByVal CST_SOC_NOMSOC As String,  _
                    ByVal CST_SOC_ADRESSE_RUE1 As String,  _
                    ByVal CST_SOC_ADRESSE_RUE2 As String,  _
                    ByVal CST_SOC_ADRESSE_CP As String,  _
                    ByVal CST_SOC_ADRESSE_VILLE As String,  _
                    ByVal CST_SOC_TEL As String,  _
                    ByVal CST_SOC_FAX As String,  _
                    ByVal CST_SOC_PORT As String,  _
                    ByVal CST_SOC_EMAIL As String,  _
                    ByVal CST_FAX_PAGE_GARDE As String,  _
                    ByVal CST_FAX_ENVOI_PAGE_GARDE As Boolean,  _
                    ByVal CST_FAX_SERVERNAME As String,  _
                    ByVal CST_DERN_NUM_CMD_CLT As Integer,  _
                    ByVal CST_DERN_NUM_SCMD As Integer,  _
                    ByVal CST_DERN_NUM_BA As Integer,  _
                    ByVal CST_VERSION_BD As String,  _
                    ByVal CST_FAX_PREFIX As String,  _
                    ByVal CST_TX_COMMISSION As Single,  _
                    ByVal CST_DERN_NUM_FACTCOM As Integer,  _
                    ByVal CST_PATH_FACTCOM As String,  _
                    ByVal CST_DERN_NUM_FACT_TRP As Integer,  _
                    ByVal CST_TAXES_TRP As Double,  _
                    ByVal CST_PATH_FACTTRP As String,  _
                    ByVal CST_TRP_IDMODEREGLEMENT As String,  _
                    ByVal CST_SOC2_NOMSOC As String,  _
                    ByVal CST_SOC2_ADRESSE_RUE1 As String,  _
                    ByVal CST_SOC2_ADRESSE_RUE2 As String,  _
                    ByVal CST_SOC2_ADRESSE_CP As String,  _
                    ByVal CST_SOC2_ADRESSE_VILLE As String,  _
                    ByVal CST_SOC2_TEL As String,  _
                    ByVal CST_SOC2_FAX As String,  _
                    ByVal CST_SOC2_EMAIL As String,  _
                    ByVal CST_SOC2_PORT As String,  _
                    ByVal CST_PLTFRM_NOM As String,  _
                    ByVal CST_PLTFRM_RUE1 As String,  _
                    ByVal CST_PLTFRM_RUE2 As String,  _
                    ByVal CST_PLTFRM_CP As String,  _
                    ByVal CST_PLTFRM_VILLE As String,  _
                    ByVal CST_PLTFRM_TEL As String,  _
                    ByVal CST_PLTFRM_FAX As String,  _
                    ByVal CST_PLTFRM_EMAIL As String,  _
                    ByVal CST_PLTFRM_PORT As String,  _
                    ByVal CST_TRP_TXGAZOLE As Double,  _
                    ByVal CST_PU_PALL_PREP As Double,  _
                    ByVal CST_PU_PALL_NONPREP As Double,  _
                    ByVal FTP_HOSTNAME As String,  _
                    ByVal FTP_USERNAME As String,  _
                    ByVal FTP_PASSWORD As String,  _
                    ByVal FTP_REMOTEDIR As String,  _
                    ByVal FTP_LOCKFROMFILENAME As String,  _
                    ByVal FTP_LOCKTOFILENAME As String,  _
                    ByVal CST_DERN_NUM_FACT_COLISAGE As Short,  _
                    ByVal CST_COL_IDMODEREGLEMENT As Short,  _
                    ByVal CST_FACT_COL_TAXES As Double,  _
                    ByVal CST_FACT_COL_PU_COLIS As Double,  _
                    ByVal CST_SOC_RCS As String,  _
                    ByVal CST_SOC_TVAINTRA As String,  _
                    ByVal CST_SOC_LICENCE As String,  _
                    ByVal CST_SOC2_RCS As String,  _
                    ByVal CST_SOC2_TVAINTRA As String,  _
                    ByVal CST_SOC2_LICENCE As String,  _
                    ByVal CST_EXPORT_COMPTA_PATH As String,  _
                    ByVal CST_SOC_COMPTETVA As String,  _
                    ByVal CST_SOC_COMPTEPRODUIT As String,  _
                    ByVal CST_SOC_COMPTEBANQUE As String,  _
                    ByVal CST_SOC2_COMPTETVA As String,  _
                    ByVal CST_SOC2_COMPTEPRODUIT As String,  _
                    ByVal CST_SOC2_COMPTEBANQUE As String,  _
                    ByVal CST_SOC2_COMPTEPRODUIT_COL As String,  _
                    ByVal CST_ID As Short,  _
                    ByVal CST_EDI_HOST As String,  _
                    ByVal CST_EDI_PORT As String,  _
                    ByVal CST_EDI_FROM As String,  _
                    ByVal CST_EDI_TEMP As String,  _
                    ByVal CST_SRVCE_PATH As String,  _
                    ByVal CST_SRVCE_NBSEC As String,  _
                    ByVal CST_SRVCE_PATHERROR As String,  _
                    ByVal CST_DERN_NUM_FACT_HBV As Integer,  _
                    ByVal CST_FTPEDI_SRV As String,  _
                    ByVal CST_FTPEDI_USER As String,  _
                    ByVal CST_FTPEDI_PWD As String,  _
                    ByVal CST_FTPEDI_PORT As String,  _
                    ByVal CST_FTPEDI_REP As String,  _
                    ByVal CST_FTPEDI_REPLOCAL As String) As CONSTANTESRow
            Dim rowCONSTANTESRow As CONSTANTESRow = CType(Me.NewRow,CONSTANTESRow)
            Dim columnValuesArray() As Object = New Object() {CST_SOC_NOMSOC, CST_SOC_ADRESSE_RUE1, CST_SOC_ADRESSE_RUE2, CST_SOC_ADRESSE_CP, CST_SOC_ADRESSE_VILLE, CST_SOC_TEL, CST_SOC_FAX, CST_SOC_PORT, CST_SOC_EMAIL, CST_FAX_PAGE_GARDE, CST_FAX_ENVOI_PAGE_GARDE, CST_FAX_SERVERNAME, CST_DERN_NUM_CMD_CLT, CST_DERN_NUM_SCMD, CST_DERN_NUM_BA, CST_VERSION_BD, CST_FAX_PREFIX, CST_TX_COMMISSION, CST_DERN_NUM_FACTCOM, CST_PATH_FACTCOM, CST_DERN_NUM_FACT_TRP, CST_TAXES_TRP, CST_PATH_FACTTRP, CST_TRP_IDMODEREGLEMENT, CST_SOC2_NOMSOC, CST_SOC2_ADRESSE_RUE1, CST_SOC2_ADRESSE_RUE2, CST_SOC2_ADRESSE_CP, CST_SOC2_ADRESSE_VILLE, CST_SOC2_TEL, CST_SOC2_FAX, CST_SOC2_EMAIL, CST_SOC2_PORT, CST_PLTFRM_NOM, CST_PLTFRM_RUE1, CST_PLTFRM_RUE2, CST_PLTFRM_CP, CST_PLTFRM_VILLE, CST_PLTFRM_TEL, CST_PLTFRM_FAX, CST_PLTFRM_EMAIL, CST_PLTFRM_PORT, CST_TRP_TXGAZOLE, CST_PU_PALL_PREP, CST_PU_PALL_NONPREP, FTP_HOSTNAME, FTP_USERNAME, FTP_PASSWORD, FTP_REMOTEDIR, FTP_LOCKFROMFILENAME, FTP_LOCKTOFILENAME, CST_DERN_NUM_FACT_COLISAGE, CST_COL_IDMODEREGLEMENT, CST_FACT_COL_TAXES, CST_FACT_COL_PU_COLIS, CST_SOC_RCS, CST_SOC_TVAINTRA, CST_SOC_LICENCE, CST_SOC2_RCS, CST_SOC2_TVAINTRA, CST_SOC2_LICENCE, CST_EXPORT_COMPTA_PATH, CST_SOC_COMPTETVA, CST_SOC_COMPTEPRODUIT, CST_SOC_COMPTEBANQUE, CST_SOC2_COMPTETVA, CST_SOC2_COMPTEPRODUIT, CST_SOC2_COMPTEBANQUE, CST_SOC2_COMPTEPRODUIT_COL, CST_ID, CST_EDI_HOST, CST_EDI_PORT, CST_EDI_FROM, CST_EDI_TEMP, CST_SRVCE_PATH, CST_SRVCE_NBSEC, CST_SRVCE_PATHERROR, CST_DERN_NUM_FACT_HBV, CST_FTPEDI_SRV, CST_FTPEDI_USER, CST_FTPEDI_PWD, CST_FTPEDI_PORT, CST_FTPEDI_REP, CST_FTPEDI_REPLOCAL}
            rowCONSTANTESRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCONSTANTESRow)
            Return rowCONSTANTESRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCST_ID(ByVal CST_ID As Short) As CONSTANTESRow
            Return CType(Me.Rows.Find(New Object() {CST_ID}),CONSTANTESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CONSTANTESDataTable = CType(MyBase.Clone,CONSTANTESDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CONSTANTESDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCST_SOC_NOMSOC = MyBase.Columns("CST_SOC_NOMSOC")
            Me.columnCST_SOC_ADRESSE_RUE1 = MyBase.Columns("CST_SOC_ADRESSE_RUE1")
            Me.columnCST_SOC_ADRESSE_RUE2 = MyBase.Columns("CST_SOC_ADRESSE_RUE2")
            Me.columnCST_SOC_ADRESSE_CP = MyBase.Columns("CST_SOC_ADRESSE_CP")
            Me.columnCST_SOC_ADRESSE_VILLE = MyBase.Columns("CST_SOC_ADRESSE_VILLE")
            Me.columnCST_SOC_TEL = MyBase.Columns("CST_SOC_TEL")
            Me.columnCST_SOC_FAX = MyBase.Columns("CST_SOC_FAX")
            Me.columnCST_SOC_PORT = MyBase.Columns("CST_SOC_PORT")
            Me.columnCST_SOC_EMAIL = MyBase.Columns("CST_SOC_EMAIL")
            Me.columnCST_FAX_PAGE_GARDE = MyBase.Columns("CST_FAX_PAGE_GARDE")
            Me.columnCST_FAX_ENVOI_PAGE_GARDE = MyBase.Columns("CST_FAX_ENVOI_PAGE_GARDE")
            Me.columnCST_FAX_SERVERNAME = MyBase.Columns("CST_FAX_SERVERNAME")
            Me.columnCST_DERN_NUM_CMD_CLT = MyBase.Columns("CST_DERN_NUM_CMD_CLT")
            Me.columnCST_DERN_NUM_SCMD = MyBase.Columns("CST_DERN_NUM_SCMD")
            Me.columnCST_DERN_NUM_BA = MyBase.Columns("CST_DERN_NUM_BA")
            Me.columnCST_VERSION_BD = MyBase.Columns("CST_VERSION_BD")
            Me.columnCST_FAX_PREFIX = MyBase.Columns("CST_FAX_PREFIX")
            Me.columnCST_TX_COMMISSION = MyBase.Columns("CST_TX_COMMISSION")
            Me.columnCST_DERN_NUM_FACTCOM = MyBase.Columns("CST_DERN_NUM_FACTCOM")
            Me.columnCST_PATH_FACTCOM = MyBase.Columns("CST_PATH_FACTCOM")
            Me.columnCST_DERN_NUM_FACT_TRP = MyBase.Columns("CST_DERN_NUM_FACT_TRP")
            Me.columnCST_TAXES_TRP = MyBase.Columns("CST_TAXES_TRP")
            Me.columnCST_PATH_FACTTRP = MyBase.Columns("CST_PATH_FACTTRP")
            Me.columnCST_TRP_IDMODEREGLEMENT = MyBase.Columns("CST_TRP_IDMODEREGLEMENT")
            Me.columnCST_SOC2_NOMSOC = MyBase.Columns("CST_SOC2_NOMSOC")
            Me.columnCST_SOC2_ADRESSE_RUE1 = MyBase.Columns("CST_SOC2_ADRESSE_RUE1")
            Me.columnCST_SOC2_ADRESSE_RUE2 = MyBase.Columns("CST_SOC2_ADRESSE_RUE2")
            Me.columnCST_SOC2_ADRESSE_CP = MyBase.Columns("CST_SOC2_ADRESSE_CP")
            Me.columnCST_SOC2_ADRESSE_VILLE = MyBase.Columns("CST_SOC2_ADRESSE_VILLE")
            Me.columnCST_SOC2_TEL = MyBase.Columns("CST_SOC2_TEL")
            Me.columnCST_SOC2_FAX = MyBase.Columns("CST_SOC2_FAX")
            Me.columnCST_SOC2_EMAIL = MyBase.Columns("CST_SOC2_EMAIL")
            Me.columnCST_SOC2_PORT = MyBase.Columns("CST_SOC2_PORT")
            Me.columnCST_PLTFRM_NOM = MyBase.Columns("CST_PLTFRM_NOM")
            Me.columnCST_PLTFRM_RUE1 = MyBase.Columns("CST_PLTFRM_RUE1")
            Me.columnCST_PLTFRM_RUE2 = MyBase.Columns("CST_PLTFRM_RUE2")
            Me.columnCST_PLTFRM_CP = MyBase.Columns("CST_PLTFRM_CP")
            Me.columnCST_PLTFRM_VILLE = MyBase.Columns("CST_PLTFRM_VILLE")
            Me.columnCST_PLTFRM_TEL = MyBase.Columns("CST_PLTFRM_TEL")
            Me.columnCST_PLTFRM_FAX = MyBase.Columns("CST_PLTFRM_FAX")
            Me.columnCST_PLTFRM_EMAIL = MyBase.Columns("CST_PLTFRM_EMAIL")
            Me.columnCST_PLTFRM_PORT = MyBase.Columns("CST_PLTFRM_PORT")
            Me.columnCST_TRP_TXGAZOLE = MyBase.Columns("CST_TRP_TXGAZOLE")
            Me.columnCST_PU_PALL_PREP = MyBase.Columns("CST_PU_PALL_PREP")
            Me.columnCST_PU_PALL_NONPREP = MyBase.Columns("CST_PU_PALL_NONPREP")
            Me.columnFTP_HOSTNAME = MyBase.Columns("FTP_HOSTNAME")
            Me.columnFTP_USERNAME = MyBase.Columns("FTP_USERNAME")
            Me.columnFTP_PASSWORD = MyBase.Columns("FTP_PASSWORD")
            Me.columnFTP_REMOTEDIR = MyBase.Columns("FTP_REMOTEDIR")
            Me.columnFTP_LOCKFROMFILENAME = MyBase.Columns("FTP_LOCKFROMFILENAME")
            Me.columnFTP_LOCKTOFILENAME = MyBase.Columns("FTP_LOCKTOFILENAME")
            Me.columnCST_DERN_NUM_FACT_COLISAGE = MyBase.Columns("CST_DERN_NUM_FACT_COLISAGE")
            Me.columnCST_COL_IDMODEREGLEMENT = MyBase.Columns("CST_COL_IDMODEREGLEMENT")
            Me.columnCST_FACT_COL_TAXES = MyBase.Columns("CST_FACT_COL_TAXES")
            Me.columnCST_FACT_COL_PU_COLIS = MyBase.Columns("CST_FACT_COL_PU_COLIS")
            Me.columnCST_SOC_RCS = MyBase.Columns("CST_SOC_RCS")
            Me.columnCST_SOC_TVAINTRA = MyBase.Columns("CST_SOC_TVAINTRA")
            Me.columnCST_SOC_LICENCE = MyBase.Columns("CST_SOC_LICENCE")
            Me.columnCST_SOC2_RCS = MyBase.Columns("CST_SOC2_RCS")
            Me.columnCST_SOC2_TVAINTRA = MyBase.Columns("CST_SOC2_TVAINTRA")
            Me.columnCST_SOC2_LICENCE = MyBase.Columns("CST_SOC2_LICENCE")
            Me.columnCST_EXPORT_COMPTA_PATH = MyBase.Columns("CST_EXPORT_COMPTA_PATH")
            Me.columnCST_SOC_COMPTETVA = MyBase.Columns("CST_SOC_COMPTETVA")
            Me.columnCST_SOC_COMPTEPRODUIT = MyBase.Columns("CST_SOC_COMPTEPRODUIT")
            Me.columnCST_SOC_COMPTEBANQUE = MyBase.Columns("CST_SOC_COMPTEBANQUE")
            Me.columnCST_SOC2_COMPTETVA = MyBase.Columns("CST_SOC2_COMPTETVA")
            Me.columnCST_SOC2_COMPTEPRODUIT = MyBase.Columns("CST_SOC2_COMPTEPRODUIT")
            Me.columnCST_SOC2_COMPTEBANQUE = MyBase.Columns("CST_SOC2_COMPTEBANQUE")
            Me.columnCST_SOC2_COMPTEPRODUIT_COL = MyBase.Columns("CST_SOC2_COMPTEPRODUIT_COL")
            Me.columnCST_ID = MyBase.Columns("CST_ID")
            Me.columnCST_EDI_HOST = MyBase.Columns("CST_EDI_HOST")
            Me.columnCST_EDI_PORT = MyBase.Columns("CST_EDI_PORT")
            Me.columnCST_EDI_FROM = MyBase.Columns("CST_EDI_FROM")
            Me.columnCST_EDI_TEMP = MyBase.Columns("CST_EDI_TEMP")
            Me.columnCST_SRVCE_PATH = MyBase.Columns("CST_SRVCE_PATH")
            Me.columnCST_SRVCE_NBSEC = MyBase.Columns("CST_SRVCE_NBSEC")
            Me.columnCST_SRVCE_PATHERROR = MyBase.Columns("CST_SRVCE_PATHERROR")
            Me.columnCST_DERN_NUM_FACT_HBV = MyBase.Columns("CST_DERN_NUM_FACT_HBV")
            Me.columnCST_FTPEDI_SRV = MyBase.Columns("CST_FTPEDI_SRV")
            Me.columnCST_FTPEDI_USER = MyBase.Columns("CST_FTPEDI_USER")
            Me.columnCST_FTPEDI_PWD = MyBase.Columns("CST_FTPEDI_PWD")
            Me.columnCST_FTPEDI_PORT = MyBase.Columns("CST_FTPEDI_PORT")
            Me.columnCST_FTPEDI_REP = MyBase.Columns("CST_FTPEDI_REP")
            Me.columnCST_FTPEDI_REPLOCAL = MyBase.Columns("CST_FTPEDI_REPLOCAL")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCST_SOC_NOMSOC = New Global.System.Data.DataColumn("CST_SOC_NOMSOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SOC_NOMSOC)
            Me.columnCST_SOC_ADRESSE_RUE1 = New Global.System.Data.DataColumn("CST_SOC_ADRESSE_RUE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SOC_ADRESSE_RUE1)
            Me.columnCST_SOC_ADRESSE_RUE2 = New Global.System.Data.DataColumn("CST_SOC_ADRESSE_RUE2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SOC_ADRESSE_RUE2)
            Me.columnCST_SOC_ADRESSE_CP = New Global.System.Data.DataColumn("CST_SOC_ADRESSE_CP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SOC_ADRESSE_CP)
            Me.columnCST_SOC_ADRESSE_VILLE = New Global.System.Data.DataColumn("CST_SOC_ADRESSE_VILLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SOC_ADRESSE_VILLE)
            Me.columnCST_SOC_TEL = New Global.System.Data.DataColumn("CST_SOC_TEL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SOC_TEL)
            Me.columnCST_SOC_FAX = New Global.System.Data.DataColumn("CST_SOC_FAX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SOC_FAX)
            Me.columnCST_SOC_PORT = New Global.System.Data.DataColumn("CST_SOC_PORT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SOC_PORT)
            Me.columnCST_SOC_EMAIL = New Global.System.Data.DataColumn("CST_SOC_EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SOC_EMAIL)
            Me.columnCST_FAX_PAGE_GARDE = New Global.System.Data.DataColumn("CST_FAX_PAGE_GARDE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_FAX_PAGE_GARDE)
            Me.columnCST_FAX_ENVOI_PAGE_GARDE = New Global.System.Data.DataColumn("CST_FAX_ENVOI_PAGE_GARDE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_FAX_ENVOI_PAGE_GARDE)
            Me.columnCST_FAX_SERVERNAME = New Global.System.Data.DataColumn("CST_FAX_SERVERNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_FAX_SERVERNAME)
            Me.columnCST_DERN_NUM_CMD_CLT = New Global.System.Data.DataColumn("CST_DERN_NUM_CMD_CLT", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_DERN_NUM_CMD_CLT)
            Me.columnCST_DERN_NUM_SCMD = New Global.System.Data.DataColumn("CST_DERN_NUM_SCMD", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_DERN_NUM_SCMD)
            Me.columnCST_DERN_NUM_BA = New Global.System.Data.DataColumn("CST_DERN_NUM_BA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_DERN_NUM_BA)
            Me.columnCST_VERSION_BD = New Global.System.Data.DataColumn("CST_VERSION_BD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_VERSION_BD)
            Me.columnCST_FAX_PREFIX = New Global.System.Data.DataColumn("CST_FAX_PREFIX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_FAX_PREFIX)
            Me.columnCST_TX_COMMISSION = New Global.System.Data.DataColumn("CST_TX_COMMISSION", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_TX_COMMISSION)
            Me.columnCST_DERN_NUM_FACTCOM = New Global.System.Data.DataColumn("CST_DERN_NUM_FACTCOM", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_DERN_NUM_FACTCOM)
            Me.columnCST_PATH_FACTCOM = New Global.System.Data.DataColumn("CST_PATH_FACTCOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_PATH_FACTCOM)
            Me.columnCST_DERN_NUM_FACT_TRP = New Global.System.Data.DataColumn("CST_DERN_NUM_FACT_TRP", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_DERN_NUM_FACT_TRP)
            Me.columnCST_TAXES_TRP = New Global.System.Data.DataColumn("CST_TAXES_TRP", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_TAXES_TRP)
            Me.columnCST_PATH_FACTTRP = New Global.System.Data.DataColumn("CST_PATH_FACTTRP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_PATH_FACTTRP)
            Me.columnCST_TRP_IDMODEREGLEMENT = New Global.System.Data.DataColumn("CST_TRP_IDMODEREGLEMENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_TRP_IDMODEREGLEMENT)
            Me.columnCST_SOC2_NOMSOC = New Global.System.Data.DataColumn("CST_SOC2_NOMSOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SOC2_NOMSOC)
            Me.columnCST_SOC2_ADRESSE_RUE1 = New Global.System.Data.DataColumn("CST_SOC2_ADRESSE_RUE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SOC2_ADRESSE_RUE1)
            Me.columnCST_SOC2_ADRESSE_RUE2 = New Global.System.Data.DataColumn("CST_SOC2_ADRESSE_RUE2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SOC2_ADRESSE_RUE2)
            Me.columnCST_SOC2_ADRESSE_CP = New Global.System.Data.DataColumn("CST_SOC2_ADRESSE_CP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SOC2_ADRESSE_CP)
            Me.columnCST_SOC2_ADRESSE_VILLE = New Global.System.Data.DataColumn("CST_SOC2_ADRESSE_VILLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SOC2_ADRESSE_VILLE)
            Me.columnCST_SOC2_TEL = New Global.System.Data.DataColumn("CST_SOC2_TEL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SOC2_TEL)
            Me.columnCST_SOC2_FAX = New Global.System.Data.DataColumn("CST_SOC2_FAX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SOC2_FAX)
            Me.columnCST_SOC2_EMAIL = New Global.System.Data.DataColumn("CST_SOC2_EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SOC2_EMAIL)
            Me.columnCST_SOC2_PORT = New Global.System.Data.DataColumn("CST_SOC2_PORT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SOC2_PORT)
            Me.columnCST_PLTFRM_NOM = New Global.System.Data.DataColumn("CST_PLTFRM_NOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_PLTFRM_NOM)
            Me.columnCST_PLTFRM_RUE1 = New Global.System.Data.DataColumn("CST_PLTFRM_RUE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_PLTFRM_RUE1)
            Me.columnCST_PLTFRM_RUE2 = New Global.System.Data.DataColumn("CST_PLTFRM_RUE2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_PLTFRM_RUE2)
            Me.columnCST_PLTFRM_CP = New Global.System.Data.DataColumn("CST_PLTFRM_CP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_PLTFRM_CP)
            Me.columnCST_PLTFRM_VILLE = New Global.System.Data.DataColumn("CST_PLTFRM_VILLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_PLTFRM_VILLE)
            Me.columnCST_PLTFRM_TEL = New Global.System.Data.DataColumn("CST_PLTFRM_TEL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_PLTFRM_TEL)
            Me.columnCST_PLTFRM_FAX = New Global.System.Data.DataColumn("CST_PLTFRM_FAX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_PLTFRM_FAX)
            Me.columnCST_PLTFRM_EMAIL = New Global.System.Data.DataColumn("CST_PLTFRM_EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_PLTFRM_EMAIL)
            Me.columnCST_PLTFRM_PORT = New Global.System.Data.DataColumn("CST_PLTFRM_PORT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_PLTFRM_PORT)
            Me.columnCST_TRP_TXGAZOLE = New Global.System.Data.DataColumn("CST_TRP_TXGAZOLE", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_TRP_TXGAZOLE)
            Me.columnCST_PU_PALL_PREP = New Global.System.Data.DataColumn("CST_PU_PALL_PREP", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_PU_PALL_PREP)
            Me.columnCST_PU_PALL_NONPREP = New Global.System.Data.DataColumn("CST_PU_PALL_NONPREP", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_PU_PALL_NONPREP)
            Me.columnFTP_HOSTNAME = New Global.System.Data.DataColumn("FTP_HOSTNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTP_HOSTNAME)
            Me.columnFTP_USERNAME = New Global.System.Data.DataColumn("FTP_USERNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTP_USERNAME)
            Me.columnFTP_PASSWORD = New Global.System.Data.DataColumn("FTP_PASSWORD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTP_PASSWORD)
            Me.columnFTP_REMOTEDIR = New Global.System.Data.DataColumn("FTP_REMOTEDIR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTP_REMOTEDIR)
            Me.columnFTP_LOCKFROMFILENAME = New Global.System.Data.DataColumn("FTP_LOCKFROMFILENAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTP_LOCKFROMFILENAME)
            Me.columnFTP_LOCKTOFILENAME = New Global.System.Data.DataColumn("FTP_LOCKTOFILENAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTP_LOCKTOFILENAME)
            Me.columnCST_DERN_NUM_FACT_COLISAGE = New Global.System.Data.DataColumn("CST_DERN_NUM_FACT_COLISAGE", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_DERN_NUM_FACT_COLISAGE)
            Me.columnCST_COL_IDMODEREGLEMENT = New Global.System.Data.DataColumn("CST_COL_IDMODEREGLEMENT", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_COL_IDMODEREGLEMENT)
            Me.columnCST_FACT_COL_TAXES = New Global.System.Data.DataColumn("CST_FACT_COL_TAXES", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_FACT_COL_TAXES)
            Me.columnCST_FACT_COL_PU_COLIS = New Global.System.Data.DataColumn("CST_FACT_COL_PU_COLIS", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_FACT_COL_PU_COLIS)
            Me.columnCST_SOC_RCS = New Global.System.Data.DataColumn("CST_SOC_RCS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SOC_RCS)
            Me.columnCST_SOC_TVAINTRA = New Global.System.Data.DataColumn("CST_SOC_TVAINTRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SOC_TVAINTRA)
            Me.columnCST_SOC_LICENCE = New Global.System.Data.DataColumn("CST_SOC_LICENCE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SOC_LICENCE)
            Me.columnCST_SOC2_RCS = New Global.System.Data.DataColumn("CST_SOC2_RCS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SOC2_RCS)
            Me.columnCST_SOC2_TVAINTRA = New Global.System.Data.DataColumn("CST_SOC2_TVAINTRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SOC2_TVAINTRA)
            Me.columnCST_SOC2_LICENCE = New Global.System.Data.DataColumn("CST_SOC2_LICENCE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SOC2_LICENCE)
            Me.columnCST_EXPORT_COMPTA_PATH = New Global.System.Data.DataColumn("CST_EXPORT_COMPTA_PATH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_EXPORT_COMPTA_PATH)
            Me.columnCST_SOC_COMPTETVA = New Global.System.Data.DataColumn("CST_SOC_COMPTETVA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SOC_COMPTETVA)
            Me.columnCST_SOC_COMPTEPRODUIT = New Global.System.Data.DataColumn("CST_SOC_COMPTEPRODUIT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SOC_COMPTEPRODUIT)
            Me.columnCST_SOC_COMPTEBANQUE = New Global.System.Data.DataColumn("CST_SOC_COMPTEBANQUE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SOC_COMPTEBANQUE)
            Me.columnCST_SOC2_COMPTETVA = New Global.System.Data.DataColumn("CST_SOC2_COMPTETVA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SOC2_COMPTETVA)
            Me.columnCST_SOC2_COMPTEPRODUIT = New Global.System.Data.DataColumn("CST_SOC2_COMPTEPRODUIT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SOC2_COMPTEPRODUIT)
            Me.columnCST_SOC2_COMPTEBANQUE = New Global.System.Data.DataColumn("CST_SOC2_COMPTEBANQUE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SOC2_COMPTEBANQUE)
            Me.columnCST_SOC2_COMPTEPRODUIT_COL = New Global.System.Data.DataColumn("CST_SOC2_COMPTEPRODUIT_COL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SOC2_COMPTEPRODUIT_COL)
            Me.columnCST_ID = New Global.System.Data.DataColumn("CST_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_ID)
            Me.columnCST_EDI_HOST = New Global.System.Data.DataColumn("CST_EDI_HOST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_EDI_HOST)
            Me.columnCST_EDI_PORT = New Global.System.Data.DataColumn("CST_EDI_PORT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_EDI_PORT)
            Me.columnCST_EDI_FROM = New Global.System.Data.DataColumn("CST_EDI_FROM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_EDI_FROM)
            Me.columnCST_EDI_TEMP = New Global.System.Data.DataColumn("CST_EDI_TEMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_EDI_TEMP)
            Me.columnCST_SRVCE_PATH = New Global.System.Data.DataColumn("CST_SRVCE_PATH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SRVCE_PATH)
            Me.columnCST_SRVCE_NBSEC = New Global.System.Data.DataColumn("CST_SRVCE_NBSEC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SRVCE_NBSEC)
            Me.columnCST_SRVCE_PATHERROR = New Global.System.Data.DataColumn("CST_SRVCE_PATHERROR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_SRVCE_PATHERROR)
            Me.columnCST_DERN_NUM_FACT_HBV = New Global.System.Data.DataColumn("CST_DERN_NUM_FACT_HBV", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_DERN_NUM_FACT_HBV)
            Me.columnCST_FTPEDI_SRV = New Global.System.Data.DataColumn("CST_FTPEDI_SRV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_FTPEDI_SRV)
            Me.columnCST_FTPEDI_USER = New Global.System.Data.DataColumn("CST_FTPEDI_USER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_FTPEDI_USER)
            Me.columnCST_FTPEDI_PWD = New Global.System.Data.DataColumn("CST_FTPEDI_PWD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_FTPEDI_PWD)
            Me.columnCST_FTPEDI_PORT = New Global.System.Data.DataColumn("CST_FTPEDI_PORT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_FTPEDI_PORT)
            Me.columnCST_FTPEDI_REP = New Global.System.Data.DataColumn("CST_FTPEDI_REP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_FTPEDI_REP)
            Me.columnCST_FTPEDI_REPLOCAL = New Global.System.Data.DataColumn("CST_FTPEDI_REPLOCAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCST_FTPEDI_REPLOCAL)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCST_ID}, true))
            Me.columnCST_SOC_NOMSOC.MaxLength = 50
            Me.columnCST_SOC_ADRESSE_RUE1.MaxLength = 50
            Me.columnCST_SOC_ADRESSE_RUE2.MaxLength = 50
            Me.columnCST_SOC_ADRESSE_CP.MaxLength = 50
            Me.columnCST_SOC_ADRESSE_VILLE.MaxLength = 50
            Me.columnCST_SOC_TEL.MaxLength = 50
            Me.columnCST_SOC_FAX.MaxLength = 50
            Me.columnCST_SOC_PORT.MaxLength = 50
            Me.columnCST_SOC_EMAIL.MaxLength = 50
            Me.columnCST_FAX_PAGE_GARDE.MaxLength = 50
            Me.columnCST_FAX_SERVERNAME.MaxLength = 50
            Me.columnCST_VERSION_BD.MaxLength = 50
            Me.columnCST_FAX_PREFIX.MaxLength = 50
            Me.columnCST_PATH_FACTCOM.MaxLength = 100
            Me.columnCST_PATH_FACTTRP.MaxLength = 50
            Me.columnCST_TRP_IDMODEREGLEMENT.MaxLength = 50
            Me.columnCST_SOC2_NOMSOC.MaxLength = 50
            Me.columnCST_SOC2_ADRESSE_RUE1.MaxLength = 50
            Me.columnCST_SOC2_ADRESSE_RUE2.MaxLength = 50
            Me.columnCST_SOC2_ADRESSE_CP.MaxLength = 50
            Me.columnCST_SOC2_ADRESSE_VILLE.MaxLength = 50
            Me.columnCST_SOC2_TEL.MaxLength = 50
            Me.columnCST_SOC2_FAX.MaxLength = 50
            Me.columnCST_SOC2_EMAIL.MaxLength = 50
            Me.columnCST_SOC2_PORT.MaxLength = 50
            Me.columnCST_PLTFRM_NOM.MaxLength = 50
            Me.columnCST_PLTFRM_RUE1.MaxLength = 50
            Me.columnCST_PLTFRM_RUE2.MaxLength = 50
            Me.columnCST_PLTFRM_CP.MaxLength = 50
            Me.columnCST_PLTFRM_VILLE.MaxLength = 50
            Me.columnCST_PLTFRM_TEL.MaxLength = 50
            Me.columnCST_PLTFRM_FAX.MaxLength = 50
            Me.columnCST_PLTFRM_EMAIL.MaxLength = 50
            Me.columnCST_PLTFRM_PORT.MaxLength = 50
            Me.columnFTP_HOSTNAME.MaxLength = 50
            Me.columnFTP_USERNAME.MaxLength = 50
            Me.columnFTP_PASSWORD.MaxLength = 50
            Me.columnFTP_REMOTEDIR.MaxLength = 50
            Me.columnFTP_LOCKFROMFILENAME.MaxLength = 50
            Me.columnFTP_LOCKTOFILENAME.MaxLength = 50
            Me.columnCST_SOC_RCS.MaxLength = 50
            Me.columnCST_SOC_TVAINTRA.MaxLength = 50
            Me.columnCST_SOC_LICENCE.MaxLength = 50
            Me.columnCST_SOC2_RCS.MaxLength = 50
            Me.columnCST_SOC2_TVAINTRA.MaxLength = 50
            Me.columnCST_SOC2_LICENCE.MaxLength = 50
            Me.columnCST_EXPORT_COMPTA_PATH.MaxLength = 100
            Me.columnCST_SOC_COMPTETVA.MaxLength = 10
            Me.columnCST_SOC_COMPTEPRODUIT.MaxLength = 10
            Me.columnCST_SOC_COMPTEBANQUE.MaxLength = 10
            Me.columnCST_SOC2_COMPTETVA.MaxLength = 10
            Me.columnCST_SOC2_COMPTEPRODUIT.MaxLength = 10
            Me.columnCST_SOC2_COMPTEBANQUE.MaxLength = 10
            Me.columnCST_SOC2_COMPTEPRODUIT_COL.MaxLength = 10
            Me.columnCST_ID.AllowDBNull = false
            Me.columnCST_ID.Unique = true
            Me.columnCST_EDI_HOST.MaxLength = 50
            Me.columnCST_EDI_PORT.MaxLength = 50
            Me.columnCST_EDI_FROM.MaxLength = 50
            Me.columnCST_EDI_TEMP.MaxLength = 50
            Me.columnCST_SRVCE_PATH.MaxLength = 100
            Me.columnCST_SRVCE_NBSEC.MaxLength = 10
            Me.columnCST_SRVCE_PATHERROR.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCONSTANTESRow() As CONSTANTESRow
            Return CType(Me.NewRow,CONSTANTESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CONSTANTESRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CONSTANTESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CONSTANTESRowChangedEvent) Is Nothing) Then
                RaiseEvent CONSTANTESRowChanged(Me, New CONSTANTESRowChangeEvent(CType(e.Row,CONSTANTESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CONSTANTESRowChangingEvent) Is Nothing) Then
                RaiseEvent CONSTANTESRowChanging(Me, New CONSTANTESRowChangeEvent(CType(e.Row,CONSTANTESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CONSTANTESRowDeletedEvent) Is Nothing) Then
                RaiseEvent CONSTANTESRowDeleted(Me, New CONSTANTESRowChangeEvent(CType(e.Row,CONSTANTESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CONSTANTESRowDeletingEvent) Is Nothing) Then
                RaiseEvent CONSTANTESRowDeleting(Me, New CONSTANTESRowChangeEvent(CType(e.Row,CONSTANTESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCONSTANTESRow(ByVal row As CONSTANTESRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsVinicom = New dsVinicom()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CONSTANTESDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MVT_STOCKDataTable
        Inherits Global.System.Data.TypedTableBase(Of MVT_STOCKRow)
        
        Private columnSTK_ID As Global.System.Data.DataColumn
        
        Private columnSTK_PRD_ID As Global.System.Data.DataColumn
        
        Private columnSTK_DATE As Global.System.Data.DataColumn
        
        Private columnSTK_TYPE As Global.System.Data.DataColumn
        
        Private columnSTK_REF_ID As Global.System.Data.DataColumn
        
        Private columnSTK_LIB As Global.System.Data.DataColumn
        
        Private columnSTK_QTE As Global.System.Data.DataColumn
        
        Private columnSTK_COMM As Global.System.Data.DataColumn
        
        Private columnSTK_ETAT As Global.System.Data.DataColumn
        
        Private columnSTK_IDFACTCOLISAGE As Global.System.Data.DataColumn
        
        Private columnSTK_QTECOLIS As Global.System.Data.DataColumn
        
        Private columnFRN_CODE As Global.System.Data.DataColumn
        
        Private columnPRD_CODE As Global.System.Data.DataColumn
        
        Private columnPRD_LIBELLE As Global.System.Data.DataColumn
        
        Private columnFRN_RS As Global.System.Data.DataColumn
        
        Private columnFRN_NOM As Global.System.Data.DataColumn
        
        Private columnCOND As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MVT_STOCK"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STK_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTK_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STK_PRD_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTK_PRD_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STK_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTK_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STK_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTK_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STK_REF_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTK_REF_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STK_LIBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTK_LIB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STK_QTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTK_QTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STK_COMMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTK_COMM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STK_ETATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTK_ETAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STK_IDFACTCOLISAGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTK_IDFACTCOLISAGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STK_QTECOLISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTK_QTECOLIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FRN_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFRN_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRD_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRD_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRD_LIBELLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRD_LIBELLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FRN_RSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFRN_RS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FRN_NOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFRN_NOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOND
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MVT_STOCKRow
            Get
                Return CType(Me.Rows(index),MVT_STOCKRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MVT_STOCKRowChanging As MVT_STOCKRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MVT_STOCKRowChanged As MVT_STOCKRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MVT_STOCKRowDeleting As MVT_STOCKRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MVT_STOCKRowDeleted As MVT_STOCKRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddMVT_STOCKRow(ByVal row As MVT_STOCKRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddMVT_STOCKRow( _
                    ByVal STK_PRD_ID As Integer,  _
                    ByVal STK_DATE As Date,  _
                    ByVal STK_TYPE As Double,  _
                    ByVal STK_REF_ID As Integer,  _
                    ByVal STK_LIB As String,  _
                    ByVal STK_QTE As Integer,  _
                    ByVal STK_COMM As String,  _
                    ByVal STK_ETAT As Integer,  _
                    ByVal STK_IDFACTCOLISAGE As Integer,  _
                    ByVal STK_QTECOLIS As Integer,  _
                    ByVal FRN_CODE As String,  _
                    ByVal PRD_CODE As String,  _
                    ByVal PRD_LIBELLE As String,  _
                    ByVal FRN_RS As String,  _
                    ByVal FRN_NOM As String,  _
                    ByVal COND As Integer) As MVT_STOCKRow
            Dim rowMVT_STOCKRow As MVT_STOCKRow = CType(Me.NewRow,MVT_STOCKRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, STK_PRD_ID, STK_DATE, STK_TYPE, STK_REF_ID, STK_LIB, STK_QTE, STK_COMM, STK_ETAT, STK_IDFACTCOLISAGE, STK_QTECOLIS, FRN_CODE, PRD_CODE, PRD_LIBELLE, FRN_RS, FRN_NOM, COND}
            rowMVT_STOCKRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMVT_STOCKRow)
            Return rowMVT_STOCKRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindBySTK_ID(ByVal STK_ID As Integer) As MVT_STOCKRow
            Return CType(Me.Rows.Find(New Object() {STK_ID}),MVT_STOCKRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MVT_STOCKDataTable = CType(MyBase.Clone,MVT_STOCKDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MVT_STOCKDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSTK_ID = MyBase.Columns("STK_ID")
            Me.columnSTK_PRD_ID = MyBase.Columns("STK_PRD_ID")
            Me.columnSTK_DATE = MyBase.Columns("STK_DATE")
            Me.columnSTK_TYPE = MyBase.Columns("STK_TYPE")
            Me.columnSTK_REF_ID = MyBase.Columns("STK_REF_ID")
            Me.columnSTK_LIB = MyBase.Columns("STK_LIB")
            Me.columnSTK_QTE = MyBase.Columns("STK_QTE")
            Me.columnSTK_COMM = MyBase.Columns("STK_COMM")
            Me.columnSTK_ETAT = MyBase.Columns("STK_ETAT")
            Me.columnSTK_IDFACTCOLISAGE = MyBase.Columns("STK_IDFACTCOLISAGE")
            Me.columnSTK_QTECOLIS = MyBase.Columns("STK_QTECOLIS")
            Me.columnFRN_CODE = MyBase.Columns("FRN_CODE")
            Me.columnPRD_CODE = MyBase.Columns("PRD_CODE")
            Me.columnPRD_LIBELLE = MyBase.Columns("PRD_LIBELLE")
            Me.columnFRN_RS = MyBase.Columns("FRN_RS")
            Me.columnFRN_NOM = MyBase.Columns("FRN_NOM")
            Me.columnCOND = MyBase.Columns("COND")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSTK_ID = New Global.System.Data.DataColumn("STK_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTK_ID)
            Me.columnSTK_PRD_ID = New Global.System.Data.DataColumn("STK_PRD_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTK_PRD_ID)
            Me.columnSTK_DATE = New Global.System.Data.DataColumn("STK_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTK_DATE)
            Me.columnSTK_TYPE = New Global.System.Data.DataColumn("STK_TYPE", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTK_TYPE)
            Me.columnSTK_REF_ID = New Global.System.Data.DataColumn("STK_REF_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTK_REF_ID)
            Me.columnSTK_LIB = New Global.System.Data.DataColumn("STK_LIB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTK_LIB)
            Me.columnSTK_QTE = New Global.System.Data.DataColumn("STK_QTE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTK_QTE)
            Me.columnSTK_COMM = New Global.System.Data.DataColumn("STK_COMM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTK_COMM)
            Me.columnSTK_ETAT = New Global.System.Data.DataColumn("STK_ETAT", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTK_ETAT)
            Me.columnSTK_IDFACTCOLISAGE = New Global.System.Data.DataColumn("STK_IDFACTCOLISAGE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTK_IDFACTCOLISAGE)
            Me.columnSTK_QTECOLIS = New Global.System.Data.DataColumn("STK_QTECOLIS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTK_QTECOLIS)
            Me.columnFRN_CODE = New Global.System.Data.DataColumn("FRN_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFRN_CODE)
            Me.columnPRD_CODE = New Global.System.Data.DataColumn("PRD_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRD_CODE)
            Me.columnPRD_LIBELLE = New Global.System.Data.DataColumn("PRD_LIBELLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRD_LIBELLE)
            Me.columnFRN_RS = New Global.System.Data.DataColumn("FRN_RS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFRN_RS)
            Me.columnFRN_NOM = New Global.System.Data.DataColumn("FRN_NOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFRN_NOM)
            Me.columnCOND = New Global.System.Data.DataColumn("COND", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOND)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSTK_ID}, true))
            Me.columnSTK_ID.AutoIncrement = true
            Me.columnSTK_ID.AllowDBNull = false
            Me.columnSTK_ID.ReadOnly = true
            Me.columnSTK_ID.Unique = true
            Me.columnSTK_LIB.MaxLength = 50
            Me.columnSTK_COMM.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewMVT_STOCKRow() As MVT_STOCKRow
            Return CType(Me.NewRow,MVT_STOCKRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MVT_STOCKRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MVT_STOCKRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MVT_STOCKRowChangedEvent) Is Nothing) Then
                RaiseEvent MVT_STOCKRowChanged(Me, New MVT_STOCKRowChangeEvent(CType(e.Row,MVT_STOCKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MVT_STOCKRowChangingEvent) Is Nothing) Then
                RaiseEvent MVT_STOCKRowChanging(Me, New MVT_STOCKRowChangeEvent(CType(e.Row,MVT_STOCKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MVT_STOCKRowDeletedEvent) Is Nothing) Then
                RaiseEvent MVT_STOCKRowDeleted(Me, New MVT_STOCKRowChangeEvent(CType(e.Row,MVT_STOCKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MVT_STOCKRowDeletingEvent) Is Nothing) Then
                RaiseEvent MVT_STOCKRowDeleting(Me, New MVT_STOCKRowChangeEvent(CType(e.Row,MVT_STOCKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveMVT_STOCKRow(ByVal row As MVT_STOCKRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsVinicom = New dsVinicom()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MVT_STOCKDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FRN_COMMDataTable
        Inherits Global.System.Data.TypedTableBase(Of FRN_COMMRow)
        
        Private columnFRNC_FRN_ID As Global.System.Data.DataColumn
        
        Private columnFRNC_TYPE_CLIENT As Global.System.Data.DataColumn
        
        Private columnFRNC_TX_COMM As Global.System.Data.DataColumn
        
        Private columnFRNC_ID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FRN_COMM"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FRNC_FRN_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFRNC_FRN_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FRNC_TYPE_CLIENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFRNC_TYPE_CLIENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FRNC_TX_COMMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFRNC_TX_COMM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FRNC_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFRNC_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FRN_COMMRow
            Get
                Return CType(Me.Rows(index),FRN_COMMRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FRN_COMMRowChanging As FRN_COMMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FRN_COMMRowChanged As FRN_COMMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FRN_COMMRowDeleting As FRN_COMMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FRN_COMMRowDeleted As FRN_COMMRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFRN_COMMRow(ByVal row As FRN_COMMRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFRN_COMMRow(ByVal FRNC_FRN_ID As Integer, ByVal FRNC_TYPE_CLIENT As String, ByVal FRNC_TX_COMM As Decimal) As FRN_COMMRow
            Dim rowFRN_COMMRow As FRN_COMMRow = CType(Me.NewRow,FRN_COMMRow)
            Dim columnValuesArray() As Object = New Object() {FRNC_FRN_ID, FRNC_TYPE_CLIENT, FRNC_TX_COMM, Nothing}
            rowFRN_COMMRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFRN_COMMRow)
            Return rowFRN_COMMRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByFRNC_FRN_IDFRNC_TYPE_CLIENT(ByVal FRNC_FRN_ID As Integer, ByVal FRNC_TYPE_CLIENT As String) As FRN_COMMRow
            Return CType(Me.Rows.Find(New Object() {FRNC_FRN_ID, FRNC_TYPE_CLIENT}),FRN_COMMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FRN_COMMDataTable = CType(MyBase.Clone,FRN_COMMDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FRN_COMMDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFRNC_FRN_ID = MyBase.Columns("FRNC_FRN_ID")
            Me.columnFRNC_TYPE_CLIENT = MyBase.Columns("FRNC_TYPE_CLIENT")
            Me.columnFRNC_TX_COMM = MyBase.Columns("FRNC_TX_COMM")
            Me.columnFRNC_ID = MyBase.Columns("FRNC_ID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFRNC_FRN_ID = New Global.System.Data.DataColumn("FRNC_FRN_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFRNC_FRN_ID)
            Me.columnFRNC_TYPE_CLIENT = New Global.System.Data.DataColumn("FRNC_TYPE_CLIENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFRNC_TYPE_CLIENT)
            Me.columnFRNC_TX_COMM = New Global.System.Data.DataColumn("FRNC_TX_COMM", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFRNC_TX_COMM)
            Me.columnFRNC_ID = New Global.System.Data.DataColumn("FRNC_ID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFRNC_ID)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFRNC_FRN_ID, Me.columnFRNC_TYPE_CLIENT}, true))
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint2", New Global.System.Data.DataColumn() {Me.columnFRNC_ID}, false))
            Me.columnFRNC_FRN_ID.AllowDBNull = false
            Me.columnFRNC_TYPE_CLIENT.AllowDBNull = false
            Me.columnFRNC_TYPE_CLIENT.MaxLength = 10
            Me.columnFRNC_ID.AutoIncrement = true
            Me.columnFRNC_ID.AllowDBNull = false
            Me.columnFRNC_ID.ReadOnly = true
            Me.columnFRNC_ID.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFRN_COMMRow() As FRN_COMMRow
            Return CType(Me.NewRow,FRN_COMMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FRN_COMMRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FRN_COMMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FRN_COMMRowChangedEvent) Is Nothing) Then
                RaiseEvent FRN_COMMRowChanged(Me, New FRN_COMMRowChangeEvent(CType(e.Row,FRN_COMMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FRN_COMMRowChangingEvent) Is Nothing) Then
                RaiseEvent FRN_COMMRowChanging(Me, New FRN_COMMRowChangeEvent(CType(e.Row,FRN_COMMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FRN_COMMRowDeletedEvent) Is Nothing) Then
                RaiseEvent FRN_COMMRowDeleted(Me, New FRN_COMMRowChangeEvent(CType(e.Row,FRN_COMMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FRN_COMMRowDeletingEvent) Is Nothing) Then
                RaiseEvent FRN_COMMRowDeleting(Me, New FRN_COMMRowChangeEvent(CType(e.Row,FRN_COMMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFRN_COMMRow(ByVal row As FRN_COMMRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsVinicom = New dsVinicom()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FRN_COMMDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TRANSPORTEURDataTable
        Inherits Global.System.Data.TypedTableBase(Of TRANSPORTEURRow)
        
        Private columnTRP_ID As Global.System.Data.DataColumn
        
        Private columnTRP_CODE As Global.System.Data.DataColumn
        
        Private columnTRP_NOM As Global.System.Data.DataColumn
        
        Private columnTRP_LIV_RUE1 As Global.System.Data.DataColumn
        
        Private columnTRP_LIV_RUE2 As Global.System.Data.DataColumn
        
        Private columnTRP_LIV_CP As Global.System.Data.DataColumn
        
        Private columnTRP_LIV_VILLE As Global.System.Data.DataColumn
        
        Private columnTRP_LIV_TEL As Global.System.Data.DataColumn
        
        Private columnTRP_LIV_FAX As Global.System.Data.DataColumn
        
        Private columnTRP_LIV_PORT As Global.System.Data.DataColumn
        
        Private columnTRP_LIV_EMAIL As Global.System.Data.DataColumn
        
        Private columnTRP_DEFAUT As Global.System.Data.DataColumn
        
        Private columnTRP_COMM As Global.System.Data.DataColumn
        
        Private columnTRP_LICENCE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TRANSPORTEUR"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRP_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRP_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRP_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRP_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRP_NOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRP_NOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRP_LIV_RUE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRP_LIV_RUE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRP_LIV_RUE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRP_LIV_RUE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRP_LIV_CPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRP_LIV_CP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRP_LIV_VILLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRP_LIV_VILLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRP_LIV_TELColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRP_LIV_TEL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRP_LIV_FAXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRP_LIV_FAX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRP_LIV_PORTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRP_LIV_PORT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRP_LIV_EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRP_LIV_EMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRP_DEFAUTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRP_DEFAUT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRP_COMMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRP_COMM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRP_LICENCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRP_LICENCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TRANSPORTEURRow
            Get
                Return CType(Me.Rows(index),TRANSPORTEURRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TRANSPORTEURRowChanging As TRANSPORTEURRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TRANSPORTEURRowChanged As TRANSPORTEURRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TRANSPORTEURRowDeleting As TRANSPORTEURRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TRANSPORTEURRowDeleted As TRANSPORTEURRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddTRANSPORTEURRow(ByVal row As TRANSPORTEURRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddTRANSPORTEURRow(ByVal TRP_CODE As String, ByVal TRP_NOM As String, ByVal TRP_LIV_RUE1 As String, ByVal TRP_LIV_RUE2 As String, ByVal TRP_LIV_CP As String, ByVal TRP_LIV_VILLE As String, ByVal TRP_LIV_TEL As String, ByVal TRP_LIV_FAX As String, ByVal TRP_LIV_PORT As String, ByVal TRP_LIV_EMAIL As String, ByVal TRP_DEFAUT As Boolean, ByVal TRP_COMM As String, ByVal TRP_LICENCE As String) As TRANSPORTEURRow
            Dim rowTRANSPORTEURRow As TRANSPORTEURRow = CType(Me.NewRow,TRANSPORTEURRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, TRP_CODE, TRP_NOM, TRP_LIV_RUE1, TRP_LIV_RUE2, TRP_LIV_CP, TRP_LIV_VILLE, TRP_LIV_TEL, TRP_LIV_FAX, TRP_LIV_PORT, TRP_LIV_EMAIL, TRP_DEFAUT, TRP_COMM, TRP_LICENCE}
            rowTRANSPORTEURRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTRANSPORTEURRow)
            Return rowTRANSPORTEURRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByTRP_ID(ByVal TRP_ID As Integer) As TRANSPORTEURRow
            Return CType(Me.Rows.Find(New Object() {TRP_ID}),TRANSPORTEURRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TRANSPORTEURDataTable = CType(MyBase.Clone,TRANSPORTEURDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TRANSPORTEURDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTRP_ID = MyBase.Columns("TRP_ID")
            Me.columnTRP_CODE = MyBase.Columns("TRP_CODE")
            Me.columnTRP_NOM = MyBase.Columns("TRP_NOM")
            Me.columnTRP_LIV_RUE1 = MyBase.Columns("TRP_LIV_RUE1")
            Me.columnTRP_LIV_RUE2 = MyBase.Columns("TRP_LIV_RUE2")
            Me.columnTRP_LIV_CP = MyBase.Columns("TRP_LIV_CP")
            Me.columnTRP_LIV_VILLE = MyBase.Columns("TRP_LIV_VILLE")
            Me.columnTRP_LIV_TEL = MyBase.Columns("TRP_LIV_TEL")
            Me.columnTRP_LIV_FAX = MyBase.Columns("TRP_LIV_FAX")
            Me.columnTRP_LIV_PORT = MyBase.Columns("TRP_LIV_PORT")
            Me.columnTRP_LIV_EMAIL = MyBase.Columns("TRP_LIV_EMAIL")
            Me.columnTRP_DEFAUT = MyBase.Columns("TRP_DEFAUT")
            Me.columnTRP_COMM = MyBase.Columns("TRP_COMM")
            Me.columnTRP_LICENCE = MyBase.Columns("TRP_LICENCE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTRP_ID = New Global.System.Data.DataColumn("TRP_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRP_ID)
            Me.columnTRP_CODE = New Global.System.Data.DataColumn("TRP_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRP_CODE)
            Me.columnTRP_NOM = New Global.System.Data.DataColumn("TRP_NOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRP_NOM)
            Me.columnTRP_LIV_RUE1 = New Global.System.Data.DataColumn("TRP_LIV_RUE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRP_LIV_RUE1)
            Me.columnTRP_LIV_RUE2 = New Global.System.Data.DataColumn("TRP_LIV_RUE2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRP_LIV_RUE2)
            Me.columnTRP_LIV_CP = New Global.System.Data.DataColumn("TRP_LIV_CP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRP_LIV_CP)
            Me.columnTRP_LIV_VILLE = New Global.System.Data.DataColumn("TRP_LIV_VILLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRP_LIV_VILLE)
            Me.columnTRP_LIV_TEL = New Global.System.Data.DataColumn("TRP_LIV_TEL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRP_LIV_TEL)
            Me.columnTRP_LIV_FAX = New Global.System.Data.DataColumn("TRP_LIV_FAX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRP_LIV_FAX)
            Me.columnTRP_LIV_PORT = New Global.System.Data.DataColumn("TRP_LIV_PORT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRP_LIV_PORT)
            Me.columnTRP_LIV_EMAIL = New Global.System.Data.DataColumn("TRP_LIV_EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRP_LIV_EMAIL)
            Me.columnTRP_DEFAUT = New Global.System.Data.DataColumn("TRP_DEFAUT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRP_DEFAUT)
            Me.columnTRP_COMM = New Global.System.Data.DataColumn("TRP_COMM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRP_COMM)
            Me.columnTRP_LICENCE = New Global.System.Data.DataColumn("TRP_LICENCE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRP_LICENCE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTRP_ID}, true))
            Me.columnTRP_ID.AutoIncrement = true
            Me.columnTRP_ID.AllowDBNull = false
            Me.columnTRP_ID.ReadOnly = true
            Me.columnTRP_ID.Unique = true
            Me.columnTRP_CODE.AllowDBNull = false
            Me.columnTRP_CODE.MaxLength = 50
            Me.columnTRP_NOM.AllowDBNull = false
            Me.columnTRP_NOM.MaxLength = 50
            Me.columnTRP_LIV_RUE1.MaxLength = 50
            Me.columnTRP_LIV_RUE2.MaxLength = 50
            Me.columnTRP_LIV_CP.MaxLength = 50
            Me.columnTRP_LIV_VILLE.MaxLength = 50
            Me.columnTRP_LIV_TEL.MaxLength = 50
            Me.columnTRP_LIV_FAX.MaxLength = 50
            Me.columnTRP_LIV_PORT.MaxLength = 50
            Me.columnTRP_LIV_EMAIL.MaxLength = 50
            Me.columnTRP_DEFAUT.DefaultValue = CType(false,Boolean)
            Me.columnTRP_COMM.MaxLength = 255
            Me.columnTRP_LICENCE.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewTRANSPORTEURRow() As TRANSPORTEURRow
            Return CType(Me.NewRow,TRANSPORTEURRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TRANSPORTEURRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TRANSPORTEURRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TRANSPORTEURRowChangedEvent) Is Nothing) Then
                RaiseEvent TRANSPORTEURRowChanged(Me, New TRANSPORTEURRowChangeEvent(CType(e.Row,TRANSPORTEURRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TRANSPORTEURRowChangingEvent) Is Nothing) Then
                RaiseEvent TRANSPORTEURRowChanging(Me, New TRANSPORTEURRowChangeEvent(CType(e.Row,TRANSPORTEURRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TRANSPORTEURRowDeletedEvent) Is Nothing) Then
                RaiseEvent TRANSPORTEURRowDeleted(Me, New TRANSPORTEURRowChangeEvent(CType(e.Row,TRANSPORTEURRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TRANSPORTEURRowDeletingEvent) Is Nothing) Then
                RaiseEvent TRANSPORTEURRowDeleting(Me, New TRANSPORTEURRowChangeEvent(CType(e.Row,TRANSPORTEURRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveTRANSPORTEURRow(ByVal row As TRANSPORTEURRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsVinicom = New dsVinicom()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TRANSPORTEURDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FACTCOMDataTable
        Inherits Global.System.Data.TypedTableBase(Of FACTCOMRow)
        
        Private columnFCT_ID As Global.System.Data.DataColumn
        
        Private columnFCT_CODE As Global.System.Data.DataColumn
        
        Private columnFCT_ETAT As Global.System.Data.DataColumn
        
        Private columnFCT_DATE As Global.System.Data.DataColumn
        
        Private columnFCT_PERIODE As Global.System.Data.DataColumn
        
        Private columnFCT_TOTAL_HT As Global.System.Data.DataColumn
        
        Private columnFCT_TOTAL_TTC As Global.System.Data.DataColumn
        
        Private columnFCT_MONTANT_REGLEMENT As Global.System.Data.DataColumn
        
        Private columnFCT_DATE_REGLEMENT As Global.System.Data.DataColumn
        
        Private columnFCT_REF_REGLEMENT As Global.System.Data.DataColumn
        
        Private columnFCT_FRN_ID As Global.System.Data.DataColumn
        
        Private columnFCT_COM_FACT As Global.System.Data.DataColumn
        
        Private columnFCT_DATE_STAT As Global.System.Data.DataColumn
        
        Private columnFCT_BINTERNET As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FACTCOM"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCT_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCT_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCT_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCT_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCT_ETATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCT_ETAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCT_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCT_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCT_PERIODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCT_PERIODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCT_TOTAL_HTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCT_TOTAL_HT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCT_TOTAL_TTCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCT_TOTAL_TTC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCT_MONTANT_REGLEMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCT_MONTANT_REGLEMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCT_DATE_REGLEMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCT_DATE_REGLEMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCT_REF_REGLEMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCT_REF_REGLEMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCT_FRN_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCT_FRN_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCT_COM_FACTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCT_COM_FACT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCT_DATE_STATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCT_DATE_STAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FCT_BINTERNETColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFCT_BINTERNET
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FACTCOMRow
            Get
                Return CType(Me.Rows(index),FACTCOMRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FACTCOMRowChanging As FACTCOMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FACTCOMRowChanged As FACTCOMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FACTCOMRowDeleting As FACTCOMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FACTCOMRowDeleted As FACTCOMRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFACTCOMRow(ByVal row As FACTCOMRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFACTCOMRow(ByVal FCT_CODE As String, ByVal FCT_ETAT As Integer, ByVal FCT_DATE As Date, ByVal FCT_PERIODE As String, ByVal FCT_TOTAL_HT As Decimal, ByVal FCT_TOTAL_TTC As Decimal, ByVal FCT_MONTANT_REGLEMENT As Decimal, ByVal FCT_DATE_REGLEMENT As Date, ByVal FCT_REF_REGLEMENT As String, ByVal FCT_FRN_ID As Integer, ByVal FCT_COM_FACT As String, ByVal FCT_DATE_STAT As Date, ByVal FCT_BINTERNET As Boolean) As FACTCOMRow
            Dim rowFACTCOMRow As FACTCOMRow = CType(Me.NewRow,FACTCOMRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, FCT_CODE, FCT_ETAT, FCT_DATE, FCT_PERIODE, FCT_TOTAL_HT, FCT_TOTAL_TTC, FCT_MONTANT_REGLEMENT, FCT_DATE_REGLEMENT, FCT_REF_REGLEMENT, FCT_FRN_ID, FCT_COM_FACT, FCT_DATE_STAT, FCT_BINTERNET}
            rowFACTCOMRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFACTCOMRow)
            Return rowFACTCOMRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByFCT_ID(ByVal FCT_ID As Integer) As FACTCOMRow
            Return CType(Me.Rows.Find(New Object() {FCT_ID}),FACTCOMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FACTCOMDataTable = CType(MyBase.Clone,FACTCOMDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FACTCOMDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFCT_ID = MyBase.Columns("FCT_ID")
            Me.columnFCT_CODE = MyBase.Columns("FCT_CODE")
            Me.columnFCT_ETAT = MyBase.Columns("FCT_ETAT")
            Me.columnFCT_DATE = MyBase.Columns("FCT_DATE")
            Me.columnFCT_PERIODE = MyBase.Columns("FCT_PERIODE")
            Me.columnFCT_TOTAL_HT = MyBase.Columns("FCT_TOTAL_HT")
            Me.columnFCT_TOTAL_TTC = MyBase.Columns("FCT_TOTAL_TTC")
            Me.columnFCT_MONTANT_REGLEMENT = MyBase.Columns("FCT_MONTANT_REGLEMENT")
            Me.columnFCT_DATE_REGLEMENT = MyBase.Columns("FCT_DATE_REGLEMENT")
            Me.columnFCT_REF_REGLEMENT = MyBase.Columns("FCT_REF_REGLEMENT")
            Me.columnFCT_FRN_ID = MyBase.Columns("FCT_FRN_ID")
            Me.columnFCT_COM_FACT = MyBase.Columns("FCT_COM_FACT")
            Me.columnFCT_DATE_STAT = MyBase.Columns("FCT_DATE_STAT")
            Me.columnFCT_BINTERNET = MyBase.Columns("FCT_BINTERNET")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFCT_ID = New Global.System.Data.DataColumn("FCT_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCT_ID)
            Me.columnFCT_CODE = New Global.System.Data.DataColumn("FCT_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCT_CODE)
            Me.columnFCT_ETAT = New Global.System.Data.DataColumn("FCT_ETAT", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCT_ETAT)
            Me.columnFCT_DATE = New Global.System.Data.DataColumn("FCT_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCT_DATE)
            Me.columnFCT_PERIODE = New Global.System.Data.DataColumn("FCT_PERIODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCT_PERIODE)
            Me.columnFCT_TOTAL_HT = New Global.System.Data.DataColumn("FCT_TOTAL_HT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCT_TOTAL_HT)
            Me.columnFCT_TOTAL_TTC = New Global.System.Data.DataColumn("FCT_TOTAL_TTC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCT_TOTAL_TTC)
            Me.columnFCT_MONTANT_REGLEMENT = New Global.System.Data.DataColumn("FCT_MONTANT_REGLEMENT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCT_MONTANT_REGLEMENT)
            Me.columnFCT_DATE_REGLEMENT = New Global.System.Data.DataColumn("FCT_DATE_REGLEMENT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCT_DATE_REGLEMENT)
            Me.columnFCT_REF_REGLEMENT = New Global.System.Data.DataColumn("FCT_REF_REGLEMENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCT_REF_REGLEMENT)
            Me.columnFCT_FRN_ID = New Global.System.Data.DataColumn("FCT_FRN_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCT_FRN_ID)
            Me.columnFCT_COM_FACT = New Global.System.Data.DataColumn("FCT_COM_FACT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCT_COM_FACT)
            Me.columnFCT_DATE_STAT = New Global.System.Data.DataColumn("FCT_DATE_STAT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCT_DATE_STAT)
            Me.columnFCT_BINTERNET = New Global.System.Data.DataColumn("FCT_BINTERNET", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFCT_BINTERNET)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFCT_ID}, true))
            Me.columnFCT_ID.AutoIncrement = true
            Me.columnFCT_ID.AllowDBNull = false
            Me.columnFCT_ID.ReadOnly = true
            Me.columnFCT_ID.Unique = true
            Me.columnFCT_CODE.MaxLength = 50
            Me.columnFCT_PERIODE.MaxLength = 50
            Me.columnFCT_REF_REGLEMENT.MaxLength = 50
            Me.columnFCT_FRN_ID.AllowDBNull = false
            Me.columnFCT_COM_FACT.MaxLength = 1073741823
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFACTCOMRow() As FACTCOMRow
            Return CType(Me.NewRow,FACTCOMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FACTCOMRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FACTCOMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FACTCOMRowChangedEvent) Is Nothing) Then
                RaiseEvent FACTCOMRowChanged(Me, New FACTCOMRowChangeEvent(CType(e.Row,FACTCOMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FACTCOMRowChangingEvent) Is Nothing) Then
                RaiseEvent FACTCOMRowChanging(Me, New FACTCOMRowChangeEvent(CType(e.Row,FACTCOMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FACTCOMRowDeletedEvent) Is Nothing) Then
                RaiseEvent FACTCOMRowDeleted(Me, New FACTCOMRowChangeEvent(CType(e.Row,FACTCOMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FACTCOMRowDeletingEvent) Is Nothing) Then
                RaiseEvent FACTCOMRowDeleting(Me, New FACTCOMRowChangeEvent(CType(e.Row,FACTCOMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFACTCOMRow(ByVal row As FACTCOMRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsVinicom = New dsVinicom()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FACTCOMDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class LOCKDataTable
        Inherits Global.System.Data.TypedTableBase(Of LOCKRow)
        
        Private columnLCK_PERSISTID As Global.System.Data.DataColumn
        
        Private columnLCK_NAME As Global.System.Data.DataColumn
        
        Private columnLCK_DATE As Global.System.Data.DataColumn
        
        Private columnLCK_TYPE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "LOCK"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LCK_PERSISTIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLCK_PERSISTID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LCK_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLCK_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LCK_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLCK_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LCK_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLCK_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As LOCKRow
            Get
                Return CType(Me.Rows(index),LOCKRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LOCKRowChanging As LOCKRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LOCKRowChanged As LOCKRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LOCKRowDeleting As LOCKRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LOCKRowDeleted As LOCKRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddLOCKRow(ByVal row As LOCKRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddLOCKRow(ByVal LCK_PERSISTID As Integer, ByVal LCK_NAME As String, ByVal LCK_DATE As Date, ByVal LCK_TYPE As String) As LOCKRow
            Dim rowLOCKRow As LOCKRow = CType(Me.NewRow,LOCKRow)
            Dim columnValuesArray() As Object = New Object() {LCK_PERSISTID, LCK_NAME, LCK_DATE, LCK_TYPE}
            rowLOCKRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowLOCKRow)
            Return rowLOCKRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByLCK_PERSISTIDLCK_TYPE(ByVal LCK_PERSISTID As Integer, ByVal LCK_TYPE As String) As LOCKRow
            Return CType(Me.Rows.Find(New Object() {LCK_PERSISTID, LCK_TYPE}),LOCKRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As LOCKDataTable = CType(MyBase.Clone,LOCKDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New LOCKDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnLCK_PERSISTID = MyBase.Columns("LCK_PERSISTID")
            Me.columnLCK_NAME = MyBase.Columns("LCK_NAME")
            Me.columnLCK_DATE = MyBase.Columns("LCK_DATE")
            Me.columnLCK_TYPE = MyBase.Columns("LCK_TYPE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnLCK_PERSISTID = New Global.System.Data.DataColumn("LCK_PERSISTID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLCK_PERSISTID)
            Me.columnLCK_NAME = New Global.System.Data.DataColumn("LCK_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLCK_NAME)
            Me.columnLCK_DATE = New Global.System.Data.DataColumn("LCK_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLCK_DATE)
            Me.columnLCK_TYPE = New Global.System.Data.DataColumn("LCK_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLCK_TYPE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnLCK_PERSISTID, Me.columnLCK_TYPE}, true))
            Me.columnLCK_PERSISTID.AllowDBNull = false
            Me.columnLCK_NAME.MaxLength = 50
            Me.columnLCK_TYPE.AllowDBNull = false
            Me.columnLCK_TYPE.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewLOCKRow() As LOCKRow
            Return CType(Me.NewRow,LOCKRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New LOCKRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(LOCKRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.LOCKRowChangedEvent) Is Nothing) Then
                RaiseEvent LOCKRowChanged(Me, New LOCKRowChangeEvent(CType(e.Row,LOCKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.LOCKRowChangingEvent) Is Nothing) Then
                RaiseEvent LOCKRowChanging(Me, New LOCKRowChangeEvent(CType(e.Row,LOCKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.LOCKRowDeletedEvent) Is Nothing) Then
                RaiseEvent LOCKRowDeleted(Me, New LOCKRowChangeEvent(CType(e.Row,LOCKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.LOCKRowDeletingEvent) Is Nothing) Then
                RaiseEvent LOCKRowDeleting(Me, New LOCKRowChangeEvent(CType(e.Row,LOCKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveLOCKRow(ByVal row As LOCKRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsVinicom = New dsVinicom()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "LOCKDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class USERSRIGHTSDataTable
        Inherits Global.System.Data.TypedTableBase(Of USERSRIGHTSRow)
        
        Private columnRGH_ID As Global.System.Data.DataColumn
        
        Private columnRGH_TAG As Global.System.Data.DataColumn
        
        Private columnRGH_ROLE As Global.System.Data.DataColumn
        
        Private columnRGH_DROIT As Global.System.Data.DataColumn
        
        Private columnRGH_TEXT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "USERSRIGHTS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RGH_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRGH_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RGH_TAGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRGH_TAG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RGH_ROLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRGH_ROLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RGH_DROITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRGH_DROIT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RGH_TEXTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRGH_TEXT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As USERSRIGHTSRow
            Get
                Return CType(Me.Rows(index),USERSRIGHTSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event USERSRIGHTSRowChanging As USERSRIGHTSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event USERSRIGHTSRowChanged As USERSRIGHTSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event USERSRIGHTSRowDeleting As USERSRIGHTSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event USERSRIGHTSRowDeleted As USERSRIGHTSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddUSERSRIGHTSRow(ByVal row As USERSRIGHTSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddUSERSRIGHTSRow(ByVal RGH_TAG As String, ByVal RGH_ROLE As Integer, ByVal RGH_DROIT As Boolean, ByVal RGH_TEXT As String) As USERSRIGHTSRow
            Dim rowUSERSRIGHTSRow As USERSRIGHTSRow = CType(Me.NewRow,USERSRIGHTSRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, RGH_TAG, RGH_ROLE, RGH_DROIT, RGH_TEXT}
            rowUSERSRIGHTSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowUSERSRIGHTSRow)
            Return rowUSERSRIGHTSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByRGH_ID(ByVal RGH_ID As Integer) As USERSRIGHTSRow
            Return CType(Me.Rows.Find(New Object() {RGH_ID}),USERSRIGHTSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As USERSRIGHTSDataTable = CType(MyBase.Clone,USERSRIGHTSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New USERSRIGHTSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRGH_ID = MyBase.Columns("RGH_ID")
            Me.columnRGH_TAG = MyBase.Columns("RGH_TAG")
            Me.columnRGH_ROLE = MyBase.Columns("RGH_ROLE")
            Me.columnRGH_DROIT = MyBase.Columns("RGH_DROIT")
            Me.columnRGH_TEXT = MyBase.Columns("RGH_TEXT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRGH_ID = New Global.System.Data.DataColumn("RGH_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRGH_ID)
            Me.columnRGH_TAG = New Global.System.Data.DataColumn("RGH_TAG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRGH_TAG)
            Me.columnRGH_ROLE = New Global.System.Data.DataColumn("RGH_ROLE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRGH_ROLE)
            Me.columnRGH_DROIT = New Global.System.Data.DataColumn("RGH_DROIT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRGH_DROIT)
            Me.columnRGH_TEXT = New Global.System.Data.DataColumn("RGH_TEXT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRGH_TEXT)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnRGH_ID}, true))
            Me.columnRGH_ID.AutoIncrement = true
            Me.columnRGH_ID.AutoIncrementSeed = -1
            Me.columnRGH_ID.AutoIncrementStep = -1
            Me.columnRGH_ID.AllowDBNull = false
            Me.columnRGH_ID.ReadOnly = true
            Me.columnRGH_ID.Unique = true
            Me.columnRGH_TAG.MaxLength = 50
            Me.columnRGH_TEXT.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewUSERSRIGHTSRow() As USERSRIGHTSRow
            Return CType(Me.NewRow,USERSRIGHTSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New USERSRIGHTSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(USERSRIGHTSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.USERSRIGHTSRowChangedEvent) Is Nothing) Then
                RaiseEvent USERSRIGHTSRowChanged(Me, New USERSRIGHTSRowChangeEvent(CType(e.Row,USERSRIGHTSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.USERSRIGHTSRowChangingEvent) Is Nothing) Then
                RaiseEvent USERSRIGHTSRowChanging(Me, New USERSRIGHTSRowChangeEvent(CType(e.Row,USERSRIGHTSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.USERSRIGHTSRowDeletedEvent) Is Nothing) Then
                RaiseEvent USERSRIGHTSRowDeleted(Me, New USERSRIGHTSRowChangeEvent(CType(e.Row,USERSRIGHTSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.USERSRIGHTSRowDeletingEvent) Is Nothing) Then
                RaiseEvent USERSRIGHTSRowDeleting(Me, New USERSRIGHTSRowChangeEvent(CType(e.Row,USERSRIGHTSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveUSERSRIGHTSRow(ByVal row As USERSRIGHTSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsVinicom = New dsVinicom()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "USERSRIGHTSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class USERSDataTable
        Inherits Global.System.Data.TypedTableBase(Of USERSRow)
        
        Private columnUSR_ID As Global.System.Data.DataColumn
        
        Private columnUSR_CODE As Global.System.Data.DataColumn
        
        Private columnUSR_PASSWORD As Global.System.Data.DataColumn
        
        Private columnUSR_ROLE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "USERS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property USR_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSR_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property USR_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSR_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property USR_PASSWORDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSR_PASSWORD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property USR_ROLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSR_ROLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As USERSRow
            Get
                Return CType(Me.Rows(index),USERSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event USERSRowChanging As USERSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event USERSRowChanged As USERSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event USERSRowDeleting As USERSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event USERSRowDeleted As USERSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddUSERSRow(ByVal row As USERSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddUSERSRow(ByVal USR_CODE As String, ByVal USR_PASSWORD As String, ByVal USR_ROLE As Integer) As USERSRow
            Dim rowUSERSRow As USERSRow = CType(Me.NewRow,USERSRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, USR_CODE, USR_PASSWORD, USR_ROLE}
            rowUSERSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowUSERSRow)
            Return rowUSERSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByUSR_ID(ByVal USR_ID As Integer) As USERSRow
            Return CType(Me.Rows.Find(New Object() {USR_ID}),USERSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As USERSDataTable = CType(MyBase.Clone,USERSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New USERSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnUSR_ID = MyBase.Columns("USR_ID")
            Me.columnUSR_CODE = MyBase.Columns("USR_CODE")
            Me.columnUSR_PASSWORD = MyBase.Columns("USR_PASSWORD")
            Me.columnUSR_ROLE = MyBase.Columns("USR_ROLE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnUSR_ID = New Global.System.Data.DataColumn("USR_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSR_ID)
            Me.columnUSR_CODE = New Global.System.Data.DataColumn("USR_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSR_CODE)
            Me.columnUSR_PASSWORD = New Global.System.Data.DataColumn("USR_PASSWORD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSR_PASSWORD)
            Me.columnUSR_ROLE = New Global.System.Data.DataColumn("USR_ROLE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSR_ROLE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnUSR_ID}, true))
            Me.columnUSR_ID.AutoIncrement = true
            Me.columnUSR_ID.AutoIncrementSeed = -1
            Me.columnUSR_ID.AutoIncrementStep = -1
            Me.columnUSR_ID.AllowDBNull = false
            Me.columnUSR_ID.ReadOnly = true
            Me.columnUSR_ID.Unique = true
            Me.columnUSR_CODE.MaxLength = 10
            Me.columnUSR_PASSWORD.MaxLength = 10
            Me.columnUSR_ROLE.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewUSERSRow() As USERSRow
            Return CType(Me.NewRow,USERSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New USERSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(USERSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.USERSRowChangedEvent) Is Nothing) Then
                RaiseEvent USERSRowChanged(Me, New USERSRowChangeEvent(CType(e.Row,USERSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.USERSRowChangingEvent) Is Nothing) Then
                RaiseEvent USERSRowChanging(Me, New USERSRowChangeEvent(CType(e.Row,USERSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.USERSRowDeletedEvent) Is Nothing) Then
                RaiseEvent USERSRowDeleted(Me, New USERSRowChangeEvent(CType(e.Row,USERSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.USERSRowDeletingEvent) Is Nothing) Then
                RaiseEvent USERSRowDeleting(Me, New USERSRowChangeEvent(CType(e.Row,USERSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveUSERSRow(ByVal row As USERSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsVinicom = New dsVinicom()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "USERSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class APPELATIONDataTable
        Inherits Global.System.Data.TypedTableBase(Of APPELATIONRow)
        
        Private columnAPP_CHATEAU As Global.System.Data.DataColumn
        
        Private columnAPP_APPELATION As Global.System.Data.DataColumn
        
        Private columnAPP_ENCEPAG As Global.System.Data.DataColumn
        
        Private columnAPP_TERROIR As Global.System.Data.DataColumn
        
        Private columnAPP_DESCRIPTIF As Global.System.Data.DataColumn
        
        Private columnAPP_ETIQUETTE As Global.System.Data.DataColumn
        
        Private columnAPP_ID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "APPELATION"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APP_CHATEAUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPP_CHATEAU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APP_APPELATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPP_APPELATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APP_ENCEPAGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPP_ENCEPAG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APP_TERROIRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPP_TERROIR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APP_DESCRIPTIFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPP_DESCRIPTIF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APP_ETIQUETTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPP_ETIQUETTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APP_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPP_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As APPELATIONRow
            Get
                Return CType(Me.Rows(index),APPELATIONRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event APPELATIONRowChanging As APPELATIONRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event APPELATIONRowChanged As APPELATIONRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event APPELATIONRowDeleting As APPELATIONRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event APPELATIONRowDeleted As APPELATIONRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddAPPELATIONRow(ByVal row As APPELATIONRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddAPPELATIONRow(ByVal APP_CHATEAU As String, ByVal APP_APPELATION As String, ByVal APP_ENCEPAG As String, ByVal APP_TERROIR As String, ByVal APP_DESCRIPTIF As String, ByVal APP_ETIQUETTE() As Byte) As APPELATIONRow
            Dim rowAPPELATIONRow As APPELATIONRow = CType(Me.NewRow,APPELATIONRow)
            Dim columnValuesArray() As Object = New Object() {APP_CHATEAU, APP_APPELATION, APP_ENCEPAG, APP_TERROIR, APP_DESCRIPTIF, APP_ETIQUETTE, Nothing}
            rowAPPELATIONRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowAPPELATIONRow)
            Return rowAPPELATIONRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByAPP_ID(ByVal APP_ID As Integer) As APPELATIONRow
            Return CType(Me.Rows.Find(New Object() {APP_ID}),APPELATIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As APPELATIONDataTable = CType(MyBase.Clone,APPELATIONDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New APPELATIONDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnAPP_CHATEAU = MyBase.Columns("APP_CHATEAU")
            Me.columnAPP_APPELATION = MyBase.Columns("APP_APPELATION")
            Me.columnAPP_ENCEPAG = MyBase.Columns("APP_ENCEPAG")
            Me.columnAPP_TERROIR = MyBase.Columns("APP_TERROIR")
            Me.columnAPP_DESCRIPTIF = MyBase.Columns("APP_DESCRIPTIF")
            Me.columnAPP_ETIQUETTE = MyBase.Columns("APP_ETIQUETTE")
            Me.columnAPP_ID = MyBase.Columns("APP_ID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnAPP_CHATEAU = New Global.System.Data.DataColumn("APP_CHATEAU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPP_CHATEAU)
            Me.columnAPP_APPELATION = New Global.System.Data.DataColumn("APP_APPELATION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPP_APPELATION)
            Me.columnAPP_ENCEPAG = New Global.System.Data.DataColumn("APP_ENCEPAG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPP_ENCEPAG)
            Me.columnAPP_TERROIR = New Global.System.Data.DataColumn("APP_TERROIR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPP_TERROIR)
            Me.columnAPP_DESCRIPTIF = New Global.System.Data.DataColumn("APP_DESCRIPTIF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPP_DESCRIPTIF)
            Me.columnAPP_ETIQUETTE = New Global.System.Data.DataColumn("APP_ETIQUETTE", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPP_ETIQUETTE)
            Me.columnAPP_ID = New Global.System.Data.DataColumn("APP_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPP_ID)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnAPP_ID}, true))
            Me.columnAPP_CHATEAU.MaxLength = 50
            Me.columnAPP_APPELATION.MaxLength = 50
            Me.columnAPP_ENCEPAG.MaxLength = 2147483647
            Me.columnAPP_TERROIR.MaxLength = 2147483647
            Me.columnAPP_DESCRIPTIF.MaxLength = 2147483647
            Me.columnAPP_ID.AutoIncrement = true
            Me.columnAPP_ID.AllowDBNull = false
            Me.columnAPP_ID.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewAPPELATIONRow() As APPELATIONRow
            Return CType(Me.NewRow,APPELATIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New APPELATIONRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(APPELATIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.APPELATIONRowChangedEvent) Is Nothing) Then
                RaiseEvent APPELATIONRowChanged(Me, New APPELATIONRowChangeEvent(CType(e.Row,APPELATIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.APPELATIONRowChangingEvent) Is Nothing) Then
                RaiseEvent APPELATIONRowChanging(Me, New APPELATIONRowChangeEvent(CType(e.Row,APPELATIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.APPELATIONRowDeletedEvent) Is Nothing) Then
                RaiseEvent APPELATIONRowDeleted(Me, New APPELATIONRowChangeEvent(CType(e.Row,APPELATIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.APPELATIONRowDeletingEvent) Is Nothing) Then
                RaiseEvent APPELATIONRowDeleting(Me, New APPELATIONRowChangeEvent(CType(e.Row,APPELATIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveAPPELATIONRow(ByVal row As APPELATIONRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsVinicom = New dsVinicom()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "APPELATIONDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FICHETECHNIQUE_FOURNISSEURDataTable
        Inherits Global.System.Data.TypedTableBase(Of FICHETECHNIQUE_FOURNISSEURRow)
        
        Private columnFTFRN_TXTDOMAINE As Global.System.Data.DataColumn
        
        Private columnFTFRN_TXTFOURNISSEUR As Global.System.Data.DataColumn
        
        Private columnFTFRN_TXTTERROIR As Global.System.Data.DataColumn
        
        Private columnFTFRN_ID As Global.System.Data.DataColumn
        
        Private columnFTFRN_SPECIALITE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FICHETECHNIQUE_FOURNISSEUR"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTFRN_TXTDOMAINEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTFRN_TXTDOMAINE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTFRN_TXTFOURNISSEURColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTFRN_TXTFOURNISSEUR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTFRN_TXTTERROIRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTFRN_TXTTERROIR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTFRN_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTFRN_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FTFRN_SPECIALITEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTFRN_SPECIALITE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FICHETECHNIQUE_FOURNISSEURRow
            Get
                Return CType(Me.Rows(index),FICHETECHNIQUE_FOURNISSEURRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FICHETECHNIQUE_FOURNISSEURRowChanging As FICHETECHNIQUE_FOURNISSEURRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FICHETECHNIQUE_FOURNISSEURRowChanged As FICHETECHNIQUE_FOURNISSEURRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FICHETECHNIQUE_FOURNISSEURRowDeleting As FICHETECHNIQUE_FOURNISSEURRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FICHETECHNIQUE_FOURNISSEURRowDeleted As FICHETECHNIQUE_FOURNISSEURRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFICHETECHNIQUE_FOURNISSEURRow(ByVal row As FICHETECHNIQUE_FOURNISSEURRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFICHETECHNIQUE_FOURNISSEURRow(ByVal FTFRN_TXTDOMAINE As String, ByVal FTFRN_TXTFOURNISSEUR As String, ByVal FTFRN_TXTTERROIR As String, ByVal FTFRN_ID As Integer, ByVal FTFRN_SPECIALITE As String) As FICHETECHNIQUE_FOURNISSEURRow
            Dim rowFICHETECHNIQUE_FOURNISSEURRow As FICHETECHNIQUE_FOURNISSEURRow = CType(Me.NewRow,FICHETECHNIQUE_FOURNISSEURRow)
            Dim columnValuesArray() As Object = New Object() {FTFRN_TXTDOMAINE, FTFRN_TXTFOURNISSEUR, FTFRN_TXTTERROIR, FTFRN_ID, FTFRN_SPECIALITE}
            rowFICHETECHNIQUE_FOURNISSEURRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFICHETECHNIQUE_FOURNISSEURRow)
            Return rowFICHETECHNIQUE_FOURNISSEURRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByFTFRN_ID(ByVal FTFRN_ID As Integer) As FICHETECHNIQUE_FOURNISSEURRow
            Return CType(Me.Rows.Find(New Object() {FTFRN_ID}),FICHETECHNIQUE_FOURNISSEURRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FICHETECHNIQUE_FOURNISSEURDataTable = CType(MyBase.Clone,FICHETECHNIQUE_FOURNISSEURDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FICHETECHNIQUE_FOURNISSEURDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFTFRN_TXTDOMAINE = MyBase.Columns("FTFRN_TXTDOMAINE")
            Me.columnFTFRN_TXTFOURNISSEUR = MyBase.Columns("FTFRN_TXTFOURNISSEUR")
            Me.columnFTFRN_TXTTERROIR = MyBase.Columns("FTFRN_TXTTERROIR")
            Me.columnFTFRN_ID = MyBase.Columns("FTFRN_ID")
            Me.columnFTFRN_SPECIALITE = MyBase.Columns("FTFRN_SPECIALITE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFTFRN_TXTDOMAINE = New Global.System.Data.DataColumn("FTFRN_TXTDOMAINE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTFRN_TXTDOMAINE)
            Me.columnFTFRN_TXTFOURNISSEUR = New Global.System.Data.DataColumn("FTFRN_TXTFOURNISSEUR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTFRN_TXTFOURNISSEUR)
            Me.columnFTFRN_TXTTERROIR = New Global.System.Data.DataColumn("FTFRN_TXTTERROIR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTFRN_TXTTERROIR)
            Me.columnFTFRN_ID = New Global.System.Data.DataColumn("FTFRN_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTFRN_ID)
            Me.columnFTFRN_SPECIALITE = New Global.System.Data.DataColumn("FTFRN_SPECIALITE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTFRN_SPECIALITE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFTFRN_ID}, true))
            Me.columnFTFRN_TXTDOMAINE.MaxLength = 2147483647
            Me.columnFTFRN_TXTFOURNISSEUR.MaxLength = 2147483647
            Me.columnFTFRN_TXTTERROIR.MaxLength = 2147483647
            Me.columnFTFRN_ID.AllowDBNull = false
            Me.columnFTFRN_ID.Unique = true
            Me.columnFTFRN_SPECIALITE.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFICHETECHNIQUE_FOURNISSEURRow() As FICHETECHNIQUE_FOURNISSEURRow
            Return CType(Me.NewRow,FICHETECHNIQUE_FOURNISSEURRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FICHETECHNIQUE_FOURNISSEURRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FICHETECHNIQUE_FOURNISSEURRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FICHETECHNIQUE_FOURNISSEURRowChangedEvent) Is Nothing) Then
                RaiseEvent FICHETECHNIQUE_FOURNISSEURRowChanged(Me, New FICHETECHNIQUE_FOURNISSEURRowChangeEvent(CType(e.Row,FICHETECHNIQUE_FOURNISSEURRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FICHETECHNIQUE_FOURNISSEURRowChangingEvent) Is Nothing) Then
                RaiseEvent FICHETECHNIQUE_FOURNISSEURRowChanging(Me, New FICHETECHNIQUE_FOURNISSEURRowChangeEvent(CType(e.Row,FICHETECHNIQUE_FOURNISSEURRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FICHETECHNIQUE_FOURNISSEURRowDeletedEvent) Is Nothing) Then
                RaiseEvent FICHETECHNIQUE_FOURNISSEURRowDeleted(Me, New FICHETECHNIQUE_FOURNISSEURRowChangeEvent(CType(e.Row,FICHETECHNIQUE_FOURNISSEURRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FICHETECHNIQUE_FOURNISSEURRowDeletingEvent) Is Nothing) Then
                RaiseEvent FICHETECHNIQUE_FOURNISSEURRowDeleting(Me, New FICHETECHNIQUE_FOURNISSEURRowChangeEvent(CType(e.Row,FICHETECHNIQUE_FOURNISSEURRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFICHETECHNIQUE_FOURNISSEURRow(ByVal row As FICHETECHNIQUE_FOURNISSEURRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsVinicom = New dsVinicom()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FICHETECHNIQUE_FOURNISSEURDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class IMAGESDataTable
        Inherits Global.System.Data.TypedTableBase(Of IMAGESRow)
        
        Private columnIMG_ID As Global.System.Data.DataColumn
        
        Private columnIMG_OBJECT_ID As Global.System.Data.DataColumn
        
        Private columnIMG_TYPE As Global.System.Data.DataColumn
        
        Private columnIMG_NUM As Global.System.Data.DataColumn
        
        Private columnIMG_IMAGE As Global.System.Data.DataColumn
        
        Private columnIMG_DESC As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "IMAGES"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMG_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMG_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMG_OBJECT_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMG_OBJECT_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMG_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMG_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMG_NUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMG_NUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMG_IMAGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMG_IMAGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMG_DESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMG_DESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As IMAGESRow
            Get
                Return CType(Me.Rows(index),IMAGESRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event IMAGESRowChanging As IMAGESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event IMAGESRowChanged As IMAGESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event IMAGESRowDeleting As IMAGESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event IMAGESRowDeleted As IMAGESRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddIMAGESRow(ByVal row As IMAGESRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddIMAGESRow(ByVal IMG_OBJECT_ID As Integer, ByVal IMG_TYPE As String, ByVal IMG_NUM As Integer, ByVal IMG_IMAGE() As Byte, ByVal IMG_DESC As String) As IMAGESRow
            Dim rowIMAGESRow As IMAGESRow = CType(Me.NewRow,IMAGESRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, IMG_OBJECT_ID, IMG_TYPE, IMG_NUM, IMG_IMAGE, IMG_DESC}
            rowIMAGESRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIMAGESRow)
            Return rowIMAGESRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByIMG_ID(ByVal IMG_ID As Integer) As IMAGESRow
            Return CType(Me.Rows.Find(New Object() {IMG_ID}),IMAGESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IMAGESDataTable = CType(MyBase.Clone,IMAGESDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IMAGESDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnIMG_ID = MyBase.Columns("IMG_ID")
            Me.columnIMG_OBJECT_ID = MyBase.Columns("IMG_OBJECT_ID")
            Me.columnIMG_TYPE = MyBase.Columns("IMG_TYPE")
            Me.columnIMG_NUM = MyBase.Columns("IMG_NUM")
            Me.columnIMG_IMAGE = MyBase.Columns("IMG_IMAGE")
            Me.columnIMG_DESC = MyBase.Columns("IMG_DESC")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnIMG_ID = New Global.System.Data.DataColumn("IMG_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMG_ID)
            Me.columnIMG_OBJECT_ID = New Global.System.Data.DataColumn("IMG_OBJECT_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMG_OBJECT_ID)
            Me.columnIMG_TYPE = New Global.System.Data.DataColumn("IMG_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMG_TYPE)
            Me.columnIMG_NUM = New Global.System.Data.DataColumn("IMG_NUM", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMG_NUM)
            Me.columnIMG_IMAGE = New Global.System.Data.DataColumn("IMG_IMAGE", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMG_IMAGE)
            Me.columnIMG_DESC = New Global.System.Data.DataColumn("IMG_DESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMG_DESC)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnIMG_ID}, true))
            Me.columnIMG_ID.AutoIncrement = true
            Me.columnIMG_ID.AutoIncrementSeed = -1
            Me.columnIMG_ID.AutoIncrementStep = -1
            Me.columnIMG_ID.AllowDBNull = false
            Me.columnIMG_ID.ReadOnly = true
            Me.columnIMG_ID.Unique = true
            Me.columnIMG_TYPE.MaxLength = 50
            Me.columnIMG_DESC.MaxLength = 2147483647
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewIMAGESRow() As IMAGESRow
            Return CType(Me.NewRow,IMAGESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IMAGESRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IMAGESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IMAGESRowChangedEvent) Is Nothing) Then
                RaiseEvent IMAGESRowChanged(Me, New IMAGESRowChangeEvent(CType(e.Row,IMAGESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IMAGESRowChangingEvent) Is Nothing) Then
                RaiseEvent IMAGESRowChanging(Me, New IMAGESRowChangeEvent(CType(e.Row,IMAGESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IMAGESRowDeletedEvent) Is Nothing) Then
                RaiseEvent IMAGESRowDeleted(Me, New IMAGESRowChangeEvent(CType(e.Row,IMAGESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IMAGESRowDeletingEvent) Is Nothing) Then
                RaiseEvent IMAGESRowDeleting(Me, New IMAGESRowChangeEvent(CType(e.Row,IMAGESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveIMAGESRow(ByVal row As IMAGESRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsVinicom = New dsVinicom()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IMAGESDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RECAP_COLISAGEDataTable
        Inherits Global.System.Data.TypedTableBase(Of RECAP_COLISAGERow)
        
        Private columnRC_TYPE As Global.System.Data.DataColumn
        
        Private columnRC_SI As Global.System.Data.DataColumn
        
        Private columnRC_ENTREE As Global.System.Data.DataColumn
        
        Private columnRC_SORTIE As Global.System.Data.DataColumn
        
        Private columnRC_SF As Global.System.Data.DataColumn
        
        Private columnRC_COUT As Global.System.Data.DataColumn
        
        Private columnRC_PRD_CODE As Global.System.Data.DataColumn
        
        Private columnRC_PRD_LIBELLE As Global.System.Data.DataColumn
        
        Private columnRC_FRN_CODE As Global.System.Data.DataColumn
        
        Private columnRC_FRN_NOM As Global.System.Data.DataColumn
        
        Private columnRC_FRN_RS As Global.System.Data.DataColumn
        
        Private columnRC_DATE As Global.System.Data.DataColumn
        
        Private columnRC_ID As Global.System.Data.DataColumn
        
        Private columnRC_LIBELLE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RECAP_COLISAGE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_SIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_SI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_ENTREEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_ENTREE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_SORTIEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_SORTIE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_SFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_SF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_COUTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_COUT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_PRD_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_PRD_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_PRD_LIBELLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_PRD_LIBELLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_FRN_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_FRN_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_FRN_NOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_FRN_NOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_FRN_RSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_FRN_RS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_LIBELLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_LIBELLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RECAP_COLISAGERow
            Get
                Return CType(Me.Rows(index),RECAP_COLISAGERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RECAP_COLISAGERowChanging As RECAP_COLISAGERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RECAP_COLISAGERowChanged As RECAP_COLISAGERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RECAP_COLISAGERowDeleting As RECAP_COLISAGERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RECAP_COLISAGERowDeleted As RECAP_COLISAGERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddRECAP_COLISAGERow(ByVal row As RECAP_COLISAGERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddRECAP_COLISAGERow(ByVal RC_TYPE As String, ByVal RC_SI As Decimal, ByVal RC_ENTREE As Decimal, ByVal RC_SORTIE As Decimal, ByVal RC_SF As Decimal, ByVal RC_COUT As Decimal, ByVal RC_PRD_CODE As String, ByVal RC_PRD_LIBELLE As String, ByVal RC_FRN_CODE As String, ByVal RC_FRN_NOM As String, ByVal RC_FRN_RS As String, ByVal RC_DATE As Date, ByVal RC_LIBELLE As String) As RECAP_COLISAGERow
            Dim rowRECAP_COLISAGERow As RECAP_COLISAGERow = CType(Me.NewRow,RECAP_COLISAGERow)
            Dim columnValuesArray() As Object = New Object() {RC_TYPE, RC_SI, RC_ENTREE, RC_SORTIE, RC_SF, RC_COUT, RC_PRD_CODE, RC_PRD_LIBELLE, RC_FRN_CODE, RC_FRN_NOM, RC_FRN_RS, RC_DATE, Nothing, RC_LIBELLE}
            rowRECAP_COLISAGERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRECAP_COLISAGERow)
            Return rowRECAP_COLISAGERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByRC_ID(ByVal RC_ID As Integer) As RECAP_COLISAGERow
            Return CType(Me.Rows.Find(New Object() {RC_ID}),RECAP_COLISAGERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RECAP_COLISAGEDataTable = CType(MyBase.Clone,RECAP_COLISAGEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RECAP_COLISAGEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRC_TYPE = MyBase.Columns("RC_TYPE")
            Me.columnRC_SI = MyBase.Columns("RC_SI")
            Me.columnRC_ENTREE = MyBase.Columns("RC_ENTREE")
            Me.columnRC_SORTIE = MyBase.Columns("RC_SORTIE")
            Me.columnRC_SF = MyBase.Columns("RC_SF")
            Me.columnRC_COUT = MyBase.Columns("RC_COUT")
            Me.columnRC_PRD_CODE = MyBase.Columns("RC_PRD_CODE")
            Me.columnRC_PRD_LIBELLE = MyBase.Columns("RC_PRD_LIBELLE")
            Me.columnRC_FRN_CODE = MyBase.Columns("RC_FRN_CODE")
            Me.columnRC_FRN_NOM = MyBase.Columns("RC_FRN_NOM")
            Me.columnRC_FRN_RS = MyBase.Columns("RC_FRN_RS")
            Me.columnRC_DATE = MyBase.Columns("RC_DATE")
            Me.columnRC_ID = MyBase.Columns("RC_ID")
            Me.columnRC_LIBELLE = MyBase.Columns("RC_LIBELLE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRC_TYPE = New Global.System.Data.DataColumn("RC_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_TYPE)
            Me.columnRC_SI = New Global.System.Data.DataColumn("RC_SI", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_SI)
            Me.columnRC_ENTREE = New Global.System.Data.DataColumn("RC_ENTREE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_ENTREE)
            Me.columnRC_SORTIE = New Global.System.Data.DataColumn("RC_SORTIE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_SORTIE)
            Me.columnRC_SF = New Global.System.Data.DataColumn("RC_SF", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_SF)
            Me.columnRC_COUT = New Global.System.Data.DataColumn("RC_COUT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_COUT)
            Me.columnRC_PRD_CODE = New Global.System.Data.DataColumn("RC_PRD_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_PRD_CODE)
            Me.columnRC_PRD_LIBELLE = New Global.System.Data.DataColumn("RC_PRD_LIBELLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_PRD_LIBELLE)
            Me.columnRC_FRN_CODE = New Global.System.Data.DataColumn("RC_FRN_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_FRN_CODE)
            Me.columnRC_FRN_NOM = New Global.System.Data.DataColumn("RC_FRN_NOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_FRN_NOM)
            Me.columnRC_FRN_RS = New Global.System.Data.DataColumn("RC_FRN_RS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_FRN_RS)
            Me.columnRC_DATE = New Global.System.Data.DataColumn("RC_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_DATE)
            Me.columnRC_ID = New Global.System.Data.DataColumn("RC_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_ID)
            Me.columnRC_LIBELLE = New Global.System.Data.DataColumn("RC_LIBELLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_LIBELLE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnRC_ID}, true))
            Me.columnRC_DATE.Caption = "Date"
            Me.columnRC_ID.AutoIncrement = true
            Me.columnRC_ID.AllowDBNull = false
            Me.columnRC_ID.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewRECAP_COLISAGERow() As RECAP_COLISAGERow
            Return CType(Me.NewRow,RECAP_COLISAGERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RECAP_COLISAGERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RECAP_COLISAGERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RECAP_COLISAGERowChangedEvent) Is Nothing) Then
                RaiseEvent RECAP_COLISAGERowChanged(Me, New RECAP_COLISAGERowChangeEvent(CType(e.Row,RECAP_COLISAGERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RECAP_COLISAGERowChangingEvent) Is Nothing) Then
                RaiseEvent RECAP_COLISAGERowChanging(Me, New RECAP_COLISAGERowChangeEvent(CType(e.Row,RECAP_COLISAGERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RECAP_COLISAGERowDeletedEvent) Is Nothing) Then
                RaiseEvent RECAP_COLISAGERowDeleted(Me, New RECAP_COLISAGERowChangeEvent(CType(e.Row,RECAP_COLISAGERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RECAP_COLISAGERowDeletingEvent) Is Nothing) Then
                RaiseEvent RECAP_COLISAGERowDeleting(Me, New RECAP_COLISAGERowChangeEvent(CType(e.Row,RECAP_COLISAGERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveRECAP_COLISAGERow(ByVal row As RECAP_COLISAGERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsVinicom = New dsVinicom()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RECAP_COLISAGEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RECAPCOLISAGEJOURNDataTable
        Inherits Global.System.Data.TypedTableBase(Of RECAPCOLISAGEJOURNRow)
        
        Private columnRC_PRD_CODE As Global.System.Data.DataColumn
        
        Private columnRC_PRD_LIBELLE As Global.System.Data.DataColumn
        
        Private columnRC_FRN_CODE As Global.System.Data.DataColumn
        
        Private columnRC_FRN_NOM As Global.System.Data.DataColumn
        
        Private columnRC_FRN_RS As Global.System.Data.DataColumn
        
        Private columnRC_COUT_U As Global.System.Data.DataColumn
        
        Private columnRC_S01 As Global.System.Data.DataColumn
        
        Private columnRC_S02 As Global.System.Data.DataColumn
        
        Private columnRC_S03 As Global.System.Data.DataColumn
        
        Private columnRC_S04 As Global.System.Data.DataColumn
        
        Private columnRC_S05 As Global.System.Data.DataColumn
        
        Private columnRC_S06 As Global.System.Data.DataColumn
        
        Private columnRC_S07 As Global.System.Data.DataColumn
        
        Private columnRC_S08 As Global.System.Data.DataColumn
        
        Private columnRC_S09 As Global.System.Data.DataColumn
        
        Private columnRC_S10 As Global.System.Data.DataColumn
        
        Private columnRC_S11 As Global.System.Data.DataColumn
        
        Private columnRC_S12 As Global.System.Data.DataColumn
        
        Private columnRC_S13 As Global.System.Data.DataColumn
        
        Private columnRC_S14 As Global.System.Data.DataColumn
        
        Private columnRC_S15 As Global.System.Data.DataColumn
        
        Private columnRC_S16 As Global.System.Data.DataColumn
        
        Private columnRC_S17 As Global.System.Data.DataColumn
        
        Private columnRC_S18 As Global.System.Data.DataColumn
        
        Private columnRC_S19 As Global.System.Data.DataColumn
        
        Private columnRC_S20 As Global.System.Data.DataColumn
        
        Private columnRC_S21 As Global.System.Data.DataColumn
        
        Private columnRC_S22 As Global.System.Data.DataColumn
        
        Private columnRC_S23 As Global.System.Data.DataColumn
        
        Private columnRC_S24 As Global.System.Data.DataColumn
        
        Private columnRC_S25 As Global.System.Data.DataColumn
        
        Private columnRC_S26 As Global.System.Data.DataColumn
        
        Private columnRC_S27 As Global.System.Data.DataColumn
        
        Private columnRC_S28 As Global.System.Data.DataColumn
        
        Private columnRC_S29 As Global.System.Data.DataColumn
        
        Private columnRC_S30 As Global.System.Data.DataColumn
        
        Private columnRC_S31 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RECAPCOLISAGEJOURN"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_PRD_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_PRD_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_PRD_LIBELLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_PRD_LIBELLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_FRN_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_FRN_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_FRN_NOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_FRN_NOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_FRN_RSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_FRN_RS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_COUT_UColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_COUT_U
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_S01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_S01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_S02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_S02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_S03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_S03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_S04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_S04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_S05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_S05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_S06Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_S06
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_S07Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_S07
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_S08Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_S08
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_S09Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_S09
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_S10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_S10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_S11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_S11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_S12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_S12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_S13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_S13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_S14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_S14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_S15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_S15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_S16Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_S16
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_S17Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_S17
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_S18Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_S18
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_S19Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_S19
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_S20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_S20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_S21Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_S21
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_S22Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_S22
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_S23Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_S23
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_S24Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_S24
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_S25Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_S25
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_S26Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_S26
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_S27Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_S27
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_S28Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_S28
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_S29Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_S29
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_S30Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_S30
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RC_S31Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRC_S31
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RECAPCOLISAGEJOURNRow
            Get
                Return CType(Me.Rows(index),RECAPCOLISAGEJOURNRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RECAPCOLISAGEJOURNRowChanging As RECAPCOLISAGEJOURNRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RECAPCOLISAGEJOURNRowChanged As RECAPCOLISAGEJOURNRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RECAPCOLISAGEJOURNRowDeleting As RECAPCOLISAGEJOURNRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RECAPCOLISAGEJOURNRowDeleted As RECAPCOLISAGEJOURNRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddRECAPCOLISAGEJOURNRow(ByVal row As RECAPCOLISAGEJOURNRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddRECAPCOLISAGEJOURNRow( _
                    ByVal RC_PRD_CODE As String, _
                    ByVal RC_PRD_LIBELLE As String, _
                    ByVal RC_FRN_CODE As String, _
                    ByVal RC_FRN_NOM As String, _
                    ByVal RC_FRN_RS As String, _
                    ByVal RC_COUT_U As Decimal, _
                    ByVal RC_S01 As Decimal, _
                    ByVal RC_S02 As Decimal, _
                    ByVal RC_S03 As Decimal, _
                    ByVal RC_S04 As Decimal, _
                    ByVal RC_S05 As Decimal, _
                    ByVal RC_S06 As Decimal, _
                    ByVal RC_S07 As Decimal, _
                    ByVal RC_S08 As Decimal, _
                    ByVal RC_S09 As Decimal, _
                    ByVal RC_S10 As Decimal, _
                    ByVal RC_S11 As Decimal, _
                    ByVal RC_S12 As Decimal, _
                    ByVal RC_S13 As Decimal, _
                    ByVal RC_S14 As Decimal, _
                    ByVal RC_S15 As Decimal, _
                    ByVal RC_S16 As Decimal, _
                    ByVal RC_S17 As Decimal, _
                    ByVal RC_S18 As Decimal, _
                    ByVal RC_S19 As Decimal, _
                    ByVal RC_S20 As Decimal, _
                    ByVal RC_S21 As Decimal, _
                    ByVal RC_S22 As Decimal, _
                    ByVal RC_S23 As Decimal, _
                    ByVal RC_S24 As Decimal, _
                    ByVal RC_S25 As Decimal, _
                    ByVal RC_S26 As Decimal, _
                    ByVal RC_S27 As Decimal, _
                    ByVal RC_S28 As Decimal, _
                    ByVal RC_S29 As Decimal, _
                    ByVal RC_S30 As Decimal, _
                    ByVal RC_S31 As Decimal) As RECAPCOLISAGEJOURNRow
            Dim rowRECAPCOLISAGEJOURNRow As RECAPCOLISAGEJOURNRow = CType(Me.NewRow, RECAPCOLISAGEJOURNRow)
            Dim columnValuesArray() As Object = New Object() {RC_PRD_CODE, RC_PRD_LIBELLE, RC_FRN_CODE, RC_FRN_NOM, RC_FRN_RS, RC_COUT_U, RC_S01, RC_S02, RC_S03, RC_S04, RC_S05, RC_S06, RC_S07, RC_S08, RC_S09, RC_S10, RC_S11, RC_S12, RC_S13, RC_S14, RC_S15, RC_S16, RC_S17, RC_S18, RC_S19, RC_S20, RC_S21, RC_S22, RC_S23, RC_S24, RC_S25, RC_S26, RC_S27, RC_S28, RC_S29, RC_S30, RC_S31}
            rowRECAPCOLISAGEJOURNRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRECAPCOLISAGEJOURNRow)
            Return rowRECAPCOLISAGEJOURNRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RECAPCOLISAGEJOURNDataTable = CType(MyBase.Clone, RECAPCOLISAGEJOURNDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RECAPCOLISAGEJOURNDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnRC_PRD_CODE = MyBase.Columns("RC_PRD_CODE")
            Me.columnRC_PRD_LIBELLE = MyBase.Columns("RC_PRD_LIBELLE")
            Me.columnRC_FRN_CODE = MyBase.Columns("RC_FRN_CODE")
            Me.columnRC_FRN_NOM = MyBase.Columns("RC_FRN_NOM")
            Me.columnRC_FRN_RS = MyBase.Columns("RC_FRN_RS")
            Me.columnRC_COUT_U = MyBase.Columns("RC_COUT_U")
            Me.columnRC_S01 = MyBase.Columns("RC_S01")
            Me.columnRC_S02 = MyBase.Columns("RC_S02")
            Me.columnRC_S03 = MyBase.Columns("RC_S03")
            Me.columnRC_S04 = MyBase.Columns("RC_S04")
            Me.columnRC_S05 = MyBase.Columns("RC_S05")
            Me.columnRC_S06 = MyBase.Columns("RC_S06")
            Me.columnRC_S07 = MyBase.Columns("RC_S07")
            Me.columnRC_S08 = MyBase.Columns("RC_S08")
            Me.columnRC_S09 = MyBase.Columns("RC_S09")
            Me.columnRC_S10 = MyBase.Columns("RC_S10")
            Me.columnRC_S11 = MyBase.Columns("RC_S11")
            Me.columnRC_S12 = MyBase.Columns("RC_S12")
            Me.columnRC_S13 = MyBase.Columns("RC_S13")
            Me.columnRC_S14 = MyBase.Columns("RC_S14")
            Me.columnRC_S15 = MyBase.Columns("RC_S15")
            Me.columnRC_S16 = MyBase.Columns("RC_S16")
            Me.columnRC_S17 = MyBase.Columns("RC_S17")
            Me.columnRC_S18 = MyBase.Columns("RC_S18")
            Me.columnRC_S19 = MyBase.Columns("RC_S19")
            Me.columnRC_S20 = MyBase.Columns("RC_S20")
            Me.columnRC_S21 = MyBase.Columns("RC_S21")
            Me.columnRC_S22 = MyBase.Columns("RC_S22")
            Me.columnRC_S23 = MyBase.Columns("RC_S23")
            Me.columnRC_S24 = MyBase.Columns("RC_S24")
            Me.columnRC_S25 = MyBase.Columns("RC_S25")
            Me.columnRC_S26 = MyBase.Columns("RC_S26")
            Me.columnRC_S27 = MyBase.Columns("RC_S27")
            Me.columnRC_S28 = MyBase.Columns("RC_S28")
            Me.columnRC_S29 = MyBase.Columns("RC_S29")
            Me.columnRC_S30 = MyBase.Columns("RC_S30")
            Me.columnRC_S31 = MyBase.Columns("RC_S31")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnRC_PRD_CODE = New Global.System.Data.DataColumn("RC_PRD_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_PRD_CODE)
            Me.columnRC_PRD_LIBELLE = New Global.System.Data.DataColumn("RC_PRD_LIBELLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_PRD_LIBELLE)
            Me.columnRC_FRN_CODE = New Global.System.Data.DataColumn("RC_FRN_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_FRN_CODE)
            Me.columnRC_FRN_NOM = New Global.System.Data.DataColumn("RC_FRN_NOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_FRN_NOM)
            Me.columnRC_FRN_RS = New Global.System.Data.DataColumn("RC_FRN_RS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_FRN_RS)
            Me.columnRC_COUT_U = New Global.System.Data.DataColumn("RC_COUT_U", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_COUT_U)
            Me.columnRC_S01 = New Global.System.Data.DataColumn("RC_S01", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_S01)
            Me.columnRC_S02 = New Global.System.Data.DataColumn("RC_S02", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_S02)
            Me.columnRC_S03 = New Global.System.Data.DataColumn("RC_S03", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_S03)
            Me.columnRC_S04 = New Global.System.Data.DataColumn("RC_S04", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_S04)
            Me.columnRC_S05 = New Global.System.Data.DataColumn("RC_S05", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_S05)
            Me.columnRC_S06 = New Global.System.Data.DataColumn("RC_S06", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_S06)
            Me.columnRC_S07 = New Global.System.Data.DataColumn("RC_S07", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_S07)
            Me.columnRC_S08 = New Global.System.Data.DataColumn("RC_S08", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_S08)
            Me.columnRC_S09 = New Global.System.Data.DataColumn("RC_S09", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_S09)
            Me.columnRC_S10 = New Global.System.Data.DataColumn("RC_S10", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_S10)
            Me.columnRC_S11 = New Global.System.Data.DataColumn("RC_S11", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_S11)
            Me.columnRC_S12 = New Global.System.Data.DataColumn("RC_S12", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_S12)
            Me.columnRC_S13 = New Global.System.Data.DataColumn("RC_S13", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_S13)
            Me.columnRC_S14 = New Global.System.Data.DataColumn("RC_S14", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_S14)
            Me.columnRC_S15 = New Global.System.Data.DataColumn("RC_S15", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_S15)
            Me.columnRC_S16 = New Global.System.Data.DataColumn("RC_S16", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_S16)
            Me.columnRC_S17 = New Global.System.Data.DataColumn("RC_S17", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_S17)
            Me.columnRC_S18 = New Global.System.Data.DataColumn("RC_S18", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_S18)
            Me.columnRC_S19 = New Global.System.Data.DataColumn("RC_S19", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_S19)
            Me.columnRC_S20 = New Global.System.Data.DataColumn("RC_S20", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_S20)
            Me.columnRC_S21 = New Global.System.Data.DataColumn("RC_S21", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_S21)
            Me.columnRC_S22 = New Global.System.Data.DataColumn("RC_S22", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_S22)
            Me.columnRC_S23 = New Global.System.Data.DataColumn("RC_S23", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_S23)
            Me.columnRC_S24 = New Global.System.Data.DataColumn("RC_S24", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_S24)
            Me.columnRC_S25 = New Global.System.Data.DataColumn("RC_S25", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_S25)
            Me.columnRC_S26 = New Global.System.Data.DataColumn("RC_S26", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_S26)
            Me.columnRC_S27 = New Global.System.Data.DataColumn("RC_S27", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_S27)
            Me.columnRC_S28 = New Global.System.Data.DataColumn("RC_S28", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_S28)
            Me.columnRC_S29 = New Global.System.Data.DataColumn("RC_S29", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_S29)
            Me.columnRC_S30 = New Global.System.Data.DataColumn("RC_S30", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_S30)
            Me.columnRC_S31 = New Global.System.Data.DataColumn("RC_S31", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRC_S31)
            Me.columnRC_S01.DefaultValue = CType(0D, Decimal)
            Me.columnRC_S02.ReadOnly = True
            Me.columnRC_S02.DefaultValue = CType(0D, Decimal)
            Me.columnRC_S03.ReadOnly = True
            Me.columnRC_S03.DefaultValue = CType(0D, Decimal)
            Me.columnRC_S04.ReadOnly = True
            Me.columnRC_S04.DefaultValue = CType(0D, Decimal)
            Me.columnRC_S05.ReadOnly = True
            Me.columnRC_S05.DefaultValue = CType(0D, Decimal)
            Me.columnRC_S06.ReadOnly = True
            Me.columnRC_S06.DefaultValue = CType(0D, Decimal)
            Me.columnRC_S07.DefaultValue = CType(0D, Decimal)
            Me.columnRC_S08.DefaultValue = CType(0D, Decimal)
            Me.columnRC_S09.DefaultValue = CType(0D, Decimal)
            Me.columnRC_S10.DefaultValue = CType(0D, Decimal)
            Me.columnRC_S11.DefaultValue = CType(0D, Decimal)
            Me.columnRC_S12.DefaultValue = CType(0D, Decimal)
            Me.columnRC_S13.DefaultValue = CType(0D, Decimal)
            Me.columnRC_S14.DefaultValue = CType(0D, Decimal)
            Me.columnRC_S15.DefaultValue = CType(0D, Decimal)
            Me.columnRC_S16.DefaultValue = CType(0D, Decimal)
            Me.columnRC_S17.DefaultValue = CType(0D, Decimal)
            Me.columnRC_S18.DefaultValue = CType(0D, Decimal)
            Me.columnRC_S19.DefaultValue = CType(0D, Decimal)
            Me.columnRC_S20.DefaultValue = CType(0D, Decimal)
            Me.columnRC_S21.DefaultValue = CType(0D, Decimal)
            Me.columnRC_S22.DefaultValue = CType(0D, Decimal)
            Me.columnRC_S23.DefaultValue = CType(0D, Decimal)
            Me.columnRC_S24.DefaultValue = CType(0D, Decimal)
            Me.columnRC_S25.DefaultValue = CType(0D, Decimal)
            Me.columnRC_S26.DefaultValue = CType(0D, Decimal)
            Me.columnRC_S27.DefaultValue = CType(0D, Decimal)
            Me.columnRC_S28.DefaultValue = CType(0D, Decimal)
            Me.columnRC_S29.DefaultValue = CType(0D, Decimal)
            Me.columnRC_S30.DefaultValue = CType(0D, Decimal)
            Me.columnRC_S31.DefaultValue = CType(0D, Decimal)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewRECAPCOLISAGEJOURNRow() As RECAPCOLISAGEJOURNRow
            Return CType(Me.NewRow, RECAPCOLISAGEJOURNRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RECAPCOLISAGEJOURNRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RECAPCOLISAGEJOURNRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RECAPCOLISAGEJOURNRowChangedEvent) Is Nothing) Then
                RaiseEvent RECAPCOLISAGEJOURNRowChanged(Me, New RECAPCOLISAGEJOURNRowChangeEvent(CType(e.Row, RECAPCOLISAGEJOURNRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RECAPCOLISAGEJOURNRowChangingEvent) Is Nothing) Then
                RaiseEvent RECAPCOLISAGEJOURNRowChanging(Me, New RECAPCOLISAGEJOURNRowChangeEvent(CType(e.Row, RECAPCOLISAGEJOURNRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RECAPCOLISAGEJOURNRowDeletedEvent) Is Nothing) Then
                RaiseEvent RECAPCOLISAGEJOURNRowDeleted(Me, New RECAPCOLISAGEJOURNRowChangeEvent(CType(e.Row, RECAPCOLISAGEJOURNRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RECAPCOLISAGEJOURNRowDeletingEvent) Is Nothing) Then
                RaiseEvent RECAPCOLISAGEJOURNRowDeleting(Me, New RECAPCOLISAGEJOURNRowChangeEvent(CType(e.Row, RECAPCOLISAGEJOURNRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveRECAPCOLISAGEJOURNRow(ByVal row As RECAPCOLISAGEJOURNRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsVinicom = New dsVinicom()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RECAPCOLISAGEJOURNDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class EXPORTPARAMRow
        Inherits Global.System.Data.DataRow

        Private tableEXPORTPARAM As EXPORTPARAMDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableEXPORTPARAM = CType(Me.Table, EXPORTPARAMDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EXP_TYPE() As String
            Get
                Return CType(Me(Me.tableEXPORTPARAM.EXP_TYPEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableEXPORTPARAM.EXP_TYPEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EXP_NLIGNE() As Integer
            Get
                Return CType(Me(Me.tableEXPORTPARAM.EXP_NLIGNEColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableEXPORTPARAM.EXP_NLIGNEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EXP_NCHAMPS() As Integer
            Get
                Return CType(Me(Me.tableEXPORTPARAM.EXP_NCHAMPSColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableEXPORTPARAM.EXP_NCHAMPSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EXP_TYPECHAMPS() As String
            Get
                Return CType(Me(Me.tableEXPORTPARAM.EXP_TYPECHAMPSColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableEXPORTPARAM.EXP_TYPECHAMPSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EXP_VALEUR() As String
            Get
                Try
                    Return CType(Me(Me.tableEXPORTPARAM.EXP_VALEURColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'EXP_VALEUR' dans la table 'EXPORTPARAM' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableEXPORTPARAM.EXP_VALEURColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EXP_LONGUEUR() As Integer
            Get
                Return CType(Me(Me.tableEXPORTPARAM.EXP_LONGUEURColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableEXPORTPARAM.EXP_LONGUEURColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EXP_DESCRIPTION() As String
            Get
                Return CType(Me(Me.tableEXPORTPARAM.EXP_DESCRIPTIONColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableEXPORTPARAM.EXP_DESCRIPTIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEXP_VALEURNull() As Boolean
            Return Me.IsNull(Me.tableEXPORTPARAM.EXP_VALEURColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEXP_VALEURNull()
            Me(Me.tableEXPORTPARAM.EXP_VALEURColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class REGLEMENTRow
        Inherits Global.System.Data.DataRow

        Private tableREGLEMENT As REGLEMENTDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableREGLEMENT = CType(Me.Table, REGLEMENTDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RGL_ID() As Short
            Get
                Return CType(Me(Me.tableREGLEMENT.RGL_IDColumn), Short)
            End Get
            Set(value As Short)
                Me(Me.tableREGLEMENT.RGL_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RGL_IDFACT() As Short
            Get
                Return CType(Me(Me.tableREGLEMENT.RGL_IDFACTColumn), Short)
            End Get
            Set(value As Short)
                Me(Me.tableREGLEMENT.RGL_IDFACTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RGL_MONTANT() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableREGLEMENT.RGL_MONTANTColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RGL_MONTANT' dans la table 'REGLEMENT' est DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableREGLEMENT.RGL_MONTANTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RGL_DATE() As Date
            Get
                Try
                    Return CType(Me(Me.tableREGLEMENT.RGL_DATEColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RGL_DATE' dans la table 'REGLEMENT' est DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableREGLEMENT.RGL_DATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RGL_REF() As String
            Get
                If Me.IsRGL_REFNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableREGLEMENT.RGL_REFColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableREGLEMENT.RGL_REFColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RGL_ETAT() As Short
            Get
                Try
                    Return CType(Me(Me.tableREGLEMENT.RGL_ETATColumn), Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RGL_ETAT' dans la table 'REGLEMENT' est DBNull.", e)
                End Try
            End Get
            Set(value As Short)
                Me(Me.tableREGLEMENT.RGL_ETATColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RGL_TYPEFACT() As Short
            Get
                Try
                    Return CType(Me(Me.tableREGLEMENT.RGL_TYPEFACTColumn), Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RGL_TYPEFACT' dans la table 'REGLEMENT' est DBNull.", e)
                End Try
            End Get
            Set(value As Short)
                Me(Me.tableREGLEMENT.RGL_TYPEFACTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RGL_COMM() As String
            Get
                If Me.IsRGL_COMMNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableREGLEMENT.RGL_COMMColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableREGLEMENT.RGL_COMMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRGL_MONTANTNull() As Boolean
            Return Me.IsNull(Me.tableREGLEMENT.RGL_MONTANTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRGL_MONTANTNull()
            Me(Me.tableREGLEMENT.RGL_MONTANTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRGL_DATENull() As Boolean
            Return Me.IsNull(Me.tableREGLEMENT.RGL_DATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRGL_DATENull()
            Me(Me.tableREGLEMENT.RGL_DATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRGL_REFNull() As Boolean
            Return Me.IsNull(Me.tableREGLEMENT.RGL_REFColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRGL_REFNull()
            Me(Me.tableREGLEMENT.RGL_REFColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRGL_ETATNull() As Boolean
            Return Me.IsNull(Me.tableREGLEMENT.RGL_ETATColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRGL_ETATNull()
            Me(Me.tableREGLEMENT.RGL_ETATColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRGL_TYPEFACTNull() As Boolean
            Return Me.IsNull(Me.tableREGLEMENT.RGL_TYPEFACTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRGL_TYPEFACTNull()
            Me(Me.tableREGLEMENT.RGL_TYPEFACTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRGL_COMMNull() As Boolean
            Return Me.IsNull(Me.tableREGLEMENT.RGL_COMMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRGL_COMMNull()
            Me(Me.tableREGLEMENT.RGL_COMMColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CONSTANTESRow
        Inherits Global.System.Data.DataRow

        Private tableCONSTANTES As CONSTANTESDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCONSTANTES = CType(Me.Table, CONSTANTESDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SOC_NOMSOC() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SOC_NOMSOCColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SOC_NOMSOC' dans la table 'CONSTANTES' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SOC_NOMSOCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SOC_ADRESSE_RUE1() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SOC_ADRESSE_RUE1Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SOC_ADRESSE_RUE1' dans la table 'CONSTANTES' est D" & _
                            "BNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SOC_ADRESSE_RUE1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SOC_ADRESSE_RUE2() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SOC_ADRESSE_RUE2Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SOC_ADRESSE_RUE2' dans la table 'CONSTANTES' est D" & _
                            "BNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SOC_ADRESSE_RUE2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SOC_ADRESSE_CP() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SOC_ADRESSE_CPColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SOC_ADRESSE_CP' dans la table 'CONSTANTES' est DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SOC_ADRESSE_CPColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SOC_ADRESSE_VILLE() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SOC_ADRESSE_VILLEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SOC_ADRESSE_VILLE' dans la table 'CONSTANTES' est " & _
                            "DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SOC_ADRESSE_VILLEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SOC_TEL() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SOC_TELColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SOC_TEL' dans la table 'CONSTANTES' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SOC_TELColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SOC_FAX() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SOC_FAXColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SOC_FAX' dans la table 'CONSTANTES' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SOC_FAXColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SOC_PORT() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SOC_PORTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SOC_PORT' dans la table 'CONSTANTES' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SOC_PORTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SOC_EMAIL() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SOC_EMAILColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SOC_EMAIL' dans la table 'CONSTANTES' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SOC_EMAILColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_FAX_PAGE_GARDE() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_FAX_PAGE_GARDEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_FAX_PAGE_GARDE' dans la table 'CONSTANTES' est DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_FAX_PAGE_GARDEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_FAX_ENVOI_PAGE_GARDE() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_FAX_ENVOI_PAGE_GARDEColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_FAX_ENVOI_PAGE_GARDE' dans la table 'CONSTANTES' e" & _
                            "st DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableCONSTANTES.CST_FAX_ENVOI_PAGE_GARDEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_FAX_SERVERNAME() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_FAX_SERVERNAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_FAX_SERVERNAME' dans la table 'CONSTANTES' est DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_FAX_SERVERNAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_DERN_NUM_CMD_CLT() As Integer
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_DERN_NUM_CMD_CLTColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_DERN_NUM_CMD_CLT' dans la table 'CONSTANTES' est D" & _
                            "BNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableCONSTANTES.CST_DERN_NUM_CMD_CLTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_DERN_NUM_SCMD() As Integer
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_DERN_NUM_SCMDColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_DERN_NUM_SCMD' dans la table 'CONSTANTES' est DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableCONSTANTES.CST_DERN_NUM_SCMDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_DERN_NUM_BA() As Integer
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_DERN_NUM_BAColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_DERN_NUM_BA' dans la table 'CONSTANTES' est DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableCONSTANTES.CST_DERN_NUM_BAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_VERSION_BD() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_VERSION_BDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_VERSION_BD' dans la table 'CONSTANTES' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_VERSION_BDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_FAX_PREFIX() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_FAX_PREFIXColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_FAX_PREFIX' dans la table 'CONSTANTES' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_FAX_PREFIXColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_TX_COMMISSION() As Single
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_TX_COMMISSIONColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_TX_COMMISSION' dans la table 'CONSTANTES' est DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tableCONSTANTES.CST_TX_COMMISSIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_DERN_NUM_FACTCOM() As Integer
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_DERN_NUM_FACTCOMColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_DERN_NUM_FACTCOM' dans la table 'CONSTANTES' est D" & _
                            "BNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableCONSTANTES.CST_DERN_NUM_FACTCOMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_PATH_FACTCOM() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_PATH_FACTCOMColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_PATH_FACTCOM' dans la table 'CONSTANTES' est DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_PATH_FACTCOMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_DERN_NUM_FACT_TRP() As Integer
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_DERN_NUM_FACT_TRPColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_DERN_NUM_FACT_TRP' dans la table 'CONSTANTES' est " & _
                            "DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableCONSTANTES.CST_DERN_NUM_FACT_TRPColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_TAXES_TRP() As Double
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_TAXES_TRPColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_TAXES_TRP' dans la table 'CONSTANTES' est DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableCONSTANTES.CST_TAXES_TRPColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_PATH_FACTTRP() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_PATH_FACTTRPColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_PATH_FACTTRP' dans la table 'CONSTANTES' est DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_PATH_FACTTRPColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_TRP_IDMODEREGLEMENT() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_TRP_IDMODEREGLEMENTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_TRP_IDMODEREGLEMENT' dans la table 'CONSTANTES' es" & _
                            "t DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_TRP_IDMODEREGLEMENTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SOC2_NOMSOC() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SOC2_NOMSOCColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SOC2_NOMSOC' dans la table 'CONSTANTES' est DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SOC2_NOMSOCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SOC2_ADRESSE_RUE1() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SOC2_ADRESSE_RUE1Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SOC2_ADRESSE_RUE1' dans la table 'CONSTANTES' est " & _
                            "DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SOC2_ADRESSE_RUE1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SOC2_ADRESSE_RUE2() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SOC2_ADRESSE_RUE2Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SOC2_ADRESSE_RUE2' dans la table 'CONSTANTES' est " & _
                            "DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SOC2_ADRESSE_RUE2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SOC2_ADRESSE_CP() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SOC2_ADRESSE_CPColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SOC2_ADRESSE_CP' dans la table 'CONSTANTES' est DB" & _
                            "Null.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SOC2_ADRESSE_CPColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SOC2_ADRESSE_VILLE() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SOC2_ADRESSE_VILLEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SOC2_ADRESSE_VILLE' dans la table 'CONSTANTES' est" & _
                            " DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SOC2_ADRESSE_VILLEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SOC2_TEL() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SOC2_TELColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SOC2_TEL' dans la table 'CONSTANTES' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SOC2_TELColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SOC2_FAX() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SOC2_FAXColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SOC2_FAX' dans la table 'CONSTANTES' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SOC2_FAXColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SOC2_EMAIL() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SOC2_EMAILColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SOC2_EMAIL' dans la table 'CONSTANTES' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SOC2_EMAILColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SOC2_PORT() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SOC2_PORTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SOC2_PORT' dans la table 'CONSTANTES' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SOC2_PORTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_PLTFRM_NOM() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_PLTFRM_NOMColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_PLTFRM_NOM' dans la table 'CONSTANTES' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_PLTFRM_NOMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_PLTFRM_RUE1() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_PLTFRM_RUE1Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_PLTFRM_RUE1' dans la table 'CONSTANTES' est DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_PLTFRM_RUE1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_PLTFRM_RUE2() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_PLTFRM_RUE2Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_PLTFRM_RUE2' dans la table 'CONSTANTES' est DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_PLTFRM_RUE2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_PLTFRM_CP() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_PLTFRM_CPColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_PLTFRM_CP' dans la table 'CONSTANTES' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_PLTFRM_CPColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_PLTFRM_VILLE() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_PLTFRM_VILLEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_PLTFRM_VILLE' dans la table 'CONSTANTES' est DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_PLTFRM_VILLEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_PLTFRM_TEL() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_PLTFRM_TELColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_PLTFRM_TEL' dans la table 'CONSTANTES' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_PLTFRM_TELColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_PLTFRM_FAX() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_PLTFRM_FAXColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_PLTFRM_FAX' dans la table 'CONSTANTES' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_PLTFRM_FAXColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_PLTFRM_EMAIL() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_PLTFRM_EMAILColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_PLTFRM_EMAIL' dans la table 'CONSTANTES' est DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_PLTFRM_EMAILColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_PLTFRM_PORT() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_PLTFRM_PORTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_PLTFRM_PORT' dans la table 'CONSTANTES' est DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_PLTFRM_PORTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_TRP_TXGAZOLE() As Double
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_TRP_TXGAZOLEColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_TRP_TXGAZOLE' dans la table 'CONSTANTES' est DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableCONSTANTES.CST_TRP_TXGAZOLEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_PU_PALL_PREP() As Double
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_PU_PALL_PREPColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_PU_PALL_PREP' dans la table 'CONSTANTES' est DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableCONSTANTES.CST_PU_PALL_PREPColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_PU_PALL_NONPREP() As Double
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_PU_PALL_NONPREPColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_PU_PALL_NONPREP' dans la table 'CONSTANTES' est DB" & _
                            "Null.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableCONSTANTES.CST_PU_PALL_NONPREPColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FTP_HOSTNAME() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.FTP_HOSTNAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'FTP_HOSTNAME' dans la table 'CONSTANTES' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.FTP_HOSTNAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FTP_USERNAME() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.FTP_USERNAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'FTP_USERNAME' dans la table 'CONSTANTES' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.FTP_USERNAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FTP_PASSWORD() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.FTP_PASSWORDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'FTP_PASSWORD' dans la table 'CONSTANTES' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.FTP_PASSWORDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FTP_REMOTEDIR() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.FTP_REMOTEDIRColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'FTP_REMOTEDIR' dans la table 'CONSTANTES' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.FTP_REMOTEDIRColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FTP_LOCKFROMFILENAME() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.FTP_LOCKFROMFILENAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'FTP_LOCKFROMFILENAME' dans la table 'CONSTANTES' est D" & _
                            "BNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.FTP_LOCKFROMFILENAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FTP_LOCKTOFILENAME() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.FTP_LOCKTOFILENAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'FTP_LOCKTOFILENAME' dans la table 'CONSTANTES' est DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.FTP_LOCKTOFILENAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_DERN_NUM_FACT_COLISAGE() As Short
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_DERN_NUM_FACT_COLISAGEColumn), Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_DERN_NUM_FACT_COLISAGE' dans la table 'CONSTANTES'" & _
                            " est DBNull.", e)
                End Try
            End Get
            Set(value As Short)
                Me(Me.tableCONSTANTES.CST_DERN_NUM_FACT_COLISAGEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_COL_IDMODEREGLEMENT() As Short
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_COL_IDMODEREGLEMENTColumn), Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_COL_IDMODEREGLEMENT' dans la table 'CONSTANTES' es" & _
                            "t DBNull.", e)
                End Try
            End Get
            Set(value As Short)
                Me(Me.tableCONSTANTES.CST_COL_IDMODEREGLEMENTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_FACT_COL_TAXES() As Double
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_FACT_COL_TAXESColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_FACT_COL_TAXES' dans la table 'CONSTANTES' est DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableCONSTANTES.CST_FACT_COL_TAXESColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_FACT_COL_PU_COLIS() As Double
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_FACT_COL_PU_COLISColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_FACT_COL_PU_COLIS' dans la table 'CONSTANTES' est " & _
                            "DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableCONSTANTES.CST_FACT_COL_PU_COLISColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SOC_RCS() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SOC_RCSColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SOC_RCS' dans la table 'CONSTANTES' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SOC_RCSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SOC_TVAINTRA() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SOC_TVAINTRAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SOC_TVAINTRA' dans la table 'CONSTANTES' est DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SOC_TVAINTRAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SOC_LICENCE() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SOC_LICENCEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SOC_LICENCE' dans la table 'CONSTANTES' est DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SOC_LICENCEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SOC2_RCS() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SOC2_RCSColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SOC2_RCS' dans la table 'CONSTANTES' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SOC2_RCSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SOC2_TVAINTRA() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SOC2_TVAINTRAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SOC2_TVAINTRA' dans la table 'CONSTANTES' est DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SOC2_TVAINTRAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SOC2_LICENCE() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SOC2_LICENCEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SOC2_LICENCE' dans la table 'CONSTANTES' est DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SOC2_LICENCEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_EXPORT_COMPTA_PATH() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_EXPORT_COMPTA_PATHColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_EXPORT_COMPTA_PATH' dans la table 'CONSTANTES' est" & _
                            " DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_EXPORT_COMPTA_PATHColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SOC_COMPTETVA() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SOC_COMPTETVAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SOC_COMPTETVA' dans la table 'CONSTANTES' est DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SOC_COMPTETVAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SOC_COMPTEPRODUIT() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SOC_COMPTEPRODUITColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SOC_COMPTEPRODUIT' dans la table 'CONSTANTES' est " & _
                            "DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SOC_COMPTEPRODUITColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SOC_COMPTEBANQUE() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SOC_COMPTEBANQUEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SOC_COMPTEBANQUE' dans la table 'CONSTANTES' est D" & _
                            "BNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SOC_COMPTEBANQUEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SOC2_COMPTETVA() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SOC2_COMPTETVAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SOC2_COMPTETVA' dans la table 'CONSTANTES' est DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SOC2_COMPTETVAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SOC2_COMPTEPRODUIT() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SOC2_COMPTEPRODUITColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SOC2_COMPTEPRODUIT' dans la table 'CONSTANTES' est" & _
                            " DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SOC2_COMPTEPRODUITColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SOC2_COMPTEBANQUE() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SOC2_COMPTEBANQUEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SOC2_COMPTEBANQUE' dans la table 'CONSTANTES' est " & _
                            "DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SOC2_COMPTEBANQUEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SOC2_COMPTEPRODUIT_COL() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SOC2_COMPTEPRODUIT_COLColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SOC2_COMPTEPRODUIT_COL' dans la table 'CONSTANTES'" & _
                            " est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SOC2_COMPTEPRODUIT_COLColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_ID() As Short
            Get
                Return CType(Me(Me.tableCONSTANTES.CST_IDColumn), Short)
            End Get
            Set(value As Short)
                Me(Me.tableCONSTANTES.CST_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_EDI_HOST() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_EDI_HOSTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_EDI_HOST' dans la table 'CONSTANTES' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_EDI_HOSTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_EDI_PORT() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_EDI_PORTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_EDI_PORT' dans la table 'CONSTANTES' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_EDI_PORTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_EDI_FROM() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_EDI_FROMColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_EDI_FROM' dans la table 'CONSTANTES' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_EDI_FROMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_EDI_TEMP() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_EDI_TEMPColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_EDI_TEMP' dans la table 'CONSTANTES' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_EDI_TEMPColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SRVCE_PATH() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SRVCE_PATHColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SRVCE_PATH' dans la table 'CONSTANTES' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SRVCE_PATHColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SRVCE_NBSEC() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SRVCE_NBSECColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SRVCE_NBSEC' dans la table 'CONSTANTES' est DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SRVCE_NBSECColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_SRVCE_PATHERROR() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_SRVCE_PATHERRORColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_SRVCE_PATHERROR' dans la table 'CONSTANTES' est DB" & _
                            "Null.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_SRVCE_PATHERRORColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_DERN_NUM_FACT_HBV() As Integer
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_DERN_NUM_FACT_HBVColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_DERN_NUM_FACT_HBV' dans la table 'CONSTANTES' est " & _
                            "DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableCONSTANTES.CST_DERN_NUM_FACT_HBVColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_FTPEDI_SRV() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_FTPEDI_SRVColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_FTPEDI_SRV' dans la table 'CONSTANTES' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_FTPEDI_SRVColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_FTPEDI_USER() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_FTPEDI_USERColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_FTPEDI_USER' dans la table 'CONSTANTES' est DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_FTPEDI_USERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_FTPEDI_PWD() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_FTPEDI_PWDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_FTPEDI_PWD' dans la table 'CONSTANTES' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_FTPEDI_PWDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_FTPEDI_PORT() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_FTPEDI_PORTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_FTPEDI_PORT' dans la table 'CONSTANTES' est DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_FTPEDI_PORTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_FTPEDI_REP() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_FTPEDI_REPColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_FTPEDI_REP' dans la table 'CONSTANTES' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_FTPEDI_REPColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CST_FTPEDI_REPLOCAL() As String
            Get
                Try
                    Return CType(Me(Me.tableCONSTANTES.CST_FTPEDI_REPLOCALColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CST_FTPEDI_REPLOCAL' dans la table 'CONSTANTES' est DB" & _
                            "Null.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCONSTANTES.CST_FTPEDI_REPLOCALColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SOC_NOMSOCNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SOC_NOMSOCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SOC_NOMSOCNull()
            Me(Me.tableCONSTANTES.CST_SOC_NOMSOCColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SOC_ADRESSE_RUE1Null() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SOC_ADRESSE_RUE1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SOC_ADRESSE_RUE1Null()
            Me(Me.tableCONSTANTES.CST_SOC_ADRESSE_RUE1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SOC_ADRESSE_RUE2Null() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SOC_ADRESSE_RUE2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SOC_ADRESSE_RUE2Null()
            Me(Me.tableCONSTANTES.CST_SOC_ADRESSE_RUE2Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SOC_ADRESSE_CPNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SOC_ADRESSE_CPColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SOC_ADRESSE_CPNull()
            Me(Me.tableCONSTANTES.CST_SOC_ADRESSE_CPColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SOC_ADRESSE_VILLENull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SOC_ADRESSE_VILLEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SOC_ADRESSE_VILLENull()
            Me(Me.tableCONSTANTES.CST_SOC_ADRESSE_VILLEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SOC_TELNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SOC_TELColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SOC_TELNull()
            Me(Me.tableCONSTANTES.CST_SOC_TELColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SOC_FAXNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SOC_FAXColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SOC_FAXNull()
            Me(Me.tableCONSTANTES.CST_SOC_FAXColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SOC_PORTNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SOC_PORTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SOC_PORTNull()
            Me(Me.tableCONSTANTES.CST_SOC_PORTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SOC_EMAILNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SOC_EMAILColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SOC_EMAILNull()
            Me(Me.tableCONSTANTES.CST_SOC_EMAILColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_FAX_PAGE_GARDENull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_FAX_PAGE_GARDEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_FAX_PAGE_GARDENull()
            Me(Me.tableCONSTANTES.CST_FAX_PAGE_GARDEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_FAX_ENVOI_PAGE_GARDENull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_FAX_ENVOI_PAGE_GARDEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_FAX_ENVOI_PAGE_GARDENull()
            Me(Me.tableCONSTANTES.CST_FAX_ENVOI_PAGE_GARDEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_FAX_SERVERNAMENull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_FAX_SERVERNAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_FAX_SERVERNAMENull()
            Me(Me.tableCONSTANTES.CST_FAX_SERVERNAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_DERN_NUM_CMD_CLTNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_DERN_NUM_CMD_CLTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_DERN_NUM_CMD_CLTNull()
            Me(Me.tableCONSTANTES.CST_DERN_NUM_CMD_CLTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_DERN_NUM_SCMDNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_DERN_NUM_SCMDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_DERN_NUM_SCMDNull()
            Me(Me.tableCONSTANTES.CST_DERN_NUM_SCMDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_DERN_NUM_BANull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_DERN_NUM_BAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_DERN_NUM_BANull()
            Me(Me.tableCONSTANTES.CST_DERN_NUM_BAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_VERSION_BDNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_VERSION_BDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_VERSION_BDNull()
            Me(Me.tableCONSTANTES.CST_VERSION_BDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_FAX_PREFIXNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_FAX_PREFIXColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_FAX_PREFIXNull()
            Me(Me.tableCONSTANTES.CST_FAX_PREFIXColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_TX_COMMISSIONNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_TX_COMMISSIONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_TX_COMMISSIONNull()
            Me(Me.tableCONSTANTES.CST_TX_COMMISSIONColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_DERN_NUM_FACTCOMNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_DERN_NUM_FACTCOMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_DERN_NUM_FACTCOMNull()
            Me(Me.tableCONSTANTES.CST_DERN_NUM_FACTCOMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_PATH_FACTCOMNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_PATH_FACTCOMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_PATH_FACTCOMNull()
            Me(Me.tableCONSTANTES.CST_PATH_FACTCOMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_DERN_NUM_FACT_TRPNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_DERN_NUM_FACT_TRPColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_DERN_NUM_FACT_TRPNull()
            Me(Me.tableCONSTANTES.CST_DERN_NUM_FACT_TRPColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_TAXES_TRPNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_TAXES_TRPColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_TAXES_TRPNull()
            Me(Me.tableCONSTANTES.CST_TAXES_TRPColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_PATH_FACTTRPNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_PATH_FACTTRPColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_PATH_FACTTRPNull()
            Me(Me.tableCONSTANTES.CST_PATH_FACTTRPColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_TRP_IDMODEREGLEMENTNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_TRP_IDMODEREGLEMENTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_TRP_IDMODEREGLEMENTNull()
            Me(Me.tableCONSTANTES.CST_TRP_IDMODEREGLEMENTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SOC2_NOMSOCNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SOC2_NOMSOCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SOC2_NOMSOCNull()
            Me(Me.tableCONSTANTES.CST_SOC2_NOMSOCColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SOC2_ADRESSE_RUE1Null() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SOC2_ADRESSE_RUE1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SOC2_ADRESSE_RUE1Null()
            Me(Me.tableCONSTANTES.CST_SOC2_ADRESSE_RUE1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SOC2_ADRESSE_RUE2Null() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SOC2_ADRESSE_RUE2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SOC2_ADRESSE_RUE2Null()
            Me(Me.tableCONSTANTES.CST_SOC2_ADRESSE_RUE2Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SOC2_ADRESSE_CPNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SOC2_ADRESSE_CPColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SOC2_ADRESSE_CPNull()
            Me(Me.tableCONSTANTES.CST_SOC2_ADRESSE_CPColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SOC2_ADRESSE_VILLENull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SOC2_ADRESSE_VILLEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SOC2_ADRESSE_VILLENull()
            Me(Me.tableCONSTANTES.CST_SOC2_ADRESSE_VILLEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SOC2_TELNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SOC2_TELColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SOC2_TELNull()
            Me(Me.tableCONSTANTES.CST_SOC2_TELColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SOC2_FAXNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SOC2_FAXColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SOC2_FAXNull()
            Me(Me.tableCONSTANTES.CST_SOC2_FAXColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SOC2_EMAILNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SOC2_EMAILColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SOC2_EMAILNull()
            Me(Me.tableCONSTANTES.CST_SOC2_EMAILColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SOC2_PORTNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SOC2_PORTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SOC2_PORTNull()
            Me(Me.tableCONSTANTES.CST_SOC2_PORTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_PLTFRM_NOMNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_PLTFRM_NOMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_PLTFRM_NOMNull()
            Me(Me.tableCONSTANTES.CST_PLTFRM_NOMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_PLTFRM_RUE1Null() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_PLTFRM_RUE1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_PLTFRM_RUE1Null()
            Me(Me.tableCONSTANTES.CST_PLTFRM_RUE1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_PLTFRM_RUE2Null() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_PLTFRM_RUE2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_PLTFRM_RUE2Null()
            Me(Me.tableCONSTANTES.CST_PLTFRM_RUE2Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_PLTFRM_CPNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_PLTFRM_CPColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_PLTFRM_CPNull()
            Me(Me.tableCONSTANTES.CST_PLTFRM_CPColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_PLTFRM_VILLENull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_PLTFRM_VILLEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_PLTFRM_VILLENull()
            Me(Me.tableCONSTANTES.CST_PLTFRM_VILLEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_PLTFRM_TELNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_PLTFRM_TELColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_PLTFRM_TELNull()
            Me(Me.tableCONSTANTES.CST_PLTFRM_TELColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_PLTFRM_FAXNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_PLTFRM_FAXColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_PLTFRM_FAXNull()
            Me(Me.tableCONSTANTES.CST_PLTFRM_FAXColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_PLTFRM_EMAILNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_PLTFRM_EMAILColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_PLTFRM_EMAILNull()
            Me(Me.tableCONSTANTES.CST_PLTFRM_EMAILColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_PLTFRM_PORTNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_PLTFRM_PORTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_PLTFRM_PORTNull()
            Me(Me.tableCONSTANTES.CST_PLTFRM_PORTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_TRP_TXGAZOLENull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_TRP_TXGAZOLEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_TRP_TXGAZOLENull()
            Me(Me.tableCONSTANTES.CST_TRP_TXGAZOLEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_PU_PALL_PREPNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_PU_PALL_PREPColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_PU_PALL_PREPNull()
            Me(Me.tableCONSTANTES.CST_PU_PALL_PREPColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_PU_PALL_NONPREPNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_PU_PALL_NONPREPColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_PU_PALL_NONPREPNull()
            Me(Me.tableCONSTANTES.CST_PU_PALL_NONPREPColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFTP_HOSTNAMENull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.FTP_HOSTNAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFTP_HOSTNAMENull()
            Me(Me.tableCONSTANTES.FTP_HOSTNAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFTP_USERNAMENull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.FTP_USERNAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFTP_USERNAMENull()
            Me(Me.tableCONSTANTES.FTP_USERNAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFTP_PASSWORDNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.FTP_PASSWORDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFTP_PASSWORDNull()
            Me(Me.tableCONSTANTES.FTP_PASSWORDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFTP_REMOTEDIRNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.FTP_REMOTEDIRColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFTP_REMOTEDIRNull()
            Me(Me.tableCONSTANTES.FTP_REMOTEDIRColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFTP_LOCKFROMFILENAMENull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.FTP_LOCKFROMFILENAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFTP_LOCKFROMFILENAMENull()
            Me(Me.tableCONSTANTES.FTP_LOCKFROMFILENAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFTP_LOCKTOFILENAMENull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.FTP_LOCKTOFILENAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFTP_LOCKTOFILENAMENull()
            Me(Me.tableCONSTANTES.FTP_LOCKTOFILENAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_DERN_NUM_FACT_COLISAGENull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_DERN_NUM_FACT_COLISAGEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_DERN_NUM_FACT_COLISAGENull()
            Me(Me.tableCONSTANTES.CST_DERN_NUM_FACT_COLISAGEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_COL_IDMODEREGLEMENTNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_COL_IDMODEREGLEMENTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_COL_IDMODEREGLEMENTNull()
            Me(Me.tableCONSTANTES.CST_COL_IDMODEREGLEMENTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_FACT_COL_TAXESNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_FACT_COL_TAXESColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_FACT_COL_TAXESNull()
            Me(Me.tableCONSTANTES.CST_FACT_COL_TAXESColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_FACT_COL_PU_COLISNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_FACT_COL_PU_COLISColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_FACT_COL_PU_COLISNull()
            Me(Me.tableCONSTANTES.CST_FACT_COL_PU_COLISColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SOC_RCSNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SOC_RCSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SOC_RCSNull()
            Me(Me.tableCONSTANTES.CST_SOC_RCSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SOC_TVAINTRANull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SOC_TVAINTRAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SOC_TVAINTRANull()
            Me(Me.tableCONSTANTES.CST_SOC_TVAINTRAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SOC_LICENCENull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SOC_LICENCEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SOC_LICENCENull()
            Me(Me.tableCONSTANTES.CST_SOC_LICENCEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SOC2_RCSNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SOC2_RCSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SOC2_RCSNull()
            Me(Me.tableCONSTANTES.CST_SOC2_RCSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SOC2_TVAINTRANull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SOC2_TVAINTRAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SOC2_TVAINTRANull()
            Me(Me.tableCONSTANTES.CST_SOC2_TVAINTRAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SOC2_LICENCENull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SOC2_LICENCEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SOC2_LICENCENull()
            Me(Me.tableCONSTANTES.CST_SOC2_LICENCEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_EXPORT_COMPTA_PATHNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_EXPORT_COMPTA_PATHColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_EXPORT_COMPTA_PATHNull()
            Me(Me.tableCONSTANTES.CST_EXPORT_COMPTA_PATHColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SOC_COMPTETVANull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SOC_COMPTETVAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SOC_COMPTETVANull()
            Me(Me.tableCONSTANTES.CST_SOC_COMPTETVAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SOC_COMPTEPRODUITNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SOC_COMPTEPRODUITColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SOC_COMPTEPRODUITNull()
            Me(Me.tableCONSTANTES.CST_SOC_COMPTEPRODUITColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SOC_COMPTEBANQUENull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SOC_COMPTEBANQUEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SOC_COMPTEBANQUENull()
            Me(Me.tableCONSTANTES.CST_SOC_COMPTEBANQUEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SOC2_COMPTETVANull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SOC2_COMPTETVAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SOC2_COMPTETVANull()
            Me(Me.tableCONSTANTES.CST_SOC2_COMPTETVAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SOC2_COMPTEPRODUITNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SOC2_COMPTEPRODUITColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SOC2_COMPTEPRODUITNull()
            Me(Me.tableCONSTANTES.CST_SOC2_COMPTEPRODUITColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SOC2_COMPTEBANQUENull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SOC2_COMPTEBANQUEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SOC2_COMPTEBANQUENull()
            Me(Me.tableCONSTANTES.CST_SOC2_COMPTEBANQUEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SOC2_COMPTEPRODUIT_COLNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SOC2_COMPTEPRODUIT_COLColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SOC2_COMPTEPRODUIT_COLNull()
            Me(Me.tableCONSTANTES.CST_SOC2_COMPTEPRODUIT_COLColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_EDI_HOSTNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_EDI_HOSTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_EDI_HOSTNull()
            Me(Me.tableCONSTANTES.CST_EDI_HOSTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_EDI_PORTNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_EDI_PORTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_EDI_PORTNull()
            Me(Me.tableCONSTANTES.CST_EDI_PORTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_EDI_FROMNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_EDI_FROMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_EDI_FROMNull()
            Me(Me.tableCONSTANTES.CST_EDI_FROMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_EDI_TEMPNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_EDI_TEMPColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_EDI_TEMPNull()
            Me(Me.tableCONSTANTES.CST_EDI_TEMPColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SRVCE_PATHNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SRVCE_PATHColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SRVCE_PATHNull()
            Me(Me.tableCONSTANTES.CST_SRVCE_PATHColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SRVCE_NBSECNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SRVCE_NBSECColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SRVCE_NBSECNull()
            Me(Me.tableCONSTANTES.CST_SRVCE_NBSECColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_SRVCE_PATHERRORNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_SRVCE_PATHERRORColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_SRVCE_PATHERRORNull()
            Me(Me.tableCONSTANTES.CST_SRVCE_PATHERRORColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_DERN_NUM_FACT_HBVNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_DERN_NUM_FACT_HBVColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_DERN_NUM_FACT_HBVNull()
            Me(Me.tableCONSTANTES.CST_DERN_NUM_FACT_HBVColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_FTPEDI_SRVNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_FTPEDI_SRVColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_FTPEDI_SRVNull()
            Me(Me.tableCONSTANTES.CST_FTPEDI_SRVColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_FTPEDI_USERNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_FTPEDI_USERColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_FTPEDI_USERNull()
            Me(Me.tableCONSTANTES.CST_FTPEDI_USERColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_FTPEDI_PWDNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_FTPEDI_PWDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_FTPEDI_PWDNull()
            Me(Me.tableCONSTANTES.CST_FTPEDI_PWDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_FTPEDI_PORTNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_FTPEDI_PORTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_FTPEDI_PORTNull()
            Me(Me.tableCONSTANTES.CST_FTPEDI_PORTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_FTPEDI_REPNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_FTPEDI_REPColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_FTPEDI_REPNull()
            Me(Me.tableCONSTANTES.CST_FTPEDI_REPColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCST_FTPEDI_REPLOCALNull() As Boolean
            Return Me.IsNull(Me.tableCONSTANTES.CST_FTPEDI_REPLOCALColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCST_FTPEDI_REPLOCALNull()
            Me(Me.tableCONSTANTES.CST_FTPEDI_REPLOCALColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MVT_STOCKRow
        Inherits Global.System.Data.DataRow

        Private tableMVT_STOCK As MVT_STOCKDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMVT_STOCK = CType(Me.Table, MVT_STOCKDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property STK_ID() As Integer
            Get
                Return CType(Me(Me.tableMVT_STOCK.STK_IDColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableMVT_STOCK.STK_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property STK_PRD_ID() As Integer
            Get
                Try
                    Return CType(Me(Me.tableMVT_STOCK.STK_PRD_IDColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'STK_PRD_ID' dans la table 'MVT_STOCK' est DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableMVT_STOCK.STK_PRD_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property STK_DATE() As Date
            Get
                Try
                    Return CType(Me(Me.tableMVT_STOCK.STK_DATEColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'STK_DATE' dans la table 'MVT_STOCK' est DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableMVT_STOCK.STK_DATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property STK_TYPE() As Double
            Get
                Try
                    Return CType(Me(Me.tableMVT_STOCK.STK_TYPEColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'STK_TYPE' dans la table 'MVT_STOCK' est DBNull.", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableMVT_STOCK.STK_TYPEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property STK_REF_ID() As Integer
            Get
                Try
                    Return CType(Me(Me.tableMVT_STOCK.STK_REF_IDColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'STK_REF_ID' dans la table 'MVT_STOCK' est DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableMVT_STOCK.STK_REF_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property STK_LIB() As String
            Get
                Try
                    Return CType(Me(Me.tableMVT_STOCK.STK_LIBColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'STK_LIB' dans la table 'MVT_STOCK' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMVT_STOCK.STK_LIBColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property STK_QTE() As Integer
            Get
                Try
                    Return CType(Me(Me.tableMVT_STOCK.STK_QTEColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'STK_QTE' dans la table 'MVT_STOCK' est DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableMVT_STOCK.STK_QTEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property STK_COMM() As String
            Get
                Try
                    Return CType(Me(Me.tableMVT_STOCK.STK_COMMColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'STK_COMM' dans la table 'MVT_STOCK' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMVT_STOCK.STK_COMMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property STK_ETAT() As Integer
            Get
                Try
                    Return CType(Me(Me.tableMVT_STOCK.STK_ETATColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'STK_ETAT' dans la table 'MVT_STOCK' est DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableMVT_STOCK.STK_ETATColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property STK_IDFACTCOLISAGE() As Integer
            Get
                Try
                    Return CType(Me(Me.tableMVT_STOCK.STK_IDFACTCOLISAGEColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'STK_IDFACTCOLISAGE' dans la table 'MVT_STOCK' est DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableMVT_STOCK.STK_IDFACTCOLISAGEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property STK_QTECOLIS() As Integer
            Get
                Try
                    Return CType(Me(Me.tableMVT_STOCK.STK_QTECOLISColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'STK_QTECOLIS' dans la table 'MVT_STOCK' est DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableMVT_STOCK.STK_QTECOLISColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FRN_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableMVT_STOCK.FRN_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'FRN_CODE' dans la table 'MVT_STOCK' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMVT_STOCK.FRN_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRD_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableMVT_STOCK.PRD_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'PRD_CODE' dans la table 'MVT_STOCK' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMVT_STOCK.PRD_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRD_LIBELLE() As String
            Get
                Try
                    Return CType(Me(Me.tableMVT_STOCK.PRD_LIBELLEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'PRD_LIBELLE' dans la table 'MVT_STOCK' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMVT_STOCK.PRD_LIBELLEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FRN_RS() As String
            Get
                Try
                    Return CType(Me(Me.tableMVT_STOCK.FRN_RSColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'FRN_RS' dans la table 'MVT_STOCK' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMVT_STOCK.FRN_RSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FRN_NOM() As String
            Get
                Try
                    Return CType(Me(Me.tableMVT_STOCK.FRN_NOMColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'FRN_NOM' dans la table 'MVT_STOCK' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMVT_STOCK.FRN_NOMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property COND() As Integer
            Get
                Try
                    Return CType(Me(Me.tableMVT_STOCK.CONDColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'COND' dans la table 'MVT_STOCK' est DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableMVT_STOCK.CONDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSTK_PRD_IDNull() As Boolean
            Return Me.IsNull(Me.tableMVT_STOCK.STK_PRD_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSTK_PRD_IDNull()
            Me(Me.tableMVT_STOCK.STK_PRD_IDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSTK_DATENull() As Boolean
            Return Me.IsNull(Me.tableMVT_STOCK.STK_DATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSTK_DATENull()
            Me(Me.tableMVT_STOCK.STK_DATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSTK_TYPENull() As Boolean
            Return Me.IsNull(Me.tableMVT_STOCK.STK_TYPEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSTK_TYPENull()
            Me(Me.tableMVT_STOCK.STK_TYPEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSTK_REF_IDNull() As Boolean
            Return Me.IsNull(Me.tableMVT_STOCK.STK_REF_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSTK_REF_IDNull()
            Me(Me.tableMVT_STOCK.STK_REF_IDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSTK_LIBNull() As Boolean
            Return Me.IsNull(Me.tableMVT_STOCK.STK_LIBColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSTK_LIBNull()
            Me(Me.tableMVT_STOCK.STK_LIBColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSTK_QTENull() As Boolean
            Return Me.IsNull(Me.tableMVT_STOCK.STK_QTEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSTK_QTENull()
            Me(Me.tableMVT_STOCK.STK_QTEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSTK_COMMNull() As Boolean
            Return Me.IsNull(Me.tableMVT_STOCK.STK_COMMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSTK_COMMNull()
            Me(Me.tableMVT_STOCK.STK_COMMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSTK_ETATNull() As Boolean
            Return Me.IsNull(Me.tableMVT_STOCK.STK_ETATColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSTK_ETATNull()
            Me(Me.tableMVT_STOCK.STK_ETATColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSTK_IDFACTCOLISAGENull() As Boolean
            Return Me.IsNull(Me.tableMVT_STOCK.STK_IDFACTCOLISAGEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSTK_IDFACTCOLISAGENull()
            Me(Me.tableMVT_STOCK.STK_IDFACTCOLISAGEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSTK_QTECOLISNull() As Boolean
            Return Me.IsNull(Me.tableMVT_STOCK.STK_QTECOLISColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSTK_QTECOLISNull()
            Me(Me.tableMVT_STOCK.STK_QTECOLISColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFRN_CODENull() As Boolean
            Return Me.IsNull(Me.tableMVT_STOCK.FRN_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFRN_CODENull()
            Me(Me.tableMVT_STOCK.FRN_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRD_CODENull() As Boolean
            Return Me.IsNull(Me.tableMVT_STOCK.PRD_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRD_CODENull()
            Me(Me.tableMVT_STOCK.PRD_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRD_LIBELLENull() As Boolean
            Return Me.IsNull(Me.tableMVT_STOCK.PRD_LIBELLEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRD_LIBELLENull()
            Me(Me.tableMVT_STOCK.PRD_LIBELLEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFRN_RSNull() As Boolean
            Return Me.IsNull(Me.tableMVT_STOCK.FRN_RSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFRN_RSNull()
            Me(Me.tableMVT_STOCK.FRN_RSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFRN_NOMNull() As Boolean
            Return Me.IsNull(Me.tableMVT_STOCK.FRN_NOMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFRN_NOMNull()
            Me(Me.tableMVT_STOCK.FRN_NOMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCONDNull() As Boolean
            Return Me.IsNull(Me.tableMVT_STOCK.CONDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCONDNull()
            Me(Me.tableMVT_STOCK.CONDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FRN_COMMRow
        Inherits Global.System.Data.DataRow

        Private tableFRN_COMM As FRN_COMMDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFRN_COMM = CType(Me.Table, FRN_COMMDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FRNC_FRN_ID() As Integer
            Get
                Return CType(Me(Me.tableFRN_COMM.FRNC_FRN_IDColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableFRN_COMM.FRNC_FRN_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FRNC_TYPE_CLIENT() As String
            Get
                Return CType(Me(Me.tableFRN_COMM.FRNC_TYPE_CLIENTColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableFRN_COMM.FRNC_TYPE_CLIENTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FRNC_TX_COMM() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableFRN_COMM.FRNC_TX_COMMColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'FRNC_TX_COMM' dans la table 'FRN_COMM' est DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableFRN_COMM.FRNC_TX_COMMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FRNC_ID() As Short
            Get
                Return CType(Me(Me.tableFRN_COMM.FRNC_IDColumn), Short)
            End Get
            Set(value As Short)
                Me(Me.tableFRN_COMM.FRNC_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFRNC_TX_COMMNull() As Boolean
            Return Me.IsNull(Me.tableFRN_COMM.FRNC_TX_COMMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFRNC_TX_COMMNull()
            Me(Me.tableFRN_COMM.FRNC_TX_COMMColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TRANSPORTEURRow
        Inherits Global.System.Data.DataRow

        Private tableTRANSPORTEUR As TRANSPORTEURDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTRANSPORTEUR = CType(Me.Table, TRANSPORTEURDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TRP_ID() As Integer
            Get
                Return CType(Me(Me.tableTRANSPORTEUR.TRP_IDColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableTRANSPORTEUR.TRP_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TRP_CODE() As String
            Get
                Return CType(Me(Me.tableTRANSPORTEUR.TRP_CODEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableTRANSPORTEUR.TRP_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TRP_NOM() As String
            Get
                Return CType(Me(Me.tableTRANSPORTEUR.TRP_NOMColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableTRANSPORTEUR.TRP_NOMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TRP_LIV_RUE1() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSPORTEUR.TRP_LIV_RUE1Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'TRP_LIV_RUE1' dans la table 'TRANSPORTEUR' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTRANSPORTEUR.TRP_LIV_RUE1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TRP_LIV_RUE2() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSPORTEUR.TRP_LIV_RUE2Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'TRP_LIV_RUE2' dans la table 'TRANSPORTEUR' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTRANSPORTEUR.TRP_LIV_RUE2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TRP_LIV_CP() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSPORTEUR.TRP_LIV_CPColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'TRP_LIV_CP' dans la table 'TRANSPORTEUR' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTRANSPORTEUR.TRP_LIV_CPColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TRP_LIV_VILLE() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSPORTEUR.TRP_LIV_VILLEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'TRP_LIV_VILLE' dans la table 'TRANSPORTEUR' est DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTRANSPORTEUR.TRP_LIV_VILLEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TRP_LIV_TEL() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSPORTEUR.TRP_LIV_TELColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'TRP_LIV_TEL' dans la table 'TRANSPORTEUR' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTRANSPORTEUR.TRP_LIV_TELColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TRP_LIV_FAX() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSPORTEUR.TRP_LIV_FAXColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'TRP_LIV_FAX' dans la table 'TRANSPORTEUR' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTRANSPORTEUR.TRP_LIV_FAXColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TRP_LIV_PORT() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSPORTEUR.TRP_LIV_PORTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'TRP_LIV_PORT' dans la table 'TRANSPORTEUR' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTRANSPORTEUR.TRP_LIV_PORTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TRP_LIV_EMAIL() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSPORTEUR.TRP_LIV_EMAILColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'TRP_LIV_EMAIL' dans la table 'TRANSPORTEUR' est DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTRANSPORTEUR.TRP_LIV_EMAILColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TRP_DEFAUT() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableTRANSPORTEUR.TRP_DEFAUTColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'TRP_DEFAUT' dans la table 'TRANSPORTEUR' est DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableTRANSPORTEUR.TRP_DEFAUTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TRP_COMM() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSPORTEUR.TRP_COMMColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'TRP_COMM' dans la table 'TRANSPORTEUR' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTRANSPORTEUR.TRP_COMMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TRP_LICENCE() As String
            Get
                Try
                    Return CType(Me(Me.tableTRANSPORTEUR.TRP_LICENCEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'TRP_LICENCE' dans la table 'TRANSPORTEUR' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTRANSPORTEUR.TRP_LICENCEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTRP_LIV_RUE1Null() As Boolean
            Return Me.IsNull(Me.tableTRANSPORTEUR.TRP_LIV_RUE1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTRP_LIV_RUE1Null()
            Me(Me.tableTRANSPORTEUR.TRP_LIV_RUE1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTRP_LIV_RUE2Null() As Boolean
            Return Me.IsNull(Me.tableTRANSPORTEUR.TRP_LIV_RUE2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTRP_LIV_RUE2Null()
            Me(Me.tableTRANSPORTEUR.TRP_LIV_RUE2Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTRP_LIV_CPNull() As Boolean
            Return Me.IsNull(Me.tableTRANSPORTEUR.TRP_LIV_CPColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTRP_LIV_CPNull()
            Me(Me.tableTRANSPORTEUR.TRP_LIV_CPColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTRP_LIV_VILLENull() As Boolean
            Return Me.IsNull(Me.tableTRANSPORTEUR.TRP_LIV_VILLEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTRP_LIV_VILLENull()
            Me(Me.tableTRANSPORTEUR.TRP_LIV_VILLEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTRP_LIV_TELNull() As Boolean
            Return Me.IsNull(Me.tableTRANSPORTEUR.TRP_LIV_TELColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTRP_LIV_TELNull()
            Me(Me.tableTRANSPORTEUR.TRP_LIV_TELColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTRP_LIV_FAXNull() As Boolean
            Return Me.IsNull(Me.tableTRANSPORTEUR.TRP_LIV_FAXColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTRP_LIV_FAXNull()
            Me(Me.tableTRANSPORTEUR.TRP_LIV_FAXColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTRP_LIV_PORTNull() As Boolean
            Return Me.IsNull(Me.tableTRANSPORTEUR.TRP_LIV_PORTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTRP_LIV_PORTNull()
            Me(Me.tableTRANSPORTEUR.TRP_LIV_PORTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTRP_LIV_EMAILNull() As Boolean
            Return Me.IsNull(Me.tableTRANSPORTEUR.TRP_LIV_EMAILColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTRP_LIV_EMAILNull()
            Me(Me.tableTRANSPORTEUR.TRP_LIV_EMAILColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTRP_DEFAUTNull() As Boolean
            Return Me.IsNull(Me.tableTRANSPORTEUR.TRP_DEFAUTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTRP_DEFAUTNull()
            Me(Me.tableTRANSPORTEUR.TRP_DEFAUTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTRP_COMMNull() As Boolean
            Return Me.IsNull(Me.tableTRANSPORTEUR.TRP_COMMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTRP_COMMNull()
            Me(Me.tableTRANSPORTEUR.TRP_COMMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTRP_LICENCENull() As Boolean
            Return Me.IsNull(Me.tableTRANSPORTEUR.TRP_LICENCEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTRP_LICENCENull()
            Me(Me.tableTRANSPORTEUR.TRP_LICENCEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FACTCOMRow
        Inherits Global.System.Data.DataRow

        Private tableFACTCOM As FACTCOMDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFACTCOM = CType(Me.Table, FACTCOMDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FCT_ID() As Integer
            Get
                Return CType(Me(Me.tableFACTCOM.FCT_IDColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableFACTCOM.FCT_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FCT_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableFACTCOM.FCT_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'FCT_CODE' dans la table 'FACTCOM' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFACTCOM.FCT_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FCT_ETAT() As Integer
            Get
                Try
                    Return CType(Me(Me.tableFACTCOM.FCT_ETATColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'FCT_ETAT' dans la table 'FACTCOM' est DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableFACTCOM.FCT_ETATColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FCT_DATE() As Date
            Get
                Try
                    Return CType(Me(Me.tableFACTCOM.FCT_DATEColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'FCT_DATE' dans la table 'FACTCOM' est DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableFACTCOM.FCT_DATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FCT_PERIODE() As String
            Get
                Try
                    Return CType(Me(Me.tableFACTCOM.FCT_PERIODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'FCT_PERIODE' dans la table 'FACTCOM' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFACTCOM.FCT_PERIODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FCT_TOTAL_HT() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableFACTCOM.FCT_TOTAL_HTColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'FCT_TOTAL_HT' dans la table 'FACTCOM' est DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableFACTCOM.FCT_TOTAL_HTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FCT_TOTAL_TTC() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableFACTCOM.FCT_TOTAL_TTCColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'FCT_TOTAL_TTC' dans la table 'FACTCOM' est DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableFACTCOM.FCT_TOTAL_TTCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FCT_MONTANT_REGLEMENT() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableFACTCOM.FCT_MONTANT_REGLEMENTColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'FCT_MONTANT_REGLEMENT' dans la table 'FACTCOM' est DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableFACTCOM.FCT_MONTANT_REGLEMENTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FCT_DATE_REGLEMENT() As Date
            Get
                Try
                    Return CType(Me(Me.tableFACTCOM.FCT_DATE_REGLEMENTColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'FCT_DATE_REGLEMENT' dans la table 'FACTCOM' est DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableFACTCOM.FCT_DATE_REGLEMENTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FCT_REF_REGLEMENT() As String
            Get
                Try
                    Return CType(Me(Me.tableFACTCOM.FCT_REF_REGLEMENTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'FCT_REF_REGLEMENT' dans la table 'FACTCOM' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFACTCOM.FCT_REF_REGLEMENTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FCT_FRN_ID() As Integer
            Get
                Return CType(Me(Me.tableFACTCOM.FCT_FRN_IDColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableFACTCOM.FCT_FRN_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FCT_COM_FACT() As String
            Get
                Try
                    Return CType(Me(Me.tableFACTCOM.FCT_COM_FACTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'FCT_COM_FACT' dans la table 'FACTCOM' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFACTCOM.FCT_COM_FACTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FCT_DATE_STAT() As Date
            Get
                Try
                    Return CType(Me(Me.tableFACTCOM.FCT_DATE_STATColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'FCT_DATE_STAT' dans la table 'FACTCOM' est DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableFACTCOM.FCT_DATE_STATColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FCT_BINTERNET() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableFACTCOM.FCT_BINTERNETColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'FCT_BINTERNET' dans la table 'FACTCOM' est DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableFACTCOM.FCT_BINTERNETColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFCT_CODENull() As Boolean
            Return Me.IsNull(Me.tableFACTCOM.FCT_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFCT_CODENull()
            Me(Me.tableFACTCOM.FCT_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFCT_ETATNull() As Boolean
            Return Me.IsNull(Me.tableFACTCOM.FCT_ETATColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFCT_ETATNull()
            Me(Me.tableFACTCOM.FCT_ETATColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFCT_DATENull() As Boolean
            Return Me.IsNull(Me.tableFACTCOM.FCT_DATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFCT_DATENull()
            Me(Me.tableFACTCOM.FCT_DATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFCT_PERIODENull() As Boolean
            Return Me.IsNull(Me.tableFACTCOM.FCT_PERIODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFCT_PERIODENull()
            Me(Me.tableFACTCOM.FCT_PERIODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFCT_TOTAL_HTNull() As Boolean
            Return Me.IsNull(Me.tableFACTCOM.FCT_TOTAL_HTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFCT_TOTAL_HTNull()
            Me(Me.tableFACTCOM.FCT_TOTAL_HTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFCT_TOTAL_TTCNull() As Boolean
            Return Me.IsNull(Me.tableFACTCOM.FCT_TOTAL_TTCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFCT_TOTAL_TTCNull()
            Me(Me.tableFACTCOM.FCT_TOTAL_TTCColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFCT_MONTANT_REGLEMENTNull() As Boolean
            Return Me.IsNull(Me.tableFACTCOM.FCT_MONTANT_REGLEMENTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFCT_MONTANT_REGLEMENTNull()
            Me(Me.tableFACTCOM.FCT_MONTANT_REGLEMENTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFCT_DATE_REGLEMENTNull() As Boolean
            Return Me.IsNull(Me.tableFACTCOM.FCT_DATE_REGLEMENTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFCT_DATE_REGLEMENTNull()
            Me(Me.tableFACTCOM.FCT_DATE_REGLEMENTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFCT_REF_REGLEMENTNull() As Boolean
            Return Me.IsNull(Me.tableFACTCOM.FCT_REF_REGLEMENTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFCT_REF_REGLEMENTNull()
            Me(Me.tableFACTCOM.FCT_REF_REGLEMENTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFCT_COM_FACTNull() As Boolean
            Return Me.IsNull(Me.tableFACTCOM.FCT_COM_FACTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFCT_COM_FACTNull()
            Me(Me.tableFACTCOM.FCT_COM_FACTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFCT_DATE_STATNull() As Boolean
            Return Me.IsNull(Me.tableFACTCOM.FCT_DATE_STATColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFCT_DATE_STATNull()
            Me(Me.tableFACTCOM.FCT_DATE_STATColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFCT_BINTERNETNull() As Boolean
            Return Me.IsNull(Me.tableFACTCOM.FCT_BINTERNETColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFCT_BINTERNETNull()
            Me(Me.tableFACTCOM.FCT_BINTERNETColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class LOCKRow
        Inherits Global.System.Data.DataRow

        Private tableLOCK As LOCKDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableLOCK = CType(Me.Table, LOCKDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LCK_PERSISTID() As Integer
            Get
                Return CType(Me(Me.tableLOCK.LCK_PERSISTIDColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableLOCK.LCK_PERSISTIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LCK_NAME() As String
            Get
                Try
                    Return CType(Me(Me.tableLOCK.LCK_NAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'LCK_NAME' dans la table 'LOCK' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableLOCK.LCK_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LCK_DATE() As Date
            Get
                Try
                    Return CType(Me(Me.tableLOCK.LCK_DATEColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'LCK_DATE' dans la table 'LOCK' est DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableLOCK.LCK_DATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LCK_TYPE() As String
            Get
                Return CType(Me(Me.tableLOCK.LCK_TYPEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableLOCK.LCK_TYPEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLCK_NAMENull() As Boolean
            Return Me.IsNull(Me.tableLOCK.LCK_NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLCK_NAMENull()
            Me(Me.tableLOCK.LCK_NAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLCK_DATENull() As Boolean
            Return Me.IsNull(Me.tableLOCK.LCK_DATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLCK_DATENull()
            Me(Me.tableLOCK.LCK_DATEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class USERSRIGHTSRow
        Inherits Global.System.Data.DataRow

        Private tableUSERSRIGHTS As USERSRIGHTSDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableUSERSRIGHTS = CType(Me.Table, USERSRIGHTSDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RGH_ID() As Integer
            Get
                Return CType(Me(Me.tableUSERSRIGHTS.RGH_IDColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableUSERSRIGHTS.RGH_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RGH_TAG() As String
            Get
                Try
                    Return CType(Me(Me.tableUSERSRIGHTS.RGH_TAGColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RGH_TAG' dans la table 'USERSRIGHTS' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableUSERSRIGHTS.RGH_TAGColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RGH_ROLE() As Integer
            Get
                Try
                    Return CType(Me(Me.tableUSERSRIGHTS.RGH_ROLEColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RGH_ROLE' dans la table 'USERSRIGHTS' est DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableUSERSRIGHTS.RGH_ROLEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RGH_DROIT() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableUSERSRIGHTS.RGH_DROITColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RGH_DROIT' dans la table 'USERSRIGHTS' est DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableUSERSRIGHTS.RGH_DROITColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RGH_TEXT() As String
            Get
                Try
                    Return CType(Me(Me.tableUSERSRIGHTS.RGH_TEXTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RGH_TEXT' dans la table 'USERSRIGHTS' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableUSERSRIGHTS.RGH_TEXTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRGH_TAGNull() As Boolean
            Return Me.IsNull(Me.tableUSERSRIGHTS.RGH_TAGColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRGH_TAGNull()
            Me(Me.tableUSERSRIGHTS.RGH_TAGColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRGH_ROLENull() As Boolean
            Return Me.IsNull(Me.tableUSERSRIGHTS.RGH_ROLEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRGH_ROLENull()
            Me(Me.tableUSERSRIGHTS.RGH_ROLEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRGH_DROITNull() As Boolean
            Return Me.IsNull(Me.tableUSERSRIGHTS.RGH_DROITColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRGH_DROITNull()
            Me(Me.tableUSERSRIGHTS.RGH_DROITColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRGH_TEXTNull() As Boolean
            Return Me.IsNull(Me.tableUSERSRIGHTS.RGH_TEXTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRGH_TEXTNull()
            Me(Me.tableUSERSRIGHTS.RGH_TEXTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class USERSRow
        Inherits Global.System.Data.DataRow

        Private tableUSERS As USERSDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableUSERS = CType(Me.Table, USERSDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property USR_ID() As Integer
            Get
                Return CType(Me(Me.tableUSERS.USR_IDColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableUSERS.USR_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property USR_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableUSERS.USR_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'USR_CODE' dans la table 'USERS' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableUSERS.USR_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property USR_PASSWORD() As String
            Get
                Try
                    Return CType(Me(Me.tableUSERS.USR_PASSWORDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'USR_PASSWORD' dans la table 'USERS' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableUSERS.USR_PASSWORDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property USR_ROLE() As Integer
            Get
                Return CType(Me(Me.tableUSERS.USR_ROLEColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableUSERS.USR_ROLEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsUSR_CODENull() As Boolean
            Return Me.IsNull(Me.tableUSERS.USR_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetUSR_CODENull()
            Me(Me.tableUSERS.USR_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsUSR_PASSWORDNull() As Boolean
            Return Me.IsNull(Me.tableUSERS.USR_PASSWORDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetUSR_PASSWORDNull()
            Me(Me.tableUSERS.USR_PASSWORDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class APPELATIONRow
        Inherits Global.System.Data.DataRow

        Private tableAPPELATION As APPELATIONDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableAPPELATION = CType(Me.Table, APPELATIONDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property APP_CHATEAU() As String
            Get
                Try
                    Return CType(Me(Me.tableAPPELATION.APP_CHATEAUColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'APP_CHATEAU' dans la table 'APPELATION' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableAPPELATION.APP_CHATEAUColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property APP_APPELATION() As String
            Get
                Try
                    Return CType(Me(Me.tableAPPELATION.APP_APPELATIONColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'APP_APPELATION' dans la table 'APPELATION' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableAPPELATION.APP_APPELATIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property APP_ENCEPAG() As String
            Get
                Try
                    Return CType(Me(Me.tableAPPELATION.APP_ENCEPAGColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'APP_ENCEPAG' dans la table 'APPELATION' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableAPPELATION.APP_ENCEPAGColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property APP_TERROIR() As String
            Get
                Try
                    Return CType(Me(Me.tableAPPELATION.APP_TERROIRColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'APP_TERROIR' dans la table 'APPELATION' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableAPPELATION.APP_TERROIRColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property APP_DESCRIPTIF() As String
            Get
                Try
                    Return CType(Me(Me.tableAPPELATION.APP_DESCRIPTIFColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'APP_DESCRIPTIF' dans la table 'APPELATION' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableAPPELATION.APP_DESCRIPTIFColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property APP_ETIQUETTE() As Byte()
            Get
                Try
                    Return CType(Me(Me.tableAPPELATION.APP_ETIQUETTEColumn), Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'APP_ETIQUETTE' dans la table 'APPELATION' est DBNull.", e)
                End Try
            End Get
            Set(value As Byte())
                Me(Me.tableAPPELATION.APP_ETIQUETTEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property APP_ID() As Integer
            Get
                Return CType(Me(Me.tableAPPELATION.APP_IDColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableAPPELATION.APP_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAPP_CHATEAUNull() As Boolean
            Return Me.IsNull(Me.tableAPPELATION.APP_CHATEAUColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAPP_CHATEAUNull()
            Me(Me.tableAPPELATION.APP_CHATEAUColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAPP_APPELATIONNull() As Boolean
            Return Me.IsNull(Me.tableAPPELATION.APP_APPELATIONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAPP_APPELATIONNull()
            Me(Me.tableAPPELATION.APP_APPELATIONColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAPP_ENCEPAGNull() As Boolean
            Return Me.IsNull(Me.tableAPPELATION.APP_ENCEPAGColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAPP_ENCEPAGNull()
            Me(Me.tableAPPELATION.APP_ENCEPAGColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAPP_TERROIRNull() As Boolean
            Return Me.IsNull(Me.tableAPPELATION.APP_TERROIRColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAPP_TERROIRNull()
            Me(Me.tableAPPELATION.APP_TERROIRColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAPP_DESCRIPTIFNull() As Boolean
            Return Me.IsNull(Me.tableAPPELATION.APP_DESCRIPTIFColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAPP_DESCRIPTIFNull()
            Me(Me.tableAPPELATION.APP_DESCRIPTIFColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAPP_ETIQUETTENull() As Boolean
            Return Me.IsNull(Me.tableAPPELATION.APP_ETIQUETTEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAPP_ETIQUETTENull()
            Me(Me.tableAPPELATION.APP_ETIQUETTEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FICHETECHNIQUE_FOURNISSEURRow
        Inherits Global.System.Data.DataRow

        Private tableFICHETECHNIQUE_FOURNISSEUR As FICHETECHNIQUE_FOURNISSEURDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFICHETECHNIQUE_FOURNISSEUR = CType(Me.Table, FICHETECHNIQUE_FOURNISSEURDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FTFRN_TXTDOMAINE() As String
            Get
                Try
                    Return CType(Me(Me.tableFICHETECHNIQUE_FOURNISSEUR.FTFRN_TXTDOMAINEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'FTFRN_TXTDOMAINE' dans la table 'FICHETECHNIQUE_FOURNI" & _
                            "SSEUR' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFICHETECHNIQUE_FOURNISSEUR.FTFRN_TXTDOMAINEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FTFRN_TXTFOURNISSEUR() As String
            Get
                Try
                    Return CType(Me(Me.tableFICHETECHNIQUE_FOURNISSEUR.FTFRN_TXTFOURNISSEURColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'FTFRN_TXTFOURNISSEUR' dans la table 'FICHETECHNIQUE_FO" & _
                            "URNISSEUR' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFICHETECHNIQUE_FOURNISSEUR.FTFRN_TXTFOURNISSEURColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FTFRN_TXTTERROIR() As String
            Get
                Try
                    Return CType(Me(Me.tableFICHETECHNIQUE_FOURNISSEUR.FTFRN_TXTTERROIRColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'FTFRN_TXTTERROIR' dans la table 'FICHETECHNIQUE_FOURNI" & _
                            "SSEUR' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFICHETECHNIQUE_FOURNISSEUR.FTFRN_TXTTERROIRColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FTFRN_ID() As Integer
            Get
                Return CType(Me(Me.tableFICHETECHNIQUE_FOURNISSEUR.FTFRN_IDColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableFICHETECHNIQUE_FOURNISSEUR.FTFRN_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FTFRN_SPECIALITE() As String
            Get
                Try
                    Return CType(Me(Me.tableFICHETECHNIQUE_FOURNISSEUR.FTFRN_SPECIALITEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'FTFRN_SPECIALITE' dans la table 'FICHETECHNIQUE_FOURNI" & _
                            "SSEUR' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFICHETECHNIQUE_FOURNISSEUR.FTFRN_SPECIALITEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFTFRN_TXTDOMAINENull() As Boolean
            Return Me.IsNull(Me.tableFICHETECHNIQUE_FOURNISSEUR.FTFRN_TXTDOMAINEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFTFRN_TXTDOMAINENull()
            Me(Me.tableFICHETECHNIQUE_FOURNISSEUR.FTFRN_TXTDOMAINEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFTFRN_TXTFOURNISSEURNull() As Boolean
            Return Me.IsNull(Me.tableFICHETECHNIQUE_FOURNISSEUR.FTFRN_TXTFOURNISSEURColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFTFRN_TXTFOURNISSEURNull()
            Me(Me.tableFICHETECHNIQUE_FOURNISSEUR.FTFRN_TXTFOURNISSEURColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFTFRN_TXTTERROIRNull() As Boolean
            Return Me.IsNull(Me.tableFICHETECHNIQUE_FOURNISSEUR.FTFRN_TXTTERROIRColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFTFRN_TXTTERROIRNull()
            Me(Me.tableFICHETECHNIQUE_FOURNISSEUR.FTFRN_TXTTERROIRColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFTFRN_SPECIALITENull() As Boolean
            Return Me.IsNull(Me.tableFICHETECHNIQUE_FOURNISSEUR.FTFRN_SPECIALITEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFTFRN_SPECIALITENull()
            Me(Me.tableFICHETECHNIQUE_FOURNISSEUR.FTFRN_SPECIALITEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class IMAGESRow
        Inherits Global.System.Data.DataRow

        Private tableIMAGES As IMAGESDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIMAGES = CType(Me.Table, IMAGESDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IMG_ID() As Integer
            Get
                Return CType(Me(Me.tableIMAGES.IMG_IDColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableIMAGES.IMG_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IMG_OBJECT_ID() As Integer
            Get
                Try
                    Return CType(Me(Me.tableIMAGES.IMG_OBJECT_IDColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'IMG_OBJECT_ID' dans la table 'IMAGES' est DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableIMAGES.IMG_OBJECT_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IMG_TYPE() As String
            Get
                Try
                    Return CType(Me(Me.tableIMAGES.IMG_TYPEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'IMG_TYPE' dans la table 'IMAGES' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIMAGES.IMG_TYPEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IMG_NUM() As Integer
            Get
                Try
                    Return CType(Me(Me.tableIMAGES.IMG_NUMColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'IMG_NUM' dans la table 'IMAGES' est DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableIMAGES.IMG_NUMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IMG_IMAGE() As Byte()
            Get
                Try
                    Return CType(Me(Me.tableIMAGES.IMG_IMAGEColumn), Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'IMG_IMAGE' dans la table 'IMAGES' est DBNull.", e)
                End Try
            End Get
            Set(value As Byte())
                Me(Me.tableIMAGES.IMG_IMAGEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IMG_DESC() As String
            Get
                Try
                    Return CType(Me(Me.tableIMAGES.IMG_DESCColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'IMG_DESC' dans la table 'IMAGES' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableIMAGES.IMG_DESCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIMG_OBJECT_IDNull() As Boolean
            Return Me.IsNull(Me.tableIMAGES.IMG_OBJECT_IDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIMG_OBJECT_IDNull()
            Me(Me.tableIMAGES.IMG_OBJECT_IDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIMG_TYPENull() As Boolean
            Return Me.IsNull(Me.tableIMAGES.IMG_TYPEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIMG_TYPENull()
            Me(Me.tableIMAGES.IMG_TYPEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIMG_NUMNull() As Boolean
            Return Me.IsNull(Me.tableIMAGES.IMG_NUMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIMG_NUMNull()
            Me(Me.tableIMAGES.IMG_NUMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIMG_IMAGENull() As Boolean
            Return Me.IsNull(Me.tableIMAGES.IMG_IMAGEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIMG_IMAGENull()
            Me(Me.tableIMAGES.IMG_IMAGEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIMG_DESCNull() As Boolean
            Return Me.IsNull(Me.tableIMAGES.IMG_DESCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIMG_DESCNull()
            Me(Me.tableIMAGES.IMG_DESCColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RECAP_COLISAGERow
        Inherits Global.System.Data.DataRow

        Private tableRECAP_COLISAGE As RECAP_COLISAGEDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRECAP_COLISAGE = CType(Me.Table, RECAP_COLISAGEDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_TYPE() As String
            Get
                Try
                    Return CType(Me(Me.tableRECAP_COLISAGE.RC_TYPEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_TYPE' dans la table 'RECAP_COLISAGE' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableRECAP_COLISAGE.RC_TYPEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_SI() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAP_COLISAGE.RC_SIColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_SI' dans la table 'RECAP_COLISAGE' est DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAP_COLISAGE.RC_SIColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_ENTREE() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAP_COLISAGE.RC_ENTREEColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_ENTREE' dans la table 'RECAP_COLISAGE' est DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAP_COLISAGE.RC_ENTREEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_SORTIE() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAP_COLISAGE.RC_SORTIEColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_SORTIE' dans la table 'RECAP_COLISAGE' est DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAP_COLISAGE.RC_SORTIEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_SF() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAP_COLISAGE.RC_SFColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_SF' dans la table 'RECAP_COLISAGE' est DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAP_COLISAGE.RC_SFColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_COUT() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAP_COLISAGE.RC_COUTColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_COUT' dans la table 'RECAP_COLISAGE' est DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAP_COLISAGE.RC_COUTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_PRD_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableRECAP_COLISAGE.RC_PRD_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_PRD_CODE' dans la table 'RECAP_COLISAGE' est DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableRECAP_COLISAGE.RC_PRD_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_PRD_LIBELLE() As String
            Get
                Try
                    Return CType(Me(Me.tableRECAP_COLISAGE.RC_PRD_LIBELLEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_PRD_LIBELLE' dans la table 'RECAP_COLISAGE' est DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableRECAP_COLISAGE.RC_PRD_LIBELLEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_FRN_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableRECAP_COLISAGE.RC_FRN_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_FRN_CODE' dans la table 'RECAP_COLISAGE' est DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableRECAP_COLISAGE.RC_FRN_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_FRN_NOM() As String
            Get
                Try
                    Return CType(Me(Me.tableRECAP_COLISAGE.RC_FRN_NOMColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_FRN_NOM' dans la table 'RECAP_COLISAGE' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableRECAP_COLISAGE.RC_FRN_NOMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_FRN_RS() As String
            Get
                Try
                    Return CType(Me(Me.tableRECAP_COLISAGE.RC_FRN_RSColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_FRN_RS' dans la table 'RECAP_COLISAGE' est DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableRECAP_COLISAGE.RC_FRN_RSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_DATE() As Date
            Get
                Try
                    Return CType(Me(Me.tableRECAP_COLISAGE.RC_DATEColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_DATE' dans la table 'RECAP_COLISAGE' est DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableRECAP_COLISAGE.RC_DATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_ID() As Integer
            Get
                Return CType(Me(Me.tableRECAP_COLISAGE.RC_IDColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableRECAP_COLISAGE.RC_IDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_LIBELLE() As String
            Get
                Try
                    Return CType(Me(Me.tableRECAP_COLISAGE.RC_LIBELLEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_LIBELLE' dans la table 'RECAP_COLISAGE' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableRECAP_COLISAGE.RC_LIBELLEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_TYPENull() As Boolean
            Return Me.IsNull(Me.tableRECAP_COLISAGE.RC_TYPEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_TYPENull()
            Me(Me.tableRECAP_COLISAGE.RC_TYPEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_SINull() As Boolean
            Return Me.IsNull(Me.tableRECAP_COLISAGE.RC_SIColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_SINull()
            Me(Me.tableRECAP_COLISAGE.RC_SIColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_ENTREENull() As Boolean
            Return Me.IsNull(Me.tableRECAP_COLISAGE.RC_ENTREEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_ENTREENull()
            Me(Me.tableRECAP_COLISAGE.RC_ENTREEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_SORTIENull() As Boolean
            Return Me.IsNull(Me.tableRECAP_COLISAGE.RC_SORTIEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_SORTIENull()
            Me(Me.tableRECAP_COLISAGE.RC_SORTIEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_SFNull() As Boolean
            Return Me.IsNull(Me.tableRECAP_COLISAGE.RC_SFColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_SFNull()
            Me(Me.tableRECAP_COLISAGE.RC_SFColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_COUTNull() As Boolean
            Return Me.IsNull(Me.tableRECAP_COLISAGE.RC_COUTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_COUTNull()
            Me(Me.tableRECAP_COLISAGE.RC_COUTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_PRD_CODENull() As Boolean
            Return Me.IsNull(Me.tableRECAP_COLISAGE.RC_PRD_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_PRD_CODENull()
            Me(Me.tableRECAP_COLISAGE.RC_PRD_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_PRD_LIBELLENull() As Boolean
            Return Me.IsNull(Me.tableRECAP_COLISAGE.RC_PRD_LIBELLEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_PRD_LIBELLENull()
            Me(Me.tableRECAP_COLISAGE.RC_PRD_LIBELLEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_FRN_CODENull() As Boolean
            Return Me.IsNull(Me.tableRECAP_COLISAGE.RC_FRN_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_FRN_CODENull()
            Me(Me.tableRECAP_COLISAGE.RC_FRN_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_FRN_NOMNull() As Boolean
            Return Me.IsNull(Me.tableRECAP_COLISAGE.RC_FRN_NOMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_FRN_NOMNull()
            Me(Me.tableRECAP_COLISAGE.RC_FRN_NOMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_FRN_RSNull() As Boolean
            Return Me.IsNull(Me.tableRECAP_COLISAGE.RC_FRN_RSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_FRN_RSNull()
            Me(Me.tableRECAP_COLISAGE.RC_FRN_RSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_DATENull() As Boolean
            Return Me.IsNull(Me.tableRECAP_COLISAGE.RC_DATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_DATENull()
            Me(Me.tableRECAP_COLISAGE.RC_DATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_LIBELLENull() As Boolean
            Return Me.IsNull(Me.tableRECAP_COLISAGE.RC_LIBELLEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_LIBELLENull()
            Me(Me.tableRECAP_COLISAGE.RC_LIBELLEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RECAPCOLISAGEJOURNRow
        Inherits Global.System.Data.DataRow

        Private tableRECAPCOLISAGEJOURN As RECAPCOLISAGEJOURNDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRECAPCOLISAGEJOURN = CType(Me.Table, RECAPCOLISAGEJOURNDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_PRD_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_PRD_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_PRD_CODE' dans la table 'RECAPCOLISAGEJOURN' est DB" & _
                            "Null.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_PRD_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_PRD_LIBELLE() As String
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_PRD_LIBELLEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_PRD_LIBELLE' dans la table 'RECAPCOLISAGEJOURN' est" & _
                            " DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_PRD_LIBELLEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_FRN_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_FRN_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_FRN_CODE' dans la table 'RECAPCOLISAGEJOURN' est DB" & _
                            "Null.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_FRN_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_FRN_NOM() As String
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_FRN_NOMColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_FRN_NOM' dans la table 'RECAPCOLISAGEJOURN' est DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_FRN_NOMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_FRN_RS() As String
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_FRN_RSColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_FRN_RS' dans la table 'RECAPCOLISAGEJOURN' est DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_FRN_RSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_COUT_U() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_COUT_UColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_COUT_U' dans la table 'RECAPCOLISAGEJOURN' est DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_COUT_UColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_S01() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_S01Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_S01' dans la table 'RECAPCOLISAGEJOURN' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_S01Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_S02() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_S02Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_S02' dans la table 'RECAPCOLISAGEJOURN' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_S02Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_S03() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_S03Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_S03' dans la table 'RECAPCOLISAGEJOURN' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_S03Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_S04() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_S04Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_S04' dans la table 'RECAPCOLISAGEJOURN' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_S04Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_S05() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_S05Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_S05' dans la table 'RECAPCOLISAGEJOURN' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_S05Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_S06() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_S06Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_S06' dans la table 'RECAPCOLISAGEJOURN' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_S06Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_S07() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_S07Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_S07' dans la table 'RECAPCOLISAGEJOURN' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_S07Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_S08() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_S08Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_S08' dans la table 'RECAPCOLISAGEJOURN' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_S08Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_S09() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_S09Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_S09' dans la table 'RECAPCOLISAGEJOURN' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_S09Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_S10() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_S10Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_S10' dans la table 'RECAPCOLISAGEJOURN' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_S10Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_S11() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_S11Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_S11' dans la table 'RECAPCOLISAGEJOURN' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_S11Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_S12() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_S12Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_S12' dans la table 'RECAPCOLISAGEJOURN' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_S12Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_S13() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_S13Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_S13' dans la table 'RECAPCOLISAGEJOURN' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_S13Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_S14() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_S14Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_S14' dans la table 'RECAPCOLISAGEJOURN' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_S14Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_S15() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_S15Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_S15' dans la table 'RECAPCOLISAGEJOURN' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_S15Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_S16() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_S16Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_S16' dans la table 'RECAPCOLISAGEJOURN' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_S16Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_S17() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_S17Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_S17' dans la table 'RECAPCOLISAGEJOURN' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_S17Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_S18() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_S18Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_S18' dans la table 'RECAPCOLISAGEJOURN' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_S18Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_S19() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_S19Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_S19' dans la table 'RECAPCOLISAGEJOURN' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_S19Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_S20() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_S20Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_S20' dans la table 'RECAPCOLISAGEJOURN' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_S20Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_S21() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_S21Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_S21' dans la table 'RECAPCOLISAGEJOURN' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_S21Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_S22() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_S22Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_S22' dans la table 'RECAPCOLISAGEJOURN' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_S22Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_S23() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_S23Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_S23' dans la table 'RECAPCOLISAGEJOURN' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_S23Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_S24() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_S24Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_S24' dans la table 'RECAPCOLISAGEJOURN' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_S24Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_S25() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_S25Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_S25' dans la table 'RECAPCOLISAGEJOURN' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_S25Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_S26() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_S26Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_S26' dans la table 'RECAPCOLISAGEJOURN' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_S26Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_S27() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_S27Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_S27' dans la table 'RECAPCOLISAGEJOURN' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_S27Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_S28() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_S28Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_S28' dans la table 'RECAPCOLISAGEJOURN' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_S28Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_S29() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_S29Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_S29' dans la table 'RECAPCOLISAGEJOURN' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_S29Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_S30() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_S30Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_S30' dans la table 'RECAPCOLISAGEJOURN' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_S30Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RC_S31() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableRECAPCOLISAGEJOURN.RC_S31Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RC_S31' dans la table 'RECAPCOLISAGEJOURN' est DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableRECAPCOLISAGEJOURN.RC_S31Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_PRD_CODENull() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_PRD_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_PRD_CODENull()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_PRD_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_PRD_LIBELLENull() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_PRD_LIBELLEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_PRD_LIBELLENull()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_PRD_LIBELLEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_FRN_CODENull() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_FRN_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_FRN_CODENull()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_FRN_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_FRN_NOMNull() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_FRN_NOMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_FRN_NOMNull()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_FRN_NOMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_FRN_RSNull() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_FRN_RSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_FRN_RSNull()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_FRN_RSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_COUT_UNull() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_COUT_UColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_COUT_UNull()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_COUT_UColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_S01Null() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_S01Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_S01Null()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_S01Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_S02Null() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_S02Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_S02Null()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_S02Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_S03Null() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_S03Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_S03Null()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_S03Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_S04Null() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_S04Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_S04Null()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_S04Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_S05Null() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_S05Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_S05Null()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_S05Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_S06Null() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_S06Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_S06Null()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_S06Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_S07Null() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_S07Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_S07Null()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_S07Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_S08Null() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_S08Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_S08Null()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_S08Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_S09Null() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_S09Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_S09Null()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_S09Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_S10Null() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_S10Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_S10Null()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_S10Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_S11Null() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_S11Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_S11Null()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_S11Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_S12Null() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_S12Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_S12Null()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_S12Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_S13Null() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_S13Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_S13Null()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_S13Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_S14Null() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_S14Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_S14Null()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_S14Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_S15Null() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_S15Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_S15Null()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_S15Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_S16Null() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_S16Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_S16Null()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_S16Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_S17Null() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_S17Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_S17Null()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_S17Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_S18Null() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_S18Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_S18Null()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_S18Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_S19Null() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_S19Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_S19Null()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_S19Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_S20Null() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_S20Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_S20Null()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_S20Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_S21Null() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_S21Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_S21Null()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_S21Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_S22Null() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_S22Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_S22Null()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_S22Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_S23Null() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_S23Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_S23Null()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_S23Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_S24Null() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_S24Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_S24Null()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_S24Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_S25Null() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_S25Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_S25Null()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_S25Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_S26Null() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_S26Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_S26Null()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_S26Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_S27Null() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_S27Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_S27Null()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_S27Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_S28Null() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_S28Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_S28Null()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_S28Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_S29Null() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_S29Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_S29Null()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_S29Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_S30Null() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_S30Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_S30Null()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_S30Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRC_S31Null() As Boolean
            Return Me.IsNull(Me.tableRECAPCOLISAGEJOURN.RC_S31Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRC_S31Null()
            Me(Me.tableRECAPCOLISAGEJOURN.RC_S31Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class EXPORTPARAMRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As EXPORTPARAMRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As EXPORTPARAMRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As EXPORTPARAMRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class REGLEMENTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As REGLEMENTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As REGLEMENTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As REGLEMENTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CONSTANTESRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CONSTANTESRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CONSTANTESRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CONSTANTESRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MVT_STOCKRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MVT_STOCKRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MVT_STOCKRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MVT_STOCKRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FRN_COMMRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FRN_COMMRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FRN_COMMRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FRN_COMMRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class TRANSPORTEURRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TRANSPORTEURRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As TRANSPORTEURRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As TRANSPORTEURRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FACTCOMRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FACTCOMRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FACTCOMRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FACTCOMRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class LOCKRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As LOCKRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As LOCKRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As LOCKRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class USERSRIGHTSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As USERSRIGHTSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As USERSRIGHTSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As USERSRIGHTSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class USERSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As USERSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As USERSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As USERSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class APPELATIONRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As APPELATIONRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As APPELATIONRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As APPELATIONRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FICHETECHNIQUE_FOURNISSEURRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FICHETECHNIQUE_FOURNISSEURRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FICHETECHNIQUE_FOURNISSEURRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FICHETECHNIQUE_FOURNISSEURRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class IMAGESRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As IMAGESRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As IMAGESRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As IMAGESRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class RECAP_COLISAGERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RECAP_COLISAGERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As RECAP_COLISAGERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As RECAP_COLISAGERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class RECAPCOLISAGEJOURNRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RECAPCOLISAGEJOURNRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As RECAPCOLISAGEJOURNRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As RECAPCOLISAGEJOURNRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace dsVinicomTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class EXPORTPARAMTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "EXPORTPARAM"
            tableMapping.ColumnMappings.Add("EXP_TYPE", "EXP_TYPE")
            tableMapping.ColumnMappings.Add("EXP_NLIGNE", "EXP_NLIGNE")
            tableMapping.ColumnMappings.Add("EXP_NCHAMPS", "EXP_NCHAMPS")
            tableMapping.ColumnMappings.Add("EXP_TYPECHAMPS", "EXP_TYPECHAMPS")
            tableMapping.ColumnMappings.Add("EXP_VALEUR", "EXP_VALEUR")
            tableMapping.ColumnMappings.Add("EXP_LONGUEUR", "EXP_LONGUEUR")
            tableMapping.ColumnMappings.Add("EXP_DESCRIPTION", "EXP_DESCRIPTION")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [EXPORTPARAM] WHERE (([EXP_TYPE] = ?) AND ([EXP_NLIGNE] = ?) AND ([EX"& _ 
                "P_NCHAMPS] = ?) AND ([EXP_TYPECHAMPS] = ?) AND ([EXP_LONGUEUR] = ?) AND ([EXP_DE"& _ 
                "SCRIPTION] = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXP_TYPE", Global.System.Data.OleDb.OleDbType.WChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_TYPE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXP_NLIGNE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_NLIGNE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXP_NCHAMPS", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_NCHAMPS", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXP_TYPECHAMPS", Global.System.Data.OleDb.OleDbType.WChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_TYPECHAMPS", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXP_LONGUEUR", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_LONGUEUR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXP_DESCRIPTION", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_DESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [EXPORTPARAM] ([EXP_TYPE], [EXP_NLIGNE], [EXP_NCHAMPS], [EXP_TYPECHAM"& _ 
                "PS], [EXP_VALEUR], [EXP_LONGUEUR], [EXP_DESCRIPTION]) VALUES (?, ?, ?, ?, ?, ?, "& _ 
                "?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXP_TYPE", Global.System.Data.OleDb.OleDbType.WChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXP_NLIGNE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_NLIGNE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXP_NCHAMPS", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_NCHAMPS", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXP_TYPECHAMPS", Global.System.Data.OleDb.OleDbType.WChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_TYPECHAMPS", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXP_VALEUR", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_VALEUR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXP_LONGUEUR", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_LONGUEUR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXP_DESCRIPTION", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [EXPORTPARAM] SET [EXP_TYPE] = ?, [EXP_NLIGNE] = ?, [EXP_NCHAMPS] = ?, [EX"& _ 
                "P_TYPECHAMPS] = ?, [EXP_VALEUR] = ?, [EXP_LONGUEUR] = ?, [EXP_DESCRIPTION] = ? W"& _ 
                "HERE (([EXP_TYPE] = ?) AND ([EXP_NLIGNE] = ?) AND ([EXP_NCHAMPS] = ?) AND ([EXP_"& _ 
                "TYPECHAMPS] = ?) AND ([EXP_LONGUEUR] = ?) AND ([EXP_DESCRIPTION] = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXP_TYPE", Global.System.Data.OleDb.OleDbType.WChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXP_NLIGNE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_NLIGNE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXP_NCHAMPS", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_NCHAMPS", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXP_TYPECHAMPS", Global.System.Data.OleDb.OleDbType.WChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_TYPECHAMPS", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXP_VALEUR", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_VALEUR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXP_LONGUEUR", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_LONGUEUR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXP_DESCRIPTION", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXP_TYPE", Global.System.Data.OleDb.OleDbType.WChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_TYPE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXP_NLIGNE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_NLIGNE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXP_NCHAMPS", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_NCHAMPS", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXP_TYPECHAMPS", Global.System.Data.OleDb.OleDbType.WChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_TYPECHAMPS", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXP_LONGUEUR", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_LONGUEUR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXP_DESCRIPTION", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_DESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.vini_DB.My.MySettings.Default.ConnectString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(4) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     EXPORTPARAM.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         EXPORTPARAM"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT     EXP_TYPE, EXP_NLIGNE, EXP_NCHAMPS, EXP_TYPECHAMPS, EXP_VALEUR, EXP_LON"& _ 
                "GUEUR, EXP_DESCRIPTION"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         EXPORTPARAM"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (EXP_TYPE = ?)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDE"& _ 
                "R BY EXP_NLIGNE, EXP_NCHAMPS"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXP_TYPE", Global.System.Data.OleDb.OleDbType.WChar, 10, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT     EXP_TYPE, EXP_NLIGNE, EXP_NCHAMPS, EXP_TYPECHAMPS, EXP_VALEUR, EXP_LON"& _ 
                "GUEUR, EXP_DESCRIPTION"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         EXPORTPARAM"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (EXP_TYPE = ?) AND ("& _ 
                "EXP_NLIGNE = ?)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXP_TYPE", Global.System.Data.OleDb.OleDbType.WChar, 10, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXP_NLIGNE", Global.System.Data.OleDb.OleDbType.[Integer], 4, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_NLIGNE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT     MAX(EXP_NCHAMPS) AS NCHAMPS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         EXPORTPARAM"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (EXP_"& _ 
                "TYPE = ?) AND (EXP_NLIGNE = ?)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXP_TYPE", Global.System.Data.OleDb.OleDbType.WChar, 10, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXP_NLIGNE", Global.System.Data.OleDb.OleDbType.[Integer], 4, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_NLIGNE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT     MAX(EXP_NLIGNE) AS NLIGNE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         EXPORTPARAM"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (EXP_TY"& _ 
                "PE = ?)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXP_TYPE", Global.System.Data.OleDb.OleDbType.WChar, 10, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXP_TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsVinicom.EXPORTPARAMDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsVinicom.EXPORTPARAMDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsVinicom.EXPORTPARAMDataTable = New dsVinicom.EXPORTPARAMDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByExp_Type(ByVal dataTable As dsVinicom.EXPORTPARAMDataTable, ByVal EXP_TYPE As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (EXP_TYPE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EXP_TYPE")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(EXP_TYPE,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByExp_Type(ByVal EXP_TYPE As String) As dsVinicom.EXPORTPARAMDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (EXP_TYPE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EXP_TYPE")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(EXP_TYPE,String)
            End If
            Dim dataTable As dsVinicom.EXPORTPARAMDataTable = New dsVinicom.EXPORTPARAMDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByTYPE_NLIGNE(ByVal dataTable As dsVinicom.EXPORTPARAMDataTable, ByVal EXP_TYPE As String, ByVal EXP_NLIGNE As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (EXP_TYPE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EXP_TYPE")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(EXP_TYPE,String)
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(EXP_NLIGNE,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy_TYPE_NLIGNE(ByVal EXP_TYPE As String, ByVal EXP_NLIGNE As Integer) As dsVinicom.EXPORTPARAMDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (EXP_TYPE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EXP_TYPE")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(EXP_TYPE,String)
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(EXP_NLIGNE,Integer)
            Dim dataTable As dsVinicom.EXPORTPARAMDataTable = New dsVinicom.EXPORTPARAMDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsVinicom.EXPORTPARAMDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsVinicom) As Integer
            Return Me.Adapter.Update(dataSet, "EXPORTPARAM")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_EXP_TYPE As String, ByVal Original_EXP_NLIGNE As Integer, ByVal Original_EXP_NCHAMPS As Integer, ByVal Original_EXP_TYPECHAMPS As String, ByVal Original_EXP_LONGUEUR As Integer, ByVal Original_EXP_DESCRIPTION As String) As Integer
            If (Original_EXP_TYPE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_EXP_TYPE")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_EXP_TYPE,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_EXP_NLIGNE,Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_EXP_NCHAMPS,Integer)
            If (Original_EXP_TYPECHAMPS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_EXP_TYPECHAMPS")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_EXP_TYPECHAMPS,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_EXP_LONGUEUR,Integer)
            If (Original_EXP_DESCRIPTION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_EXP_DESCRIPTION")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_EXP_DESCRIPTION,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal EXP_TYPE As String, ByVal EXP_NLIGNE As Integer, ByVal EXP_NCHAMPS As Integer, ByVal EXP_TYPECHAMPS As String, ByVal EXP_VALEUR As String, ByVal EXP_LONGUEUR As Integer, ByVal EXP_DESCRIPTION As String) As Integer
            If (EXP_TYPE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EXP_TYPE")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(EXP_TYPE,String)
            End If
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(EXP_NLIGNE,Integer)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(EXP_NCHAMPS,Integer)
            If (EXP_TYPECHAMPS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EXP_TYPECHAMPS")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(EXP_TYPECHAMPS,String)
            End If
            If (EXP_VALEUR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(EXP_VALEUR,String)
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(EXP_LONGUEUR,Integer)
            If (EXP_DESCRIPTION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EXP_DESCRIPTION")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(EXP_DESCRIPTION,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal EXP_TYPE As String, ByVal EXP_NLIGNE As Integer, ByVal EXP_NCHAMPS As Integer, ByVal EXP_TYPECHAMPS As String, ByVal EXP_VALEUR As String, ByVal EXP_LONGUEUR As Integer, ByVal EXP_DESCRIPTION As String, ByVal Original_EXP_TYPE As String, ByVal Original_EXP_NLIGNE As Integer, ByVal Original_EXP_NCHAMPS As Integer, ByVal Original_EXP_TYPECHAMPS As String, ByVal Original_EXP_LONGUEUR As Integer, ByVal Original_EXP_DESCRIPTION As String) As Integer
            If (EXP_TYPE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EXP_TYPE")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(EXP_TYPE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(EXP_NLIGNE,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(EXP_NCHAMPS,Integer)
            If (EXP_TYPECHAMPS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EXP_TYPECHAMPS")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(EXP_TYPECHAMPS,String)
            End If
            If (EXP_VALEUR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(EXP_VALEUR,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(EXP_LONGUEUR,Integer)
            If (EXP_DESCRIPTION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EXP_DESCRIPTION")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(EXP_DESCRIPTION,String)
            End If
            If (Original_EXP_TYPE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_EXP_TYPE")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_EXP_TYPE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_EXP_NLIGNE,Integer)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_EXP_NCHAMPS,Integer)
            If (Original_EXP_TYPECHAMPS Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_EXP_TYPECHAMPS")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_EXP_TYPECHAMPS,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_EXP_LONGUEUR,Integer)
            If (Original_EXP_DESCRIPTION Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_EXP_DESCRIPTION")
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_EXP_DESCRIPTION,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal EXP_TYPECHAMPS As String, ByVal EXP_VALEUR As String, ByVal EXP_LONGUEUR As Integer, ByVal EXP_DESCRIPTION As String, ByVal Original_EXP_TYPE As String, ByVal Original_EXP_NLIGNE As Integer, ByVal Original_EXP_NCHAMPS As Integer, ByVal Original_EXP_TYPECHAMPS As String, ByVal Original_EXP_LONGUEUR As Integer, ByVal Original_EXP_DESCRIPTION As String) As Integer
            Return Me.Update(Original_EXP_TYPE, Original_EXP_NLIGNE, Original_EXP_NCHAMPS, EXP_TYPECHAMPS, EXP_VALEUR, EXP_LONGUEUR, EXP_DESCRIPTION, Original_EXP_TYPE, Original_EXP_NLIGNE, Original_EXP_NCHAMPS, Original_EXP_TYPECHAMPS, Original_EXP_LONGUEUR, Original_EXP_DESCRIPTION)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function getNbChamps(ByVal EXP_TYPE As String, ByVal EXP_NLIGNE As Integer) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(3)
            If (EXP_TYPE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EXP_TYPE")
            Else
                command.Parameters(0).Value = CType(EXP_TYPE,String)
            End If
            command.Parameters(1).Value = CType(EXP_NLIGNE,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function getNbLignes(ByVal EXP_TYPE As String) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(4)
            If (EXP_TYPE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EXP_TYPE")
            Else
                command.Parameters(0).Value = CType(EXP_TYPE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class REGLEMENTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "REGLEMENT"
            tableMapping.ColumnMappings.Add("RGL_ID", "RGL_ID")
            tableMapping.ColumnMappings.Add("RGL_IDFACT", "RGL_IDFACT")
            tableMapping.ColumnMappings.Add("RGL_MONTANT", "RGL_MONTANT")
            tableMapping.ColumnMappings.Add("RGL_DATE", "RGL_DATE")
            tableMapping.ColumnMappings.Add("RGL_REF", "RGL_REF")
            tableMapping.ColumnMappings.Add("RGL_ETAT", "RGL_ETAT")
            tableMapping.ColumnMappings.Add("RGL_TYPEFACT", "RGL_TYPEFACT")
            tableMapping.ColumnMappings.Add("RGL_COMM", "RGL_COMM")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [REGLEMENT] WHERE (([RGL_ID] = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_RGL_ID", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGL_ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [REGLEMENT] ([RGL_IDFACT], [RGL_MONTANT], [RGL_DATE], [RGL_REF], [RGL"& _ 
                "_ETAT], [RGL_TYPEFACT], [RGL_COMM]) VALUES (?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGL_IDFACT", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGL_IDFACT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGL_MONTANT", Global.System.Data.OleDb.OleDbType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "RGL_MONTANT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGL_DATE", Global.System.Data.OleDb.OleDbType.DBTimeStamp, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGL_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGL_REF", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGL_REF", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGL_ETAT", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGL_ETAT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGL_TYPEFACT", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGL_TYPEFACT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGL_COMM", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGL_COMM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [REGLEMENT] SET [RGL_IDFACT] = ?, [RGL_MONTANT] = ?, [RGL_DATE] = ?, [RGL_"& _ 
                "REF] = ?, [RGL_ETAT] = ?, [RGL_TYPEFACT] = ?, [RGL_COMM] = ? WHERE (([RGL_ID] = "& _ 
                "?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGL_IDFACT", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGL_IDFACT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGL_MONTANT", Global.System.Data.OleDb.OleDbType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "RGL_MONTANT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGL_DATE", Global.System.Data.OleDb.OleDbType.DBTimeStamp, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGL_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGL_REF", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGL_REF", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGL_ETAT", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGL_ETAT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGL_TYPEFACT", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGL_TYPEFACT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGL_COMM", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGL_COMM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_RGL_ID", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGL_ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.vini_DB.My.MySettings.Default.ConnectString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(7) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     RGL_ID, RGL_IDFACT, RGL_MONTANT, RGL_DATE, RGL_REF, RGL_ETAT, RGL_TYPE"& _ 
                "FACT, RGL_COMM"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         REGLEMENT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (RGL_DATE >= ?) AND (RGL_DATE "& _ 
                "<= ?) AND (RGL_TYPEFACT = ?)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGL_DATE", Global.System.Data.OleDb.OleDbType.DBTimeStamp, 8, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGL_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGL_DATE1", Global.System.Data.OleDb.OleDbType.DBTimeStamp, 8, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGL_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGL_TYPEFACT", Global.System.Data.OleDb.OleDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGL_TYPEFACT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(1) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM REGLEMENT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (RGL_IDFACT = ?)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGL_IDFACT", Global.System.Data.OleDb.OleDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGL_IDFACT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._commandCollection(2) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "DELETE FROM REGLEMENT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (RGL_TYPEFACT = ?) AND (RGL_IDFACT = ?)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGL_TYPEFACT", Global.System.Data.OleDb.OleDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGL_TYPEFACT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGL_IDFACT", Global.System.Data.OleDb.OleDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGL_IDFACT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._commandCollection(3) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT RGL_COMM, RGL_DATE, RGL_ETAT, RGL_ID, RGL_IDFACT, RGL_MONTANT, RGL_REF, RG"& _ 
                "L_TYPEFACT FROM REGLEMENT WHERE (RGL_DATE > ?) AND (RGL_DATE < ?)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGL_DATE", Global.System.Data.OleDb.OleDbType.DBTimeStamp, 8, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGL_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGL_DATE1", Global.System.Data.OleDb.OleDbType.DBTimeStamp, 8, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGL_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT RGL_COMM, RGL_DATE, RGL_ETAT, RGL_ID, RGL_IDFACT, RGL_MONTANT, RGL_REF, RG"& _ 
                "L_TYPEFACT FROM REGLEMENT WHERE (RGL_DATE > ?) AND (RGL_DATE < ?) AND (RGL_IDFAC"& _ 
                "T = ?) AND (RGL_TYPEFACT = ?)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGL_DATE", Global.System.Data.OleDb.OleDbType.DBTimeStamp, 8, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGL_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGL_DATE1", Global.System.Data.OleDb.OleDbType.DBTimeStamp, 8, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGL_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGL_IDFACT", Global.System.Data.OleDb.OleDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGL_IDFACT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGL_TYPEFACT", Global.System.Data.OleDb.OleDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGL_TYPEFACT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(5) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT RGL_COMM, RGL_DATE, RGL_ETAT, RGL_ID, RGL_IDFACT, RGL_MONTANT, RGL_REF, RG"& _ 
                "L_TYPEFACT FROM REGLEMENT WHERE (RGL_ID = ?)"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGL_ID", Global.System.Data.OleDb.OleDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGL_ID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT RGL_COMM, RGL_DATE, RGL_ETAT, RGL_ID, RGL_IDFACT, RGL_MONTANT, RGL_REF, RG"& _ 
                "L_TYPEFACT FROM REGLEMENT WHERE (RGL_IDFACT = ?) ORDER BY RGL_DATE"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGL_IDFACT", Global.System.Data.OleDb.OleDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGL_IDFACT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(7) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(7).Connection = Me.Connection
            Me._commandCollection(7).CommandText = "SELECT     MAX(RGL_ID) AS RGL_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         REGLEMENT"
            Me._commandCollection(7).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fillby_DATE_TYPEFACT(ByVal dataTable As dsVinicom.REGLEMENTDataTable, ByVal RGL_DATE As Global.System.Nullable(Of Date), ByVal RGL_DATE1 As Global.System.Nullable(Of Date), ByVal RGL_TYPEFACT As Global.System.Nullable(Of Short)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (RGL_DATE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(RGL_DATE.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (RGL_DATE1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(RGL_DATE1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (RGL_TYPEFACT.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(RGL_TYPEFACT.Value,Short)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetDataBy_DATE_TYPEFACT(ByVal RGL_DATE As Global.System.Nullable(Of Date), ByVal RGL_DATE1 As Global.System.Nullable(Of Date), ByVal RGL_TYPEFACT As Global.System.Nullable(Of Short)) As dsVinicom.REGLEMENTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (RGL_DATE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(RGL_DATE.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (RGL_DATE1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(RGL_DATE1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (RGL_TYPEFACT.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(RGL_TYPEFACT.Value,Short)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsVinicom.REGLEMENTDataTable = New dsVinicom.REGLEMENTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy_DATE(ByVal dataTable As dsVinicom.REGLEMENTDataTable, ByVal RGL_DATE As Global.System.Nullable(Of Date), ByVal RGL_DATE1 As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (RGL_DATE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(RGL_DATE.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (RGL_DATE1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(RGL_DATE1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy_DATE(ByVal RGL_DATE As Global.System.Nullable(Of Date), ByVal RGL_DATE1 As Global.System.Nullable(Of Date)) As dsVinicom.REGLEMENTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (RGL_DATE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(RGL_DATE.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (RGL_DATE1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(RGL_DATE1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsVinicom.REGLEMENTDataTable = New dsVinicom.REGLEMENTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy_DATE_IDFACT_TYPEFACT(ByVal dataTable As dsVinicom.REGLEMENTDataTable, ByVal RGL_DATE As Global.System.Nullable(Of Date), ByVal RGL_DATE1 As Global.System.Nullable(Of Date), ByVal RGL_IDFACT As Short, ByVal RGL_TYPEFACT As Global.System.Nullable(Of Short)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (RGL_DATE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(RGL_DATE.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (RGL_DATE1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(RGL_DATE1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(RGL_IDFACT,Short)
            If (RGL_TYPEFACT.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(RGL_TYPEFACT.Value,Short)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy_DATE_IDFACT_TYPEFACT(ByVal RGL_DATE As Global.System.Nullable(Of Date), ByVal RGL_DATE1 As Global.System.Nullable(Of Date), ByVal RGL_IDFACT As Short, ByVal RGL_TYPEFACT As Global.System.Nullable(Of Short)) As dsVinicom.REGLEMENTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (RGL_DATE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(RGL_DATE.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (RGL_DATE1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(RGL_DATE1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(RGL_IDFACT,Short)
            If (RGL_TYPEFACT.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(RGL_TYPEFACT.Value,Short)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsVinicom.REGLEMENTDataTable = New dsVinicom.REGLEMENTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy_ID(ByVal dataTable As dsVinicom.REGLEMENTDataTable, ByVal RGL_ID As Short) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(RGL_ID,Short)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy_ID(ByVal RGL_ID As Short) As dsVinicom.REGLEMENTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(RGL_ID,Short)
            Dim dataTable As dsVinicom.REGLEMENTDataTable = New dsVinicom.REGLEMENTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy_IDFACT(ByVal dataTable As dsVinicom.REGLEMENTDataTable, ByVal RGL_IDFACT As Short) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(RGL_IDFACT,Short)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy_IDFACT(ByVal RGL_IDFACT As Short) As dsVinicom.REGLEMENTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(RGL_IDFACT,Short)
            Dim dataTable As dsVinicom.REGLEMENTDataTable = New dsVinicom.REGLEMENTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsVinicom.REGLEMENTDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsVinicom) As Integer
            Return Me.Adapter.Update(dataSet, "REGLEMENT")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_RGL_ID As Short) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_RGL_ID,Short)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal RGL_IDFACT As Short, ByVal RGL_MONTANT As Global.System.Nullable(Of Decimal), ByVal RGL_DATE As Global.System.Nullable(Of Date), ByVal RGL_REF As String, ByVal RGL_ETAT As Global.System.Nullable(Of Short), ByVal RGL_TYPEFACT As Global.System.Nullable(Of Short), ByVal RGL_COMM As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(RGL_IDFACT,Short)
            If (RGL_MONTANT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(RGL_MONTANT.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (RGL_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(RGL_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (RGL_REF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(RGL_REF,String)
            End If
            If (RGL_ETAT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(RGL_ETAT.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (RGL_TYPEFACT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(RGL_TYPEFACT.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (RGL_COMM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(RGL_COMM,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal RGL_IDFACT As Short, ByVal RGL_MONTANT As Global.System.Nullable(Of Decimal), ByVal RGL_DATE As Global.System.Nullable(Of Date), ByVal RGL_REF As String, ByVal RGL_ETAT As Global.System.Nullable(Of Short), ByVal RGL_TYPEFACT As Global.System.Nullable(Of Short), ByVal RGL_COMM As String, ByVal Original_RGL_ID As Short) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(RGL_IDFACT,Short)
            If (RGL_MONTANT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(RGL_MONTANT.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (RGL_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(RGL_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (RGL_REF Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(RGL_REF,String)
            End If
            If (RGL_ETAT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(RGL_ETAT.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (RGL_TYPEFACT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(RGL_TYPEFACT.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (RGL_COMM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(RGL_COMM,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_RGL_ID,Short)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function DeleteBy_IDFACT(ByVal RGL_IDFACT As Short) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(RGL_IDFACT,Short)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function DeleteBy_TYPFACT_IDFACT(ByVal RGL_TYPEFACT As Global.System.Nullable(Of Short), ByVal RGL_IDFACT As Short) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(2)
            If (RGL_TYPEFACT.HasValue = true) Then
                command.Parameters(0).Value = CType(RGL_TYPEFACT.Value,Short)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            command.Parameters(1).Value = CType(RGL_IDFACT,Short)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function getMaxID() As Global.System.Nullable(Of Short)
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(7)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Short)()
            Else
                Return New Global.System.Nullable(Of Short)(CType(returnValue,Short))
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CONSTANTESTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CONSTANTES"
            tableMapping.ColumnMappings.Add("CST_SOC_NOMSOC", "CST_SOC_NOMSOC")
            tableMapping.ColumnMappings.Add("CST_SOC_ADRESSE_RUE1", "CST_SOC_ADRESSE_RUE1")
            tableMapping.ColumnMappings.Add("CST_SOC_ADRESSE_RUE2", "CST_SOC_ADRESSE_RUE2")
            tableMapping.ColumnMappings.Add("CST_SOC_ADRESSE_CP", "CST_SOC_ADRESSE_CP")
            tableMapping.ColumnMappings.Add("CST_SOC_ADRESSE_VILLE", "CST_SOC_ADRESSE_VILLE")
            tableMapping.ColumnMappings.Add("CST_SOC_TEL", "CST_SOC_TEL")
            tableMapping.ColumnMappings.Add("CST_SOC_FAX", "CST_SOC_FAX")
            tableMapping.ColumnMappings.Add("CST_SOC_PORT", "CST_SOC_PORT")
            tableMapping.ColumnMappings.Add("CST_SOC_EMAIL", "CST_SOC_EMAIL")
            tableMapping.ColumnMappings.Add("CST_FAX_PAGE_GARDE", "CST_FAX_PAGE_GARDE")
            tableMapping.ColumnMappings.Add("CST_FAX_ENVOI_PAGE_GARDE", "CST_FAX_ENVOI_PAGE_GARDE")
            tableMapping.ColumnMappings.Add("CST_FAX_SERVERNAME", "CST_FAX_SERVERNAME")
            tableMapping.ColumnMappings.Add("CST_DERN_NUM_CMD_CLT", "CST_DERN_NUM_CMD_CLT")
            tableMapping.ColumnMappings.Add("CST_DERN_NUM_SCMD", "CST_DERN_NUM_SCMD")
            tableMapping.ColumnMappings.Add("CST_DERN_NUM_BA", "CST_DERN_NUM_BA")
            tableMapping.ColumnMappings.Add("CST_VERSION_BD", "CST_VERSION_BD")
            tableMapping.ColumnMappings.Add("CST_FAX_PREFIX", "CST_FAX_PREFIX")
            tableMapping.ColumnMappings.Add("CST_TX_COMMISSION", "CST_TX_COMMISSION")
            tableMapping.ColumnMappings.Add("CST_DERN_NUM_FACTCOM", "CST_DERN_NUM_FACTCOM")
            tableMapping.ColumnMappings.Add("CST_PATH_FACTCOM", "CST_PATH_FACTCOM")
            tableMapping.ColumnMappings.Add("CST_DERN_NUM_FACT_TRP", "CST_DERN_NUM_FACT_TRP")
            tableMapping.ColumnMappings.Add("CST_TAXES_TRP", "CST_TAXES_TRP")
            tableMapping.ColumnMappings.Add("CST_PATH_FACTTRP", "CST_PATH_FACTTRP")
            tableMapping.ColumnMappings.Add("CST_TRP_IDMODEREGLEMENT", "CST_TRP_IDMODEREGLEMENT")
            tableMapping.ColumnMappings.Add("CST_SOC2_NOMSOC", "CST_SOC2_NOMSOC")
            tableMapping.ColumnMappings.Add("CST_SOC2_ADRESSE_RUE1", "CST_SOC2_ADRESSE_RUE1")
            tableMapping.ColumnMappings.Add("CST_SOC2_ADRESSE_RUE2", "CST_SOC2_ADRESSE_RUE2")
            tableMapping.ColumnMappings.Add("CST_SOC2_ADRESSE_CP", "CST_SOC2_ADRESSE_CP")
            tableMapping.ColumnMappings.Add("CST_SOC2_ADRESSE_VILLE", "CST_SOC2_ADRESSE_VILLE")
            tableMapping.ColumnMappings.Add("CST_SOC2_TEL", "CST_SOC2_TEL")
            tableMapping.ColumnMappings.Add("CST_SOC2_FAX", "CST_SOC2_FAX")
            tableMapping.ColumnMappings.Add("CST_SOC2_EMAIL", "CST_SOC2_EMAIL")
            tableMapping.ColumnMappings.Add("CST_SOC2_PORT", "CST_SOC2_PORT")
            tableMapping.ColumnMappings.Add("CST_PLTFRM_NOM", "CST_PLTFRM_NOM")
            tableMapping.ColumnMappings.Add("CST_PLTFRM_RUE1", "CST_PLTFRM_RUE1")
            tableMapping.ColumnMappings.Add("CST_PLTFRM_RUE2", "CST_PLTFRM_RUE2")
            tableMapping.ColumnMappings.Add("CST_PLTFRM_CP", "CST_PLTFRM_CP")
            tableMapping.ColumnMappings.Add("CST_PLTFRM_VILLE", "CST_PLTFRM_VILLE")
            tableMapping.ColumnMappings.Add("CST_PLTFRM_TEL", "CST_PLTFRM_TEL")
            tableMapping.ColumnMappings.Add("CST_PLTFRM_FAX", "CST_PLTFRM_FAX")
            tableMapping.ColumnMappings.Add("CST_PLTFRM_EMAIL", "CST_PLTFRM_EMAIL")
            tableMapping.ColumnMappings.Add("CST_PLTFRM_PORT", "CST_PLTFRM_PORT")
            tableMapping.ColumnMappings.Add("CST_TRP_TXGAZOLE", "CST_TRP_TXGAZOLE")
            tableMapping.ColumnMappings.Add("CST_PU_PALL_PREP", "CST_PU_PALL_PREP")
            tableMapping.ColumnMappings.Add("CST_PU_PALL_NONPREP", "CST_PU_PALL_NONPREP")
            tableMapping.ColumnMappings.Add("FTP_HOSTNAME", "FTP_HOSTNAME")
            tableMapping.ColumnMappings.Add("FTP_USERNAME", "FTP_USERNAME")
            tableMapping.ColumnMappings.Add("FTP_PASSWORD", "FTP_PASSWORD")
            tableMapping.ColumnMappings.Add("FTP_REMOTEDIR", "FTP_REMOTEDIR")
            tableMapping.ColumnMappings.Add("FTP_LOCKFROMFILENAME", "FTP_LOCKFROMFILENAME")
            tableMapping.ColumnMappings.Add("FTP_LOCKTOFILENAME", "FTP_LOCKTOFILENAME")
            tableMapping.ColumnMappings.Add("CST_DERN_NUM_FACT_COLISAGE", "CST_DERN_NUM_FACT_COLISAGE")
            tableMapping.ColumnMappings.Add("CST_COL_IDMODEREGLEMENT", "CST_COL_IDMODEREGLEMENT")
            tableMapping.ColumnMappings.Add("CST_FACT_COL_TAXES", "CST_FACT_COL_TAXES")
            tableMapping.ColumnMappings.Add("CST_FACT_COL_PU_COLIS", "CST_FACT_COL_PU_COLIS")
            tableMapping.ColumnMappings.Add("CST_SOC_RCS", "CST_SOC_RCS")
            tableMapping.ColumnMappings.Add("CST_SOC_TVAINTRA", "CST_SOC_TVAINTRA")
            tableMapping.ColumnMappings.Add("CST_SOC_LICENCE", "CST_SOC_LICENCE")
            tableMapping.ColumnMappings.Add("CST_SOC2_RCS", "CST_SOC2_RCS")
            tableMapping.ColumnMappings.Add("CST_SOC2_TVAINTRA", "CST_SOC2_TVAINTRA")
            tableMapping.ColumnMappings.Add("CST_SOC2_LICENCE", "CST_SOC2_LICENCE")
            tableMapping.ColumnMappings.Add("CST_EXPORT_COMPTA_PATH", "CST_EXPORT_COMPTA_PATH")
            tableMapping.ColumnMappings.Add("CST_SOC_COMPTETVA", "CST_SOC_COMPTETVA")
            tableMapping.ColumnMappings.Add("CST_SOC_COMPTEPRODUIT", "CST_SOC_COMPTEPRODUIT")
            tableMapping.ColumnMappings.Add("CST_SOC_COMPTEBANQUE", "CST_SOC_COMPTEBANQUE")
            tableMapping.ColumnMappings.Add("CST_SOC2_COMPTETVA", "CST_SOC2_COMPTETVA")
            tableMapping.ColumnMappings.Add("CST_SOC2_COMPTEPRODUIT", "CST_SOC2_COMPTEPRODUIT")
            tableMapping.ColumnMappings.Add("CST_SOC2_COMPTEBANQUE", "CST_SOC2_COMPTEBANQUE")
            tableMapping.ColumnMappings.Add("CST_SOC2_COMPTEPRODUIT_COL", "CST_SOC2_COMPTEPRODUIT_COL")
            tableMapping.ColumnMappings.Add("CST_ID", "CST_ID")
            tableMapping.ColumnMappings.Add("CST_EDI_HOST", "CST_EDI_HOST")
            tableMapping.ColumnMappings.Add("CST_EDI_PORT", "CST_EDI_PORT")
            tableMapping.ColumnMappings.Add("CST_EDI_FROM", "CST_EDI_FROM")
            tableMapping.ColumnMappings.Add("CST_EDI_TEMP", "CST_EDI_TEMP")
            tableMapping.ColumnMappings.Add("CST_SRVCE_PATH", "CST_SRVCE_PATH")
            tableMapping.ColumnMappings.Add("CST_SRVCE_NBSEC", "CST_SRVCE_NBSEC")
            tableMapping.ColumnMappings.Add("CST_SRVCE_PATHERROR", "CST_SRVCE_PATHERROR")
            tableMapping.ColumnMappings.Add("CST_DERN_NUM_FACT_HBV", "CST_DERN_NUM_FACT_HBV")
            tableMapping.ColumnMappings.Add("CST_FTPEDI_USER", "CST_FTPEDI_USER")
            tableMapping.ColumnMappings.Add("CST_FTPEDI_SRV", "CST_FTPEDI_SRV")
            tableMapping.ColumnMappings.Add("CST_FTPEDI_PWD", "CST_FTPEDI_PWD")
            tableMapping.ColumnMappings.Add("CST_FTPEDI_PORT", "CST_FTPEDI_PORT")
            tableMapping.ColumnMappings.Add("CST_FTPEDI_REP", "CST_FTPEDI_REP")
            tableMapping.ColumnMappings.Add("CST_FTPEDI_REPLOCAL", "CST_FTPEDI_REPLOCAL")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [CONSTANTES] WHERE (((? = 1 AND [CST_SOC_NOMSOC] IS NULL) OR ([CST_SO"& _ 
                "C_NOMSOC] = ?)) AND ((? = 1 AND [CST_SOC_ADRESSE_RUE1] IS NULL) OR ([CST_SOC_ADR"& _ 
                "ESSE_RUE1] = ?)) AND ((? = 1 AND [CST_SOC_ADRESSE_RUE2] IS NULL) OR ([CST_SOC_AD"& _ 
                "RESSE_RUE2] = ?)) AND ((? = 1 AND [CST_SOC_ADRESSE_CP] IS NULL) OR ([CST_SOC_ADR"& _ 
                "ESSE_CP] = ?)) AND ((? = 1 AND [CST_SOC_ADRESSE_VILLE] IS NULL) OR ([CST_SOC_ADR"& _ 
                "ESSE_VILLE] = ?)) AND ((? = 1 AND [CST_SOC_TEL] IS NULL) OR ([CST_SOC_TEL] = ?))"& _ 
                " AND ((? = 1 AND [CST_SOC_FAX] IS NULL) OR ([CST_SOC_FAX] = ?)) AND ((? = 1 AND "& _ 
                "[CST_SOC_PORT] IS NULL) OR ([CST_SOC_PORT] = ?)) AND ((? = 1 AND [CST_SOC_EMAIL]"& _ 
                " IS NULL) OR ([CST_SOC_EMAIL] = ?)) AND ((? = 1 AND [CST_FAX_PAGE_GARDE] IS NULL"& _ 
                ") OR ([CST_FAX_PAGE_GARDE] = ?)) AND ((? = 1 AND [CST_FAX_ENVOI_PAGE_GARDE] IS N"& _ 
                "ULL) OR ([CST_FAX_ENVOI_PAGE_GARDE] = ?)) AND ((? = 1 AND [CST_FAX_SERVERNAME] I"& _ 
                "S NULL) OR ([CST_FAX_SERVERNAME] = ?)) AND ((? = 1 AND [CST_DERN_NUM_CMD_CLT] IS"& _ 
                " NULL) OR ([CST_DERN_NUM_CMD_CLT] = ?)) AND ((? = 1 AND [CST_DERN_NUM_SCMD] IS N"& _ 
                "ULL) OR ([CST_DERN_NUM_SCMD] = ?)) AND ((? = 1 AND [CST_DERN_NUM_BA] IS NULL) OR"& _ 
                " ([CST_DERN_NUM_BA] = ?)) AND ((? = 1 AND [CST_VERSION_BD] IS NULL) OR ([CST_VER"& _ 
                "SION_BD] = ?)) AND ((? = 1 AND [CST_FAX_PREFIX] IS NULL) OR ([CST_FAX_PREFIX] = "& _ 
                "?)) AND ((? = 1 AND [CST_TX_COMMISSION] IS NULL) OR ([CST_TX_COMMISSION] = ?)) A"& _ 
                "ND ((? = 1 AND [CST_DERN_NUM_FACTCOM] IS NULL) OR ([CST_DERN_NUM_FACTCOM] = ?)) "& _ 
                "AND ((? = 1 AND [CST_PATH_FACTCOM] IS NULL) OR ([CST_PATH_FACTCOM] = ?)) AND ((?"& _ 
                " = 1 AND [CST_DERN_NUM_FACT_TRP] IS NULL) OR ([CST_DERN_NUM_FACT_TRP] = ?)) AND "& _ 
                "((? = 1 AND [CST_TAXES_TRP] IS NULL) OR ([CST_TAXES_TRP] = ?)) AND ((? = 1 AND ["& _ 
                "CST_PATH_FACTTRP] IS NULL) OR ([CST_PATH_FACTTRP] = ?)) AND ((? = 1 AND [CST_TRP"& _ 
                "_IDMODEREGLEMENT] IS NULL) OR ([CST_TRP_IDMODEREGLEMENT] = ?)) AND ((? = 1 AND ["& _ 
                "CST_SOC2_NOMSOC] IS NULL) OR ([CST_SOC2_NOMSOC] = ?)) AND ((? = 1 AND [CST_SOC2_"& _ 
                "ADRESSE_RUE1] IS NULL) OR ([CST_SOC2_ADRESSE_RUE1] = ?)) AND ((? = 1 AND [CST_SO"& _ 
                "C2_ADRESSE_RUE2] IS NULL) OR ([CST_SOC2_ADRESSE_RUE2] = ?)) AND ((? = 1 AND [CST"& _ 
                "_SOC2_ADRESSE_CP] IS NULL) OR ([CST_SOC2_ADRESSE_CP] = ?)) AND ((? = 1 AND [CST_"& _ 
                "SOC2_ADRESSE_VILLE] IS NULL) OR ([CST_SOC2_ADRESSE_VILLE] = ?)) AND ((? = 1 AND "& _ 
                "[CST_SOC2_TEL] IS NULL) OR ([CST_SOC2_TEL] = ?)) AND ((? = 1 AND [CST_SOC2_FAX] "& _ 
                "IS NULL) OR ([CST_SOC2_FAX] = ?)) AND ((? = 1 AND [CST_SOC2_EMAIL] IS NULL) OR ("& _ 
                "[CST_SOC2_EMAIL] = ?)) AND ((? = 1 AND [CST_SOC2_PORT] IS NULL) OR ([CST_SOC2_PO"& _ 
                "RT] = ?)) AND ((? = 1 AND [CST_PLTFRM_NOM] IS NULL) OR ([CST_PLTFRM_NOM] = ?)) A"& _ 
                "ND ((? = 1 AND [CST_PLTFRM_RUE1] IS NULL) OR ([CST_PLTFRM_RUE1] = ?)) AND ((? = "& _ 
                "1 AND [CST_PLTFRM_RUE2] IS NULL) OR ([CST_PLTFRM_RUE2] = ?)) AND ((? = 1 AND [CS"& _ 
                "T_PLTFRM_CP] IS NULL) OR ([CST_PLTFRM_CP] = ?)) AND ((? = 1 AND [CST_PLTFRM_VILL"& _ 
                "E] IS NULL) OR ([CST_PLTFRM_VILLE] = ?)) AND ((? = 1 AND [CST_PLTFRM_TEL] IS NUL"& _ 
                "L) OR ([CST_PLTFRM_TEL] = ?)) AND ((? = 1 AND [CST_PLTFRM_FAX] IS NULL) OR ([CST"& _ 
                "_PLTFRM_FAX] = ?)) AND ((? = 1 AND [CST_PLTFRM_EMAIL] IS NULL) OR ([CST_PLTFRM_E"& _ 
                "MAIL] = ?)) AND ((? = 1 AND [CST_PLTFRM_PORT] IS NULL) OR ([CST_PLTFRM_PORT] = ?"& _ 
                ")) AND ((? = 1 AND [CST_TRP_TXGAZOLE] IS NULL) OR ([CST_TRP_TXGAZOLE] = ?)) AND "& _ 
                "((? = 1 AND [CST_PU_PALL_PREP] IS NULL) OR ([CST_PU_PALL_PREP] = ?)) AND ((? = 1"& _ 
                " AND [CST_PU_PALL_NONPREP] IS NULL) OR ([CST_PU_PALL_NONPREP] = ?)) AND ((? = 1 "& _ 
                "AND [FTP_HOSTNAME] IS NULL) OR ([FTP_HOSTNAME] = ?)) AND ((? = 1 AND [FTP_USERNA"& _ 
                "ME] IS NULL) OR ([FTP_USERNAME] = ?)) AND ((? = 1 AND [FTP_PASSWORD] IS NULL) OR"& _ 
                " ([FTP_PASSWORD] = ?)) AND ((? = 1 AND [FTP_REMOTEDIR] IS NULL) OR ([FTP_REMOTED"& _ 
                "IR] = ?)) AND ((? = 1 AND [FTP_LOCKFROMFILENAME] IS NULL) OR ([FTP_LOCKFROMFILEN"& _ 
                "AME] = ?)) AND ((? = 1 AND [FTP_LOCKTOFILENAME] IS NULL) OR ([FTP_LOCKTOFILENAME"& _ 
                "] = ?)) AND ((? = 1 AND [CST_DERN_NUM_FACT_COLISAGE] IS NULL) OR ([CST_DERN_NUM_"& _ 
                "FACT_COLISAGE] = ?)) AND ((? = 1 AND [CST_COL_IDMODEREGLEMENT] IS NULL) OR ([CST"& _ 
                "_COL_IDMODEREGLEMENT] = ?)) AND ((? = 1 AND [CST_FACT_COL_TAXES] IS NULL) OR ([C"& _ 
                "ST_FACT_COL_TAXES] = ?)) AND ((? = 1 AND [CST_FACT_COL_PU_COLIS] IS NULL) OR ([C"& _ 
                "ST_FACT_COL_PU_COLIS] = ?)) AND ((? = 1 AND [CST_SOC_RCS] IS NULL) OR ([CST_SOC_"& _ 
                "RCS] = ?)) AND ((? = 1 AND [CST_SOC_TVAINTRA] IS NULL) OR ([CST_SOC_TVAINTRA] = "& _ 
                "?)) AND ((? = 1 AND [CST_SOC_LICENCE] IS NULL) OR ([CST_SOC_LICENCE] = ?)) AND ("& _ 
                "(? = 1 AND [CST_SOC2_RCS] IS NULL) OR ([CST_SOC2_RCS] = ?)) AND ((? = 1 AND [CST"& _ 
                "_SOC2_TVAINTRA] IS NULL) OR ([CST_SOC2_TVAINTRA] = ?)) AND ((? = 1 AND [CST_SOC2"& _ 
                "_LICENCE] IS NULL) OR ([CST_SOC2_LICENCE] = ?)) AND ((? = 1 AND [CST_EXPORT_COMP"& _ 
                "TA_PATH] IS NULL) OR ([CST_EXPORT_COMPTA_PATH] = ?)) AND ((? = 1 AND [CST_SOC_CO"& _ 
                "MPTETVA] IS NULL) OR ([CST_SOC_COMPTETVA] = ?)) AND ((? = 1 AND [CST_SOC_COMPTEP"& _ 
                "RODUIT] IS NULL) OR ([CST_SOC_COMPTEPRODUIT] = ?)) AND ((? = 1 AND [CST_SOC_COMP"& _ 
                "TEBANQUE] IS NULL) OR ([CST_SOC_COMPTEBANQUE] = ?)) AND ((? = 1 AND [CST_SOC2_CO"& _ 
                "MPTETVA] IS NULL) OR ([CST_SOC2_COMPTETVA] = ?)) AND ((? = 1 AND [CST_SOC2_COMPT"& _ 
                "EPRODUIT] IS NULL) OR ([CST_SOC2_COMPTEPRODUIT] = ?)) AND ((? = 1 AND [CST_SOC2_"& _ 
                "COMPTEBANQUE] IS NULL) OR ([CST_SOC2_COMPTEBANQUE] = ?)) AND ([CST_ID] = ?) AND "& _ 
                "((? = 1 AND [CST_SOC2_COMPTEPRODUIT_COL] IS NULL) OR ([CST_SOC2_COMPTEPRODUIT_CO"& _ 
                "L] = ?)) AND ((? = 1 AND [CST_EDI_HOST] IS NULL) OR ([CST_EDI_HOST] = ?)) AND (("& _ 
                "? = 1 AND [CST_EDI_PORT] IS NULL) OR ([CST_EDI_PORT] = ?)) AND ((? = 1 AND [CST_"& _ 
                "EDI_FROM] IS NULL) OR ([CST_EDI_FROM] = ?)) AND ((? = 1 AND [CST_EDI_TEMP] IS NU"& _ 
                "LL) OR ([CST_EDI_TEMP] = ?)) AND ((? = 1 AND [CST_SRVCE_PATH] IS NULL) OR ([CST_"& _ 
                "SRVCE_PATH] = ?)) AND ((? = 1 AND [CST_SRVCE_NBSEC] IS NULL) OR ([CST_SRVCE_NBSE"& _ 
                "C] = ?)) AND ((? = 1 AND [CST_SRVCE_PATHERROR] IS NULL) OR ([CST_SRVCE_PATHERROR"& _ 
                "] = ?)) AND ((? = 1 AND [CST_DERN_NUM_FACT_HBV] IS NULL) OR ([CST_DERN_NUM_FACT_"& _ 
                "HBV] = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC_NOMSOC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_NOMSOC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC_NOMSOC", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_NOMSOC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC_ADRESSE_RUE1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_ADRESSE_RUE1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC_ADRESSE_RUE1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_ADRESSE_RUE1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC_ADRESSE_RUE2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_ADRESSE_RUE2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC_ADRESSE_RUE2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_ADRESSE_RUE2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC_ADRESSE_CP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_ADRESSE_CP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC_ADRESSE_CP", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_ADRESSE_CP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC_ADRESSE_VILLE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_ADRESSE_VILLE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC_ADRESSE_VILLE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_ADRESSE_VILLE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC_TEL", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_TEL", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC_TEL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_TEL", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC_FAX", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_FAX", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC_FAX", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_FAX", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC_PORT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_PORT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC_PORT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_PORT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC_EMAIL", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_EMAIL", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC_EMAIL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_EMAIL", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_FAX_PAGE_GARDE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FAX_PAGE_GARDE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_FAX_PAGE_GARDE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FAX_PAGE_GARDE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_FAX_ENVOI_PAGE_GARDE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FAX_ENVOI_PAGE_GARDE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_FAX_ENVOI_PAGE_GARDE", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FAX_ENVOI_PAGE_GARDE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_FAX_SERVERNAME", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FAX_SERVERNAME", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_FAX_SERVERNAME", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FAX_SERVERNAME", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_DERN_NUM_CMD_CLT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_CMD_CLT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_DERN_NUM_CMD_CLT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_CMD_CLT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_DERN_NUM_SCMD", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_SCMD", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_DERN_NUM_SCMD", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_SCMD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_DERN_NUM_BA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_BA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_DERN_NUM_BA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_BA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_VERSION_BD", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_VERSION_BD", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_VERSION_BD", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_VERSION_BD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_FAX_PREFIX", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FAX_PREFIX", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_FAX_PREFIX", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FAX_PREFIX", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_TX_COMMISSION", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_TX_COMMISSION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_TX_COMMISSION", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_TX_COMMISSION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_DERN_NUM_FACTCOM", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_FACTCOM", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_DERN_NUM_FACTCOM", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_FACTCOM", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_PATH_FACTCOM", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PATH_FACTCOM", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_PATH_FACTCOM", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PATH_FACTCOM", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_DERN_NUM_FACT_TRP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_FACT_TRP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_DERN_NUM_FACT_TRP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_FACT_TRP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_TAXES_TRP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_TAXES_TRP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_TAXES_TRP", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_TAXES_TRP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_PATH_FACTTRP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PATH_FACTTRP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_PATH_FACTTRP", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PATH_FACTTRP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_TRP_IDMODEREGLEMENT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_TRP_IDMODEREGLEMENT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_TRP_IDMODEREGLEMENT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_TRP_IDMODEREGLEMENT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_NOMSOC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_NOMSOC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_NOMSOC", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_NOMSOC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_ADRESSE_RUE1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_ADRESSE_RUE1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_ADRESSE_RUE1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_ADRESSE_RUE1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_ADRESSE_RUE2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_ADRESSE_RUE2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_ADRESSE_RUE2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_ADRESSE_RUE2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_ADRESSE_CP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_ADRESSE_CP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_ADRESSE_CP", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_ADRESSE_CP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_ADRESSE_VILLE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_ADRESSE_VILLE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_ADRESSE_VILLE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_ADRESSE_VILLE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_TEL", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_TEL", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_TEL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_TEL", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_FAX", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_FAX", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_FAX", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_FAX", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_EMAIL", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_EMAIL", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_EMAIL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_EMAIL", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_PORT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_PORT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_PORT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_PORT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_PLTFRM_NOM", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_NOM", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_PLTFRM_NOM", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_NOM", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_PLTFRM_RUE1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_RUE1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_PLTFRM_RUE1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_RUE1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_PLTFRM_RUE2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_RUE2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_PLTFRM_RUE2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_RUE2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_PLTFRM_CP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_CP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_PLTFRM_CP", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_CP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_PLTFRM_VILLE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_VILLE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_PLTFRM_VILLE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_VILLE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_PLTFRM_TEL", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_TEL", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_PLTFRM_TEL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_TEL", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_PLTFRM_FAX", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_FAX", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_PLTFRM_FAX", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_FAX", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_PLTFRM_EMAIL", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_EMAIL", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_PLTFRM_EMAIL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_EMAIL", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_PLTFRM_PORT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_PORT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_PLTFRM_PORT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_PORT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_TRP_TXGAZOLE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_TRP_TXGAZOLE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_TRP_TXGAZOLE", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_TRP_TXGAZOLE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_PU_PALL_PREP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PU_PALL_PREP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_PU_PALL_PREP", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PU_PALL_PREP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_PU_PALL_NONPREP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PU_PALL_NONPREP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_PU_PALL_NONPREP", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PU_PALL_NONPREP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FTP_HOSTNAME", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_HOSTNAME", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FTP_HOSTNAME", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_HOSTNAME", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FTP_USERNAME", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_USERNAME", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FTP_USERNAME", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_USERNAME", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FTP_PASSWORD", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_PASSWORD", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FTP_PASSWORD", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_PASSWORD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FTP_REMOTEDIR", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_REMOTEDIR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FTP_REMOTEDIR", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_REMOTEDIR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FTP_LOCKFROMFILENAME", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_LOCKFROMFILENAME", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FTP_LOCKFROMFILENAME", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_LOCKFROMFILENAME", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FTP_LOCKTOFILENAME", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_LOCKTOFILENAME", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FTP_LOCKTOFILENAME", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_LOCKTOFILENAME", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_DERN_NUM_FACT_COLISAGE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_FACT_COLISAGE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_DERN_NUM_FACT_COLISAGE", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_FACT_COLISAGE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_COL_IDMODEREGLEMENT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_COL_IDMODEREGLEMENT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_COL_IDMODEREGLEMENT", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_COL_IDMODEREGLEMENT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_FACT_COL_TAXES", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FACT_COL_TAXES", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_FACT_COL_TAXES", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FACT_COL_TAXES", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_FACT_COL_PU_COLIS", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FACT_COL_PU_COLIS", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_FACT_COL_PU_COLIS", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FACT_COL_PU_COLIS", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC_RCS", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_RCS", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC_RCS", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_RCS", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC_TVAINTRA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_TVAINTRA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC_TVAINTRA", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_TVAINTRA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC_LICENCE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_LICENCE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC_LICENCE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_LICENCE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_RCS", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_RCS", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_RCS", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_RCS", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_TVAINTRA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_TVAINTRA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_TVAINTRA", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_TVAINTRA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_LICENCE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_LICENCE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_LICENCE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_LICENCE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_EXPORT_COMPTA_PATH", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_EXPORT_COMPTA_PATH", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_EXPORT_COMPTA_PATH", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_EXPORT_COMPTA_PATH", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC_COMPTETVA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_COMPTETVA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC_COMPTETVA", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_COMPTETVA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC_COMPTEPRODUIT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_COMPTEPRODUIT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC_COMPTEPRODUIT", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_COMPTEPRODUIT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC_COMPTEBANQUE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_COMPTEBANQUE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC_COMPTEBANQUE", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_COMPTEBANQUE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_COMPTETVA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_COMPTETVA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_COMPTETVA", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_COMPTETVA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_COMPTEPRODUIT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_COMPTEPRODUIT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_COMPTEPRODUIT", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_COMPTEPRODUIT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_COMPTEBANQUE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_COMPTEBANQUE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_COMPTEBANQUE", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_COMPTEBANQUE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_ID", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_COMPTEPRODUIT_COL", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_COMPTEPRODUIT_COL", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_COMPTEPRODUIT_COL", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_COMPTEPRODUIT_COL", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_EDI_HOST", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_EDI_HOST", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_EDI_HOST", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_EDI_HOST", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_EDI_PORT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_EDI_PORT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_EDI_PORT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_EDI_PORT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_EDI_FROM", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_EDI_FROM", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_EDI_FROM", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_EDI_FROM", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_EDI_TEMP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_EDI_TEMP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_EDI_TEMP", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_EDI_TEMP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SRVCE_PATH", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SRVCE_PATH", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SRVCE_PATH", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SRVCE_PATH", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SRVCE_NBSEC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SRVCE_NBSEC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SRVCE_NBSEC", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SRVCE_NBSEC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SRVCE_PATHERROR", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SRVCE_PATHERROR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SRVCE_PATHERROR", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SRVCE_PATHERROR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_DERN_NUM_FACT_HBV", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_FACT_HBV", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_DERN_NUM_FACT_HBV", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_FACT_HBV", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [CONSTANTES] ([CST_SOC_NOMSOC], [CST_SOC_ADRESSE_RUE1], [CST_SOC_ADRE"& _ 
                "SSE_RUE2], [CST_SOC_ADRESSE_CP], [CST_SOC_ADRESSE_VILLE], [CST_SOC_TEL], [CST_SO"& _ 
                "C_FAX], [CST_SOC_PORT], [CST_SOC_EMAIL], [CST_FAX_PAGE_GARDE], [CST_FAX_ENVOI_PA"& _ 
                "GE_GARDE], [CST_FAX_SERVERNAME], [CST_DERN_NUM_CMD_CLT], [CST_DERN_NUM_SCMD], [C"& _ 
                "ST_DERN_NUM_BA], [CST_VERSION_BD], [CST_FAX_PREFIX], [CST_TX_COMMISSION], [CST_D"& _ 
                "ERN_NUM_FACTCOM], [CST_PATH_FACTCOM], [CST_DERN_NUM_FACT_TRP], [CST_TAXES_TRP], "& _ 
                "[CST_PATH_FACTTRP], [CST_TRP_IDMODEREGLEMENT], [CST_SOC2_NOMSOC], [CST_SOC2_ADRE"& _ 
                "SSE_RUE1], [CST_SOC2_ADRESSE_RUE2], [CST_SOC2_ADRESSE_CP], [CST_SOC2_ADRESSE_VIL"& _ 
                "LE], [CST_SOC2_TEL], [CST_SOC2_FAX], [CST_SOC2_EMAIL], [CST_SOC2_PORT], [CST_PLT"& _ 
                "FRM_NOM], [CST_PLTFRM_RUE1], [CST_PLTFRM_RUE2], [CST_PLTFRM_CP], [CST_PLTFRM_VIL"& _ 
                "LE], [CST_PLTFRM_TEL], [CST_PLTFRM_FAX], [CST_PLTFRM_EMAIL], [CST_PLTFRM_PORT], "& _ 
                "[CST_TRP_TXGAZOLE], [CST_PU_PALL_PREP], [CST_PU_PALL_NONPREP], [FTP_HOSTNAME], ["& _ 
                "FTP_USERNAME], [FTP_PASSWORD], [FTP_REMOTEDIR], [FTP_LOCKFROMFILENAME], [FTP_LOC"& _ 
                "KTOFILENAME], [CST_DERN_NUM_FACT_COLISAGE], [CST_COL_IDMODEREGLEMENT], [CST_FACT"& _ 
                "_COL_TAXES], [CST_FACT_COL_PU_COLIS], [CST_SOC_RCS], [CST_SOC_TVAINTRA], [CST_SO"& _ 
                "C_LICENCE], [CST_SOC2_RCS], [CST_SOC2_TVAINTRA], [CST_SOC2_LICENCE], [CST_EXPORT"& _ 
                "_COMPTA_PATH], [CST_SOC_COMPTETVA], [CST_SOC_COMPTEPRODUIT], [CST_SOC_COMPTEBANQ"& _ 
                "UE], [CST_SOC2_COMPTETVA], [CST_SOC2_COMPTEPRODUIT], [CST_SOC2_COMPTEBANQUE], [C"& _ 
                "ST_ID], [CST_SOC2_COMPTEPRODUIT_COL], [CST_EDI_HOST], [CST_EDI_PORT], [CST_EDI_F"& _ 
                "ROM], [CST_EDI_TEMP], [CST_SRVCE_PATH], [CST_SRVCE_NBSEC], [CST_SRVCE_PATHERROR]"& _ 
                ", [CST_DERN_NUM_FACT_HBV], [CST_FTPEDI_USER], [CST_FTPEDI_SRV], [CST_FTPEDI_PWD]"& _ 
                ", [CST_FTPEDI_PORT], [CST_FTPEDI_REP], [CST_FTPEDI_REPLOCAL]) VALUES (?, ?, ?, ?"& _ 
                ", ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, "& _ 
                "?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,"& _ 
                " ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?"& _ 
                ")"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC_NOMSOC", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_NOMSOC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC_ADRESSE_RUE1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_ADRESSE_RUE1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC_ADRESSE_RUE2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_ADRESSE_RUE2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC_ADRESSE_CP", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_ADRESSE_CP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC_ADRESSE_VILLE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_ADRESSE_VILLE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC_TEL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_TEL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC_FAX", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_FAX", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC_PORT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_PORT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC_EMAIL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_EMAIL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_FAX_PAGE_GARDE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FAX_PAGE_GARDE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_FAX_ENVOI_PAGE_GARDE", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FAX_ENVOI_PAGE_GARDE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_FAX_SERVERNAME", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FAX_SERVERNAME", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_DERN_NUM_CMD_CLT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_CMD_CLT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_DERN_NUM_SCMD", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_SCMD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_DERN_NUM_BA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_BA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_VERSION_BD", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_VERSION_BD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_FAX_PREFIX", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FAX_PREFIX", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_TX_COMMISSION", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_TX_COMMISSION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_DERN_NUM_FACTCOM", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_FACTCOM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_PATH_FACTCOM", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PATH_FACTCOM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_DERN_NUM_FACT_TRP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_FACT_TRP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_TAXES_TRP", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_TAXES_TRP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_PATH_FACTTRP", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PATH_FACTTRP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_TRP_IDMODEREGLEMENT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_TRP_IDMODEREGLEMENT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_NOMSOC", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_NOMSOC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_ADRESSE_RUE1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_ADRESSE_RUE1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_ADRESSE_RUE2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_ADRESSE_RUE2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_ADRESSE_CP", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_ADRESSE_CP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_ADRESSE_VILLE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_ADRESSE_VILLE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_TEL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_TEL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_FAX", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_FAX", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_EMAIL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_EMAIL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_PORT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_PORT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_PLTFRM_NOM", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_NOM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_PLTFRM_RUE1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_RUE1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_PLTFRM_RUE2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_RUE2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_PLTFRM_CP", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_CP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_PLTFRM_VILLE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_VILLE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_PLTFRM_TEL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_TEL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_PLTFRM_FAX", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_FAX", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_PLTFRM_EMAIL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_EMAIL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_PLTFRM_PORT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_PORT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_TRP_TXGAZOLE", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_TRP_TXGAZOLE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_PU_PALL_PREP", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PU_PALL_PREP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_PU_PALL_NONPREP", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PU_PALL_NONPREP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FTP_HOSTNAME", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_HOSTNAME", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FTP_USERNAME", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_USERNAME", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FTP_PASSWORD", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_PASSWORD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FTP_REMOTEDIR", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_REMOTEDIR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FTP_LOCKFROMFILENAME", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_LOCKFROMFILENAME", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FTP_LOCKTOFILENAME", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_LOCKTOFILENAME", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_DERN_NUM_FACT_COLISAGE", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_FACT_COLISAGE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_COL_IDMODEREGLEMENT", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_COL_IDMODEREGLEMENT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_FACT_COL_TAXES", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FACT_COL_TAXES", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_FACT_COL_PU_COLIS", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FACT_COL_PU_COLIS", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC_RCS", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_RCS", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC_TVAINTRA", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_TVAINTRA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC_LICENCE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_LICENCE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_RCS", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_RCS", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_TVAINTRA", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_TVAINTRA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_LICENCE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_LICENCE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_EXPORT_COMPTA_PATH", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_EXPORT_COMPTA_PATH", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC_COMPTETVA", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_COMPTETVA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC_COMPTEPRODUIT", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_COMPTEPRODUIT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC_COMPTEBANQUE", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_COMPTEBANQUE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_COMPTETVA", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_COMPTETVA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_COMPTEPRODUIT", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_COMPTEPRODUIT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_COMPTEBANQUE", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_COMPTEBANQUE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_ID", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_ID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_COMPTEPRODUIT_COL", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_COMPTEPRODUIT_COL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_EDI_HOST", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_EDI_HOST", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_EDI_PORT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_EDI_PORT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_EDI_FROM", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_EDI_FROM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_EDI_TEMP", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_EDI_TEMP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SRVCE_PATH", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SRVCE_PATH", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SRVCE_NBSEC", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SRVCE_NBSEC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SRVCE_PATHERROR", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SRVCE_PATHERROR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_DERN_NUM_FACT_HBV", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_FACT_HBV", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_FTPEDI_USER", Global.System.Data.OleDb.OleDbType.LongVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FTPEDI_USER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_FTPEDI_SRV", Global.System.Data.OleDb.OleDbType.LongVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FTPEDI_SRV", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_FTPEDI_PWD", Global.System.Data.OleDb.OleDbType.LongVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FTPEDI_PWD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_FTPEDI_PORT", Global.System.Data.OleDb.OleDbType.LongVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FTPEDI_PORT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_FTPEDI_REP", Global.System.Data.OleDb.OleDbType.LongVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FTPEDI_REP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_FTPEDI_REPLOCAL", Global.System.Data.OleDb.OleDbType.LongVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FTPEDI_REPLOCAL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [CONSTANTES] SET [CST_SOC_NOMSOC] = ?, [CST_SOC_ADRESSE_RUE1] = ?, [CST_SO"& _ 
                "C_ADRESSE_RUE2] = ?, [CST_SOC_ADRESSE_CP] = ?, [CST_SOC_ADRESSE_VILLE] = ?, [CST"& _ 
                "_SOC_TEL] = ?, [CST_SOC_FAX] = ?, [CST_SOC_PORT] = ?, [CST_SOC_EMAIL] = ?, [CST_"& _ 
                "FAX_PAGE_GARDE] = ?, [CST_FAX_ENVOI_PAGE_GARDE] = ?, [CST_FAX_SERVERNAME] = ?, ["& _ 
                "CST_DERN_NUM_CMD_CLT] = ?, [CST_DERN_NUM_SCMD] = ?, [CST_DERN_NUM_BA] = ?, [CST_"& _ 
                "VERSION_BD] = ?, [CST_FAX_PREFIX] = ?, [CST_TX_COMMISSION] = ?, [CST_DERN_NUM_FA"& _ 
                "CTCOM] = ?, [CST_PATH_FACTCOM] = ?, [CST_DERN_NUM_FACT_TRP] = ?, [CST_TAXES_TRP]"& _ 
                " = ?, [CST_PATH_FACTTRP] = ?, [CST_TRP_IDMODEREGLEMENT] = ?, [CST_SOC2_NOMSOC] ="& _ 
                " ?, [CST_SOC2_ADRESSE_RUE1] = ?, [CST_SOC2_ADRESSE_RUE2] = ?, [CST_SOC2_ADRESSE_"& _ 
                "CP] = ?, [CST_SOC2_ADRESSE_VILLE] = ?, [CST_SOC2_TEL] = ?, [CST_SOC2_FAX] = ?, ["& _ 
                "CST_SOC2_EMAIL] = ?, [CST_SOC2_PORT] = ?, [CST_PLTFRM_NOM] = ?, [CST_PLTFRM_RUE1"& _ 
                "] = ?, [CST_PLTFRM_RUE2] = ?, [CST_PLTFRM_CP] = ?, [CST_PLTFRM_VILLE] = ?, [CST_"& _ 
                "PLTFRM_TEL] = ?, [CST_PLTFRM_FAX] = ?, [CST_PLTFRM_EMAIL] = ?, [CST_PLTFRM_PORT]"& _ 
                " = ?, [CST_TRP_TXGAZOLE] = ?, [CST_PU_PALL_PREP] = ?, [CST_PU_PALL_NONPREP] = ?,"& _ 
                " [FTP_HOSTNAME] = ?, [FTP_USERNAME] = ?, [FTP_PASSWORD] = ?, [FTP_REMOTEDIR] = ?"& _ 
                ", [FTP_LOCKFROMFILENAME] = ?, [FTP_LOCKTOFILENAME] = ?, [CST_DERN_NUM_FACT_COLIS"& _ 
                "AGE] = ?, [CST_COL_IDMODEREGLEMENT] = ?, [CST_FACT_COL_TAXES] = ?, [CST_FACT_COL"& _ 
                "_PU_COLIS] = ?, [CST_SOC_RCS] = ?, [CST_SOC_TVAINTRA] = ?, [CST_SOC_LICENCE] = ?"& _ 
                ", [CST_SOC2_RCS] = ?, [CST_SOC2_TVAINTRA] = ?, [CST_SOC2_LICENCE] = ?, [CST_EXPO"& _ 
                "RT_COMPTA_PATH] = ?, [CST_SOC_COMPTETVA] = ?, [CST_SOC_COMPTEPRODUIT] = ?, [CST_"& _ 
                "SOC_COMPTEBANQUE] = ?, [CST_SOC2_COMPTETVA] = ?, [CST_SOC2_COMPTEPRODUIT] = ?, ["& _ 
                "CST_SOC2_COMPTEBANQUE] = ?, [CST_ID] = ?, [CST_SOC2_COMPTEPRODUIT_COL] = ?, [CST"& _ 
                "_EDI_HOST] = ?, [CST_EDI_PORT] = ?, [CST_EDI_FROM] = ?, [CST_EDI_TEMP] = ?, [CST"& _ 
                "_SRVCE_PATH] = ?, [CST_SRVCE_NBSEC] = ?, [CST_SRVCE_PATHERROR] = ?, [CST_DERN_NU"& _ 
                "M_FACT_HBV] = ?, [CST_FTPEDI_USER] = ?, [CST_FTPEDI_SRV] = ?, [CST_FTPEDI_PWD] ="& _ 
                " ?, [CST_FTPEDI_PORT] = ?, [CST_FTPEDI_REP] = ?, [CST_FTPEDI_REPLOCAL] = ? WHERE"& _ 
                " (((? = 1 AND [CST_SOC_NOMSOC] IS NULL) OR ([CST_SOC_NOMSOC] = ?)) AND ((? = 1 A"& _ 
                "ND [CST_SOC_ADRESSE_RUE1] IS NULL) OR ([CST_SOC_ADRESSE_RUE1] = ?)) AND ((? = 1 "& _ 
                "AND [CST_SOC_ADRESSE_RUE2] IS NULL) OR ([CST_SOC_ADRESSE_RUE2] = ?)) AND ((? = 1"& _ 
                " AND [CST_SOC_ADRESSE_CP] IS NULL) OR ([CST_SOC_ADRESSE_CP] = ?)) AND ((? = 1 AN"& _ 
                "D [CST_SOC_ADRESSE_VILLE] IS NULL) OR ([CST_SOC_ADRESSE_VILLE] = ?)) AND ((? = 1"& _ 
                " AND [CST_SOC_TEL] IS NULL) OR ([CST_SOC_TEL] = ?)) AND ((? = 1 AND [CST_SOC_FAX"& _ 
                "] IS NULL) OR ([CST_SOC_FAX] = ?)) AND ((? = 1 AND [CST_SOC_PORT] IS NULL) OR (["& _ 
                "CST_SOC_PORT] = ?)) AND ((? = 1 AND [CST_SOC_EMAIL] IS NULL) OR ([CST_SOC_EMAIL]"& _ 
                " = ?)) AND ((? = 1 AND [CST_FAX_PAGE_GARDE] IS NULL) OR ([CST_FAX_PAGE_GARDE] = "& _ 
                "?)) AND ((? = 1 AND [CST_FAX_ENVOI_PAGE_GARDE] IS NULL) OR ([CST_FAX_ENVOI_PAGE_"& _ 
                "GARDE] = ?)) AND ((? = 1 AND [CST_FAX_SERVERNAME] IS NULL) OR ([CST_FAX_SERVERNA"& _ 
                "ME] = ?)) AND ((? = 1 AND [CST_DERN_NUM_CMD_CLT] IS NULL) OR ([CST_DERN_NUM_CMD_"& _ 
                "CLT] = ?)) AND ((? = 1 AND [CST_DERN_NUM_SCMD] IS NULL) OR ([CST_DERN_NUM_SCMD] "& _ 
                "= ?)) AND ((? = 1 AND [CST_DERN_NUM_BA] IS NULL) OR ([CST_DERN_NUM_BA] = ?)) AND"& _ 
                " ((? = 1 AND [CST_VERSION_BD] IS NULL) OR ([CST_VERSION_BD] = ?)) AND ((? = 1 AN"& _ 
                "D [CST_FAX_PREFIX] IS NULL) OR ([CST_FAX_PREFIX] = ?)) AND ((? = 1 AND [CST_TX_C"& _ 
                "OMMISSION] IS NULL) OR ([CST_TX_COMMISSION] = ?)) AND ((? = 1 AND [CST_DERN_NUM_"& _ 
                "FACTCOM] IS NULL) OR ([CST_DERN_NUM_FACTCOM] = ?)) AND ((? = 1 AND [CST_PATH_FAC"& _ 
                "TCOM] IS NULL) OR ([CST_PATH_FACTCOM] = ?)) AND ((? = 1 AND [CST_DERN_NUM_FACT_T"& _ 
                "RP] IS NULL) OR ([CST_DERN_NUM_FACT_TRP] = ?)) AND ((? = 1 AND [CST_TAXES_TRP] I"& _ 
                "S NULL) OR ([CST_TAXES_TRP] = ?)) AND ((? = 1 AND [CST_PATH_FACTTRP] IS NULL) OR"& _ 
                " ([CST_PATH_FACTTRP] = ?)) AND ((? = 1 AND [CST_TRP_IDMODEREGLEMENT] IS NULL) OR"& _ 
                " ([CST_TRP_IDMODEREGLEMENT] = ?)) AND ((? = 1 AND [CST_SOC2_NOMSOC] IS NULL) OR "& _ 
                "([CST_SOC2_NOMSOC] = ?)) AND ((? = 1 AND [CST_SOC2_ADRESSE_RUE1] IS NULL) OR ([C"& _ 
                "ST_SOC2_ADRESSE_RUE1] = ?)) AND ((? = 1 AND [CST_SOC2_ADRESSE_RUE2] IS NULL) OR "& _ 
                "([CST_SOC2_ADRESSE_RUE2] = ?)) AND ((? = 1 AND [CST_SOC2_ADRESSE_CP] IS NULL) OR"& _ 
                " ([CST_SOC2_ADRESSE_CP] = ?)) AND ((? = 1 AND [CST_SOC2_ADRESSE_VILLE] IS NULL) "& _ 
                "OR ([CST_SOC2_ADRESSE_VILLE] = ?)) AND ((? = 1 AND [CST_SOC2_TEL] IS NULL) OR (["& _ 
                "CST_SOC2_TEL] = ?)) AND ((? = 1 AND [CST_SOC2_FAX] IS NULL) OR ([CST_SOC2_FAX] ="& _ 
                " ?)) AND ((? = 1 AND [CST_SOC2_EMAIL] IS NULL) OR ([CST_SOC2_EMAIL] = ?)) AND (("& _ 
                "? = 1 AND [CST_SOC2_PORT] IS NULL) OR ([CST_SOC2_PORT] = ?)) AND ((? = 1 AND [CS"& _ 
                "T_PLTFRM_NOM] IS NULL) OR ([CST_PLTFRM_NOM] = ?)) AND ((? = 1 AND [CST_PLTFRM_RU"& _ 
                "E1] IS NULL) OR ([CST_PLTFRM_RUE1] = ?)) AND ((? = 1 AND [CST_PLTFRM_RUE2] IS NU"& _ 
                "LL) OR ([CST_PLTFRM_RUE2] = ?)) AND ((? = 1 AND [CST_PLTFRM_CP] IS NULL) OR ([CS"& _ 
                "T_PLTFRM_CP] = ?)) AND ((? = 1 AND [CST_PLTFRM_VILLE] IS NULL) OR ([CST_PLTFRM_V"& _ 
                "ILLE] = ?)) AND ((? = 1 AND [CST_PLTFRM_TEL] IS NULL) OR ([CST_PLTFRM_TEL] = ?))"& _ 
                " AND ((? = 1 AND [CST_PLTFRM_FAX] IS NULL) OR ([CST_PLTFRM_FAX] = ?)) AND ((? = "& _ 
                "1 AND [CST_PLTFRM_EMAIL] IS NULL) OR ([CST_PLTFRM_EMAIL] = ?)) AND ((? = 1 AND ["& _ 
                "CST_PLTFRM_PORT] IS NULL) OR ([CST_PLTFRM_PORT] = ?)) AND ((? = 1 AND [CST_TRP_T"& _ 
                "XGAZOLE] IS NULL) OR ([CST_TRP_TXGAZOLE] = ?)) AND ((? = 1 AND [CST_PU_PALL_PREP"& _ 
                "] IS NULL) OR ([CST_PU_PALL_PREP] = ?)) AND ((? = 1 AND [CST_PU_PALL_NONPREP] IS"& _ 
                " NULL) OR ([CST_PU_PALL_NONPREP] = ?)) AND ((? = 1 AND [FTP_HOSTNAME] IS NULL) O"& _ 
                "R ([FTP_HOSTNAME] = ?)) AND ((? = 1 AND [FTP_USERNAME] IS NULL) OR ([FTP_USERNAM"& _ 
                "E] = ?)) AND ((? = 1 AND [FTP_PASSWORD] IS NULL) OR ([FTP_PASSWORD] = ?)) AND (("& _ 
                "? = 1 AND [FTP_REMOTEDIR] IS NULL) OR ([FTP_REMOTEDIR] = ?)) AND ((? = 1 AND [FT"& _ 
                "P_LOCKFROMFILENAME] IS NULL) OR ([FTP_LOCKFROMFILENAME] = ?)) AND ((? = 1 AND [F"& _ 
                "TP_LOCKTOFILENAME] IS NULL) OR ([FTP_LOCKTOFILENAME] = ?)) AND ((? = 1 AND [CST_"& _ 
                "DERN_NUM_FACT_COLISAGE] IS NULL) OR ([CST_DERN_NUM_FACT_COLISAGE] = ?)) AND ((? "& _ 
                "= 1 AND [CST_COL_IDMODEREGLEMENT] IS NULL) OR ([CST_COL_IDMODEREGLEMENT] = ?)) A"& _ 
                "ND ((? = 1 AND [CST_FACT_COL_TAXES] IS NULL) OR ([CST_FACT_COL_TAXES] = ?)) AND "& _ 
                "((? = 1 AND [CST_FACT_COL_PU_COLIS] IS NULL) OR ([CST_FACT_COL_PU_COLIS] = ?)) A"& _ 
                "ND ((? = 1 AND [CST_SOC_RCS] IS NULL) OR ([CST_SOC_RCS] = ?)) AND ((? = 1 AND [C"& _ 
                "ST_SOC_TVAINTRA] IS NULL) OR ([CST_SOC_TVAINTRA] = ?)) AND ((? = 1 AND [CST_SOC_"& _ 
                "LICENCE] IS NULL) OR ([CST_SOC_LICENCE] = ?)) AND ((? = 1 AND [CST_SOC2_RCS] IS "& _ 
                "NULL) OR ([CST_SOC2_RCS] = ?)) AND ((? = 1 AND [CST_SOC2_TVAINTRA] IS NULL) OR ("& _ 
                "[CST_SOC2_TVAINTRA] = ?)) AND ((? = 1 AND [CST_SOC2_LICENCE] IS NULL) OR ([CST_S"& _ 
                "OC2_LICENCE] = ?)) AND ((? = 1 AND [CST_EXPORT_COMPTA_PATH] IS NULL) OR ([CST_EX"& _ 
                "PORT_COMPTA_PATH] = ?)) AND ((? = 1 AND [CST_SOC_COMPTETVA] IS NULL) OR ([CST_SO"& _ 
                "C_COMPTETVA] = ?)) AND ((? = 1 AND [CST_SOC_COMPTEPRODUIT] IS NULL) OR ([CST_SOC"& _ 
                "_COMPTEPRODUIT] = ?)) AND ((? = 1 AND [CST_SOC_COMPTEBANQUE] IS NULL) OR ([CST_S"& _ 
                "OC_COMPTEBANQUE] = ?)) AND ((? = 1 AND [CST_SOC2_COMPTETVA] IS NULL) OR ([CST_SO"& _ 
                "C2_COMPTETVA] = ?)) AND ((? = 1 AND [CST_SOC2_COMPTEPRODUIT] IS NULL) OR ([CST_S"& _ 
                "OC2_COMPTEPRODUIT] = ?)) AND ((? = 1 AND [CST_SOC2_COMPTEBANQUE] IS NULL) OR ([C"& _ 
                "ST_SOC2_COMPTEBANQUE] = ?)) AND ([CST_ID] = ?) AND ((? = 1 AND [CST_SOC2_COMPTEP"& _ 
                "RODUIT_COL] IS NULL) OR ([CST_SOC2_COMPTEPRODUIT_COL] = ?)) AND ((? = 1 AND [CST"& _ 
                "_EDI_HOST] IS NULL) OR ([CST_EDI_HOST] = ?)) AND ((? = 1 AND [CST_EDI_PORT] IS N"& _ 
                "ULL) OR ([CST_EDI_PORT] = ?)) AND ((? = 1 AND [CST_EDI_FROM] IS NULL) OR ([CST_E"& _ 
                "DI_FROM] = ?)) AND ((? = 1 AND [CST_EDI_TEMP] IS NULL) OR ([CST_EDI_TEMP] = ?)) "& _ 
                "AND ((? = 1 AND [CST_SRVCE_PATH] IS NULL) OR ([CST_SRVCE_PATH] = ?)) AND ((? = 1"& _ 
                " AND [CST_SRVCE_NBSEC] IS NULL) OR ([CST_SRVCE_NBSEC] = ?)) AND ((? = 1 AND [CST"& _ 
                "_SRVCE_PATHERROR] IS NULL) OR ([CST_SRVCE_PATHERROR] = ?)) AND ((? = 1 AND [CST_"& _ 
                "DERN_NUM_FACT_HBV] IS NULL) OR ([CST_DERN_NUM_FACT_HBV] = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC_NOMSOC", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_NOMSOC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC_ADRESSE_RUE1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_ADRESSE_RUE1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC_ADRESSE_RUE2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_ADRESSE_RUE2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC_ADRESSE_CP", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_ADRESSE_CP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC_ADRESSE_VILLE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_ADRESSE_VILLE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC_TEL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_TEL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC_FAX", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_FAX", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC_PORT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_PORT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC_EMAIL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_EMAIL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_FAX_PAGE_GARDE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FAX_PAGE_GARDE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_FAX_ENVOI_PAGE_GARDE", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FAX_ENVOI_PAGE_GARDE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_FAX_SERVERNAME", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FAX_SERVERNAME", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_DERN_NUM_CMD_CLT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_CMD_CLT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_DERN_NUM_SCMD", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_SCMD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_DERN_NUM_BA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_BA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_VERSION_BD", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_VERSION_BD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_FAX_PREFIX", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FAX_PREFIX", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_TX_COMMISSION", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_TX_COMMISSION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_DERN_NUM_FACTCOM", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_FACTCOM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_PATH_FACTCOM", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PATH_FACTCOM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_DERN_NUM_FACT_TRP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_FACT_TRP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_TAXES_TRP", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_TAXES_TRP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_PATH_FACTTRP", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PATH_FACTTRP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_TRP_IDMODEREGLEMENT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_TRP_IDMODEREGLEMENT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_NOMSOC", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_NOMSOC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_ADRESSE_RUE1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_ADRESSE_RUE1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_ADRESSE_RUE2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_ADRESSE_RUE2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_ADRESSE_CP", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_ADRESSE_CP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_ADRESSE_VILLE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_ADRESSE_VILLE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_TEL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_TEL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_FAX", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_FAX", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_EMAIL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_EMAIL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_PORT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_PORT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_PLTFRM_NOM", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_NOM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_PLTFRM_RUE1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_RUE1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_PLTFRM_RUE2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_RUE2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_PLTFRM_CP", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_CP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_PLTFRM_VILLE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_VILLE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_PLTFRM_TEL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_TEL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_PLTFRM_FAX", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_FAX", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_PLTFRM_EMAIL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_EMAIL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_PLTFRM_PORT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_PORT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_TRP_TXGAZOLE", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_TRP_TXGAZOLE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_PU_PALL_PREP", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PU_PALL_PREP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_PU_PALL_NONPREP", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PU_PALL_NONPREP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FTP_HOSTNAME", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_HOSTNAME", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FTP_USERNAME", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_USERNAME", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FTP_PASSWORD", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_PASSWORD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FTP_REMOTEDIR", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_REMOTEDIR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FTP_LOCKFROMFILENAME", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_LOCKFROMFILENAME", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FTP_LOCKTOFILENAME", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_LOCKTOFILENAME", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_DERN_NUM_FACT_COLISAGE", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_FACT_COLISAGE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_COL_IDMODEREGLEMENT", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_COL_IDMODEREGLEMENT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_FACT_COL_TAXES", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FACT_COL_TAXES", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_FACT_COL_PU_COLIS", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FACT_COL_PU_COLIS", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC_RCS", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_RCS", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC_TVAINTRA", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_TVAINTRA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC_LICENCE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_LICENCE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_RCS", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_RCS", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_TVAINTRA", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_TVAINTRA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_LICENCE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_LICENCE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_EXPORT_COMPTA_PATH", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_EXPORT_COMPTA_PATH", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC_COMPTETVA", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_COMPTETVA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC_COMPTEPRODUIT", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_COMPTEPRODUIT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC_COMPTEBANQUE", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_COMPTEBANQUE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_COMPTETVA", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_COMPTETVA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_COMPTEPRODUIT", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_COMPTEPRODUIT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_COMPTEBANQUE", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_COMPTEBANQUE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_ID", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_ID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SOC2_COMPTEPRODUIT_COL", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_COMPTEPRODUIT_COL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_EDI_HOST", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_EDI_HOST", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_EDI_PORT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_EDI_PORT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_EDI_FROM", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_EDI_FROM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_EDI_TEMP", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_EDI_TEMP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SRVCE_PATH", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SRVCE_PATH", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SRVCE_NBSEC", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SRVCE_NBSEC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_SRVCE_PATHERROR", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SRVCE_PATHERROR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_DERN_NUM_FACT_HBV", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_FACT_HBV", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_FTPEDI_USER", Global.System.Data.OleDb.OleDbType.LongVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FTPEDI_USER", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_FTPEDI_SRV", Global.System.Data.OleDb.OleDbType.LongVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FTPEDI_SRV", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_FTPEDI_PWD", Global.System.Data.OleDb.OleDbType.LongVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FTPEDI_PWD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_FTPEDI_PORT", Global.System.Data.OleDb.OleDbType.LongVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FTPEDI_PORT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_FTPEDI_REP", Global.System.Data.OleDb.OleDbType.LongVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FTPEDI_REP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CST_FTPEDI_REPLOCAL", Global.System.Data.OleDb.OleDbType.LongVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FTPEDI_REPLOCAL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC_NOMSOC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_NOMSOC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC_NOMSOC", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_NOMSOC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC_ADRESSE_RUE1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_ADRESSE_RUE1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC_ADRESSE_RUE1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_ADRESSE_RUE1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC_ADRESSE_RUE2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_ADRESSE_RUE2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC_ADRESSE_RUE2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_ADRESSE_RUE2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC_ADRESSE_CP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_ADRESSE_CP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC_ADRESSE_CP", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_ADRESSE_CP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC_ADRESSE_VILLE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_ADRESSE_VILLE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC_ADRESSE_VILLE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_ADRESSE_VILLE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC_TEL", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_TEL", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC_TEL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_TEL", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC_FAX", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_FAX", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC_FAX", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_FAX", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC_PORT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_PORT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC_PORT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_PORT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC_EMAIL", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_EMAIL", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC_EMAIL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_EMAIL", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_FAX_PAGE_GARDE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FAX_PAGE_GARDE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_FAX_PAGE_GARDE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FAX_PAGE_GARDE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_FAX_ENVOI_PAGE_GARDE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FAX_ENVOI_PAGE_GARDE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_FAX_ENVOI_PAGE_GARDE", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FAX_ENVOI_PAGE_GARDE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_FAX_SERVERNAME", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FAX_SERVERNAME", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_FAX_SERVERNAME", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FAX_SERVERNAME", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_DERN_NUM_CMD_CLT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_CMD_CLT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_DERN_NUM_CMD_CLT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_CMD_CLT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_DERN_NUM_SCMD", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_SCMD", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_DERN_NUM_SCMD", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_SCMD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_DERN_NUM_BA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_BA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_DERN_NUM_BA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_BA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_VERSION_BD", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_VERSION_BD", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_VERSION_BD", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_VERSION_BD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_FAX_PREFIX", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FAX_PREFIX", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_FAX_PREFIX", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FAX_PREFIX", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_TX_COMMISSION", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_TX_COMMISSION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_TX_COMMISSION", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_TX_COMMISSION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_DERN_NUM_FACTCOM", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_FACTCOM", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_DERN_NUM_FACTCOM", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_FACTCOM", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_PATH_FACTCOM", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PATH_FACTCOM", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_PATH_FACTCOM", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PATH_FACTCOM", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_DERN_NUM_FACT_TRP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_FACT_TRP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_DERN_NUM_FACT_TRP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_FACT_TRP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_TAXES_TRP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_TAXES_TRP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_TAXES_TRP", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_TAXES_TRP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_PATH_FACTTRP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PATH_FACTTRP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_PATH_FACTTRP", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PATH_FACTTRP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_TRP_IDMODEREGLEMENT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_TRP_IDMODEREGLEMENT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_TRP_IDMODEREGLEMENT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_TRP_IDMODEREGLEMENT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_NOMSOC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_NOMSOC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_NOMSOC", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_NOMSOC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_ADRESSE_RUE1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_ADRESSE_RUE1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_ADRESSE_RUE1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_ADRESSE_RUE1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_ADRESSE_RUE2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_ADRESSE_RUE2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_ADRESSE_RUE2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_ADRESSE_RUE2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_ADRESSE_CP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_ADRESSE_CP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_ADRESSE_CP", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_ADRESSE_CP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_ADRESSE_VILLE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_ADRESSE_VILLE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_ADRESSE_VILLE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_ADRESSE_VILLE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_TEL", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_TEL", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_TEL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_TEL", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_FAX", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_FAX", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_FAX", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_FAX", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_EMAIL", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_EMAIL", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_EMAIL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_EMAIL", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_PORT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_PORT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_PORT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_PORT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_PLTFRM_NOM", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_NOM", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_PLTFRM_NOM", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_NOM", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_PLTFRM_RUE1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_RUE1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_PLTFRM_RUE1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_RUE1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_PLTFRM_RUE2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_RUE2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_PLTFRM_RUE2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_RUE2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_PLTFRM_CP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_CP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_PLTFRM_CP", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_CP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_PLTFRM_VILLE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_VILLE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_PLTFRM_VILLE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_VILLE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_PLTFRM_TEL", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_TEL", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_PLTFRM_TEL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_TEL", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_PLTFRM_FAX", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_FAX", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_PLTFRM_FAX", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_FAX", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_PLTFRM_EMAIL", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_EMAIL", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_PLTFRM_EMAIL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_EMAIL", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_PLTFRM_PORT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_PORT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_PLTFRM_PORT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PLTFRM_PORT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_TRP_TXGAZOLE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_TRP_TXGAZOLE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_TRP_TXGAZOLE", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_TRP_TXGAZOLE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_PU_PALL_PREP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PU_PALL_PREP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_PU_PALL_PREP", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PU_PALL_PREP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_PU_PALL_NONPREP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PU_PALL_NONPREP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_PU_PALL_NONPREP", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_PU_PALL_NONPREP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FTP_HOSTNAME", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_HOSTNAME", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FTP_HOSTNAME", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_HOSTNAME", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FTP_USERNAME", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_USERNAME", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FTP_USERNAME", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_USERNAME", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FTP_PASSWORD", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_PASSWORD", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FTP_PASSWORD", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_PASSWORD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FTP_REMOTEDIR", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_REMOTEDIR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FTP_REMOTEDIR", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_REMOTEDIR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FTP_LOCKFROMFILENAME", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_LOCKFROMFILENAME", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FTP_LOCKFROMFILENAME", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_LOCKFROMFILENAME", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FTP_LOCKTOFILENAME", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_LOCKTOFILENAME", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FTP_LOCKTOFILENAME", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTP_LOCKTOFILENAME", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_DERN_NUM_FACT_COLISAGE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_FACT_COLISAGE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_DERN_NUM_FACT_COLISAGE", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_FACT_COLISAGE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_COL_IDMODEREGLEMENT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_COL_IDMODEREGLEMENT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_COL_IDMODEREGLEMENT", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_COL_IDMODEREGLEMENT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_FACT_COL_TAXES", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FACT_COL_TAXES", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_FACT_COL_TAXES", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FACT_COL_TAXES", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_FACT_COL_PU_COLIS", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FACT_COL_PU_COLIS", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_FACT_COL_PU_COLIS", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_FACT_COL_PU_COLIS", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC_RCS", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_RCS", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC_RCS", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_RCS", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC_TVAINTRA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_TVAINTRA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC_TVAINTRA", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_TVAINTRA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC_LICENCE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_LICENCE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC_LICENCE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_LICENCE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_RCS", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_RCS", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_RCS", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_RCS", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_TVAINTRA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_TVAINTRA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_TVAINTRA", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_TVAINTRA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_LICENCE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_LICENCE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_LICENCE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_LICENCE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_EXPORT_COMPTA_PATH", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_EXPORT_COMPTA_PATH", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_EXPORT_COMPTA_PATH", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_EXPORT_COMPTA_PATH", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC_COMPTETVA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_COMPTETVA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC_COMPTETVA", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_COMPTETVA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC_COMPTEPRODUIT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_COMPTEPRODUIT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC_COMPTEPRODUIT", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_COMPTEPRODUIT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC_COMPTEBANQUE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_COMPTEBANQUE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC_COMPTEBANQUE", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC_COMPTEBANQUE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_COMPTETVA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_COMPTETVA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_COMPTETVA", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_COMPTETVA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_COMPTEPRODUIT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_COMPTEPRODUIT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_COMPTEPRODUIT", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_COMPTEPRODUIT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_COMPTEBANQUE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_COMPTEBANQUE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_COMPTEBANQUE", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_COMPTEBANQUE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_ID", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SOC2_COMPTEPRODUIT_COL", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_COMPTEPRODUIT_COL", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SOC2_COMPTEPRODUIT_COL", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SOC2_COMPTEPRODUIT_COL", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_EDI_HOST", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_EDI_HOST", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_EDI_HOST", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_EDI_HOST", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_EDI_PORT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_EDI_PORT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_EDI_PORT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_EDI_PORT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_EDI_FROM", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_EDI_FROM", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_EDI_FROM", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_EDI_FROM", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_EDI_TEMP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_EDI_TEMP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_EDI_TEMP", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_EDI_TEMP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SRVCE_PATH", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SRVCE_PATH", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SRVCE_PATH", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SRVCE_PATH", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SRVCE_NBSEC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SRVCE_NBSEC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SRVCE_NBSEC", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SRVCE_NBSEC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_SRVCE_PATHERROR", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SRVCE_PATHERROR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_SRVCE_PATHERROR", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_SRVCE_PATHERROR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CST_DERN_NUM_FACT_HBV", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_FACT_HBV", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CST_DERN_NUM_FACT_HBV", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CST_DERN_NUM_FACT_HBV", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.vini_DB.My.MySettings.Default.ConnectString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CST_SOC_NOMSOC, CST_SOC_ADRESSE_RUE1, CST_SOC_ADRESSE_RUE2, CST_SOC"& _ 
                "_ADRESSE_CP, CST_SOC_ADRESSE_VILLE, CST_SOC_TEL, CST_SOC_FAX, CST_SOC_PORT, CST_"& _ 
                "SOC_EMAIL, CST_FAX_PAGE_GARDE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CST_FAX_ENVOI_PAGE_GAR"& _ 
                "DE, CST_FAX_SERVERNAME, CST_DERN_NUM_CMD_CLT, CST_DERN_NUM_SCMD, CST_DERN_NUM_BA"& _ 
                ", CST_VERSION_BD, CST_FAX_PREFIX, CST_TX_COMMISSION, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "CST_DERN_NUM_FACTCOM, CST_PATH_FACTCOM, CST_DERN_NUM_FACT_TRP, CST_TAXES_TRP, CS"& _ 
                "T_PATH_FACTTRP, CST_TRP_IDMODEREGLEMENT, CST_SOC2_NOMSOC, CST_SOC2_ADRESSE_RUE1,"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CST_SOC2_ADRESSE_RUE2, CST_SOC2_ADRESSE_CP, CST_SOC2"& _ 
                "_ADRESSE_VILLE, CST_SOC2_TEL, CST_SOC2_FAX, CST_SOC2_EMAIL, CST_SOC2_PORT, CST_P"& _ 
                "LTFRM_NOM, CST_PLTFRM_RUE1, CST_PLTFRM_RUE2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CST_PLTF"& _ 
                "RM_CP, CST_PLTFRM_VILLE, CST_PLTFRM_TEL, CST_PLTFRM_FAX, CST_PLTFRM_EMAIL, CST_P"& _ 
                "LTFRM_PORT, CST_TRP_TXGAZOLE, CST_PU_PALL_PREP, CST_PU_PALL_NONPREP, FTP_HOSTNAM"& _ 
                "E, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FTP_USERNAME, FTP_PASSWORD, FTP_REMOTEDIR, FTP_LOC"& _ 
                "KFROMFILENAME, FTP_LOCKTOFILENAME, CST_DERN_NUM_FACT_COLISAGE, CST_COL_IDMODEREG"& _ 
                "LEMENT, CST_FACT_COL_TAXES, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CST_FACT_COL_PU_COLIS, CS"& _ 
                "T_SOC_RCS, CST_SOC_TVAINTRA, CST_SOC_LICENCE, CST_SOC2_RCS, CST_SOC2_TVAINTRA, C"& _ 
                "ST_SOC2_LICENCE, CST_EXPORT_COMPTA_PATH, CST_SOC_COMPTETVA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "       CST_SOC_COMPTEPRODUIT, CST_SOC_COMPTEBANQUE, CST_SOC2_COMPTETVA, CST_SOC2"& _ 
                "_COMPTEPRODUIT, CST_SOC2_COMPTEBANQUE, CST_ID, CST_SOC2_COMPTEPRODUIT_COL, CST_E"& _ 
                "DI_HOST, CST_EDI_PORT, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CST_EDI_FROM, CST_EDI_TEMP, CS"& _ 
                "T_SRVCE_PATH, CST_SRVCE_NBSEC, CST_SRVCE_PATHERROR, CST_DERN_NUM_FACT_HBV, CST_F"& _ 
                "TPEDI_USER, CST_FTPEDI_SRV, CST_FTPEDI_PWD, CST_FTPEDI_PORT, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "        CST_FTPEDI_REP, CST_FTPEDI_REPLOCAL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            CONSTANTES"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "dbo.[SP_GETNEXTCODE_CMD_CLT;1]"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("@RETURN_VALUE", Global.System.Data.OleDb.OleDbType.[Integer], 2147483647, Global.System.Data.ParameterDirection.ReturnValue, CType(10,Byte), CType(255,Byte), Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT SP_GETNEXTCODE_CMD_CLT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsVinicom.CONSTANTESDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsVinicom.CONSTANTESDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsVinicom.CONSTANTESDataTable = New dsVinicom.CONSTANTESDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As dsVinicom.CONSTANTESDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy() As dsVinicom.CONSTANTESDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Dim dataTable As dsVinicom.CONSTANTESDataTable = New dsVinicom.CONSTANTESDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsVinicom.CONSTANTESDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsVinicom) As Integer
            Return Me.Adapter.Update(dataSet, "CONSTANTES")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_CST_SOC_NOMSOC As String,  _
                    ByVal Original_CST_SOC_ADRESSE_RUE1 As String,  _
                    ByVal Original_CST_SOC_ADRESSE_RUE2 As String,  _
                    ByVal Original_CST_SOC_ADRESSE_CP As String,  _
                    ByVal Original_CST_SOC_ADRESSE_VILLE As String,  _
                    ByVal Original_CST_SOC_TEL As String,  _
                    ByVal Original_CST_SOC_FAX As String,  _
                    ByVal Original_CST_SOC_PORT As String,  _
                    ByVal Original_CST_SOC_EMAIL As String,  _
                    ByVal Original_CST_FAX_PAGE_GARDE As String,  _
                    ByVal Original_CST_FAX_ENVOI_PAGE_GARDE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CST_FAX_SERVERNAME As String,  _
                    ByVal Original_CST_DERN_NUM_CMD_CLT As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CST_DERN_NUM_SCMD As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CST_DERN_NUM_BA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CST_VERSION_BD As String,  _
                    ByVal Original_CST_FAX_PREFIX As String,  _
                    ByVal Original_CST_TX_COMMISSION As Global.System.Nullable(Of Single),  _
                    ByVal Original_CST_DERN_NUM_FACTCOM As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CST_PATH_FACTCOM As String,  _
                    ByVal Original_CST_DERN_NUM_FACT_TRP As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CST_TAXES_TRP As Global.System.Nullable(Of Double),  _
                    ByVal Original_CST_PATH_FACTTRP As String,  _
                    ByVal Original_CST_TRP_IDMODEREGLEMENT As String,  _
                    ByVal Original_CST_SOC2_NOMSOC As String,  _
                    ByVal Original_CST_SOC2_ADRESSE_RUE1 As String,  _
                    ByVal Original_CST_SOC2_ADRESSE_RUE2 As String,  _
                    ByVal Original_CST_SOC2_ADRESSE_CP As String,  _
                    ByVal Original_CST_SOC2_ADRESSE_VILLE As String,  _
                    ByVal Original_CST_SOC2_TEL As String,  _
                    ByVal Original_CST_SOC2_FAX As String,  _
                    ByVal Original_CST_SOC2_EMAIL As String,  _
                    ByVal Original_CST_SOC2_PORT As String,  _
                    ByVal Original_CST_PLTFRM_NOM As String,  _
                    ByVal Original_CST_PLTFRM_RUE1 As String,  _
                    ByVal Original_CST_PLTFRM_RUE2 As String,  _
                    ByVal Original_CST_PLTFRM_CP As String,  _
                    ByVal Original_CST_PLTFRM_VILLE As String,  _
                    ByVal Original_CST_PLTFRM_TEL As String,  _
                    ByVal Original_CST_PLTFRM_FAX As String,  _
                    ByVal Original_CST_PLTFRM_EMAIL As String,  _
                    ByVal Original_CST_PLTFRM_PORT As String,  _
                    ByVal Original_CST_TRP_TXGAZOLE As Global.System.Nullable(Of Double),  _
                    ByVal Original_CST_PU_PALL_PREP As Global.System.Nullable(Of Double),  _
                    ByVal Original_CST_PU_PALL_NONPREP As Global.System.Nullable(Of Double),  _
                    ByVal Original_FTP_HOSTNAME As String,  _
                    ByVal Original_FTP_USERNAME As String,  _
                    ByVal Original_FTP_PASSWORD As String,  _
                    ByVal Original_FTP_REMOTEDIR As String,  _
                    ByVal Original_FTP_LOCKFROMFILENAME As String,  _
                    ByVal Original_FTP_LOCKTOFILENAME As String,  _
                    ByVal Original_CST_DERN_NUM_FACT_COLISAGE As Global.System.Nullable(Of Short),  _
                    ByVal Original_CST_COL_IDMODEREGLEMENT As Global.System.Nullable(Of Short),  _
                    ByVal Original_CST_FACT_COL_TAXES As Global.System.Nullable(Of Double),  _
                    ByVal Original_CST_FACT_COL_PU_COLIS As Global.System.Nullable(Of Double),  _
                    ByVal Original_CST_SOC_RCS As String,  _
                    ByVal Original_CST_SOC_TVAINTRA As String,  _
                    ByVal Original_CST_SOC_LICENCE As String,  _
                    ByVal Original_CST_SOC2_RCS As String,  _
                    ByVal Original_CST_SOC2_TVAINTRA As String,  _
                    ByVal Original_CST_SOC2_LICENCE As String,  _
                    ByVal Original_CST_EXPORT_COMPTA_PATH As String,  _
                    ByVal Original_CST_SOC_COMPTETVA As String,  _
                    ByVal Original_CST_SOC_COMPTEPRODUIT As String,  _
                    ByVal Original_CST_SOC_COMPTEBANQUE As String,  _
                    ByVal Original_CST_SOC2_COMPTETVA As String,  _
                    ByVal Original_CST_SOC2_COMPTEPRODUIT As String,  _
                    ByVal Original_CST_SOC2_COMPTEBANQUE As String,  _
                    ByVal Original_CST_ID As Short,  _
                    ByVal Original_CST_SOC2_COMPTEPRODUIT_COL As String,  _
                    ByVal Original_CST_EDI_HOST As String,  _
                    ByVal Original_CST_EDI_PORT As String,  _
                    ByVal Original_CST_EDI_FROM As String,  _
                    ByVal Original_CST_EDI_TEMP As String,  _
                    ByVal Original_CST_SRVCE_PATH As String,  _
                    ByVal Original_CST_SRVCE_NBSEC As String,  _
                    ByVal Original_CST_SRVCE_PATHERROR As String,  _
                    ByVal Original_CST_DERN_NUM_FACT_HBV As Global.System.Nullable(Of Integer)) As Integer
            If (Original_CST_SOC_NOMSOC Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_CST_SOC_NOMSOC,String)
            End If
            If (Original_CST_SOC_ADRESSE_RUE1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_CST_SOC_ADRESSE_RUE1,String)
            End If
            If (Original_CST_SOC_ADRESSE_RUE2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_CST_SOC_ADRESSE_RUE2,String)
            End If
            If (Original_CST_SOC_ADRESSE_CP Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_CST_SOC_ADRESSE_CP,String)
            End If
            If (Original_CST_SOC_ADRESSE_VILLE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_CST_SOC_ADRESSE_VILLE,String)
            End If
            If (Original_CST_SOC_TEL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_CST_SOC_TEL,String)
            End If
            If (Original_CST_SOC_FAX Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_CST_SOC_FAX,String)
            End If
            If (Original_CST_SOC_PORT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_CST_SOC_PORT,String)
            End If
            If (Original_CST_SOC_EMAIL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_CST_SOC_EMAIL,String)
            End If
            If (Original_CST_FAX_PAGE_GARDE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_CST_FAX_PAGE_GARDE,String)
            End If
            If (Original_CST_FAX_ENVOI_PAGE_GARDE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_CST_FAX_ENVOI_PAGE_GARDE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_CST_FAX_SERVERNAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_CST_FAX_SERVERNAME,String)
            End If
            If (Original_CST_DERN_NUM_CMD_CLT.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_CST_DERN_NUM_CMD_CLT.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Original_CST_DERN_NUM_SCMD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_CST_DERN_NUM_SCMD.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Original_CST_DERN_NUM_BA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_CST_DERN_NUM_BA.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Original_CST_VERSION_BD Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_CST_VERSION_BD,String)
            End If
            If (Original_CST_FAX_PREFIX Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_CST_FAX_PREFIX,String)
            End If
            If (Original_CST_TX_COMMISSION.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_CST_TX_COMMISSION.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (Original_CST_DERN_NUM_FACTCOM.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_CST_DERN_NUM_FACTCOM.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (Original_CST_PATH_FACTCOM Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_CST_PATH_FACTCOM,String)
            End If
            If (Original_CST_DERN_NUM_FACT_TRP.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_CST_DERN_NUM_FACT_TRP.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Original_CST_TAXES_TRP.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(Original_CST_TAXES_TRP.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (Original_CST_PATH_FACTTRP Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(Original_CST_PATH_FACTTRP,String)
            End If
            If (Original_CST_TRP_IDMODEREGLEMENT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(Original_CST_TRP_IDMODEREGLEMENT,String)
            End If
            If (Original_CST_SOC2_NOMSOC Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(Original_CST_SOC2_NOMSOC,String)
            End If
            If (Original_CST_SOC2_ADRESSE_RUE1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(Original_CST_SOC2_ADRESSE_RUE1,String)
            End If
            If (Original_CST_SOC2_ADRESSE_RUE2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(Original_CST_SOC2_ADRESSE_RUE2,String)
            End If
            If (Original_CST_SOC2_ADRESSE_CP Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(Original_CST_SOC2_ADRESSE_CP,String)
            End If
            If (Original_CST_SOC2_ADRESSE_VILLE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(Original_CST_SOC2_ADRESSE_VILLE,String)
            End If
            If (Original_CST_SOC2_TEL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(Original_CST_SOC2_TEL,String)
            End If
            If (Original_CST_SOC2_FAX Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(Original_CST_SOC2_FAX,String)
            End If
            If (Original_CST_SOC2_EMAIL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(Original_CST_SOC2_EMAIL,String)
            End If
            If (Original_CST_SOC2_PORT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(Original_CST_SOC2_PORT,String)
            End If
            If (Original_CST_PLTFRM_NOM Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(Original_CST_PLTFRM_NOM,String)
            End If
            If (Original_CST_PLTFRM_RUE1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(Original_CST_PLTFRM_RUE1,String)
            End If
            If (Original_CST_PLTFRM_RUE2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(Original_CST_PLTFRM_RUE2,String)
            End If
            If (Original_CST_PLTFRM_CP Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(Original_CST_PLTFRM_CP,String)
            End If
            If (Original_CST_PLTFRM_VILLE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(Original_CST_PLTFRM_VILLE,String)
            End If
            If (Original_CST_PLTFRM_TEL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(Original_CST_PLTFRM_TEL,String)
            End If
            If (Original_CST_PLTFRM_FAX Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(Original_CST_PLTFRM_FAX,String)
            End If
            If (Original_CST_PLTFRM_EMAIL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(Original_CST_PLTFRM_EMAIL,String)
            End If
            If (Original_CST_PLTFRM_PORT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(Original_CST_PLTFRM_PORT,String)
            End If
            If (Original_CST_TRP_TXGAZOLE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(Original_CST_TRP_TXGAZOLE.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(85).Value = Global.System.DBNull.Value
            End If
            If (Original_CST_PU_PALL_PREP.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(Original_CST_PU_PALL_PREP.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(87).Value = Global.System.DBNull.Value
            End If
            If (Original_CST_PU_PALL_NONPREP.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(Original_CST_PU_PALL_NONPREP.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(89).Value = Global.System.DBNull.Value
            End If
            If (Original_FTP_HOSTNAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(91).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(Original_FTP_HOSTNAME,String)
            End If
            If (Original_FTP_USERNAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(93).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(Original_FTP_USERNAME,String)
            End If
            If (Original_FTP_PASSWORD Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(95).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(Original_FTP_PASSWORD,String)
            End If
            If (Original_FTP_REMOTEDIR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(97).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(Original_FTP_REMOTEDIR,String)
            End If
            If (Original_FTP_LOCKFROMFILENAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(99).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(Original_FTP_LOCKFROMFILENAME,String)
            End If
            If (Original_FTP_LOCKTOFILENAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(101).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(Original_FTP_LOCKTOFILENAME,String)
            End If
            If (Original_CST_DERN_NUM_FACT_COLISAGE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(102).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(Original_CST_DERN_NUM_FACT_COLISAGE.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(102).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(103).Value = Global.System.DBNull.Value
            End If
            If (Original_CST_COL_IDMODEREGLEMENT.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(104).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(Original_CST_COL_IDMODEREGLEMENT.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(104).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(105).Value = Global.System.DBNull.Value
            End If
            If (Original_CST_FACT_COL_TAXES.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(106).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(Original_CST_FACT_COL_TAXES.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(106).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(107).Value = Global.System.DBNull.Value
            End If
            If (Original_CST_FACT_COL_PU_COLIS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(108).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(Original_CST_FACT_COL_PU_COLIS.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(108).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(109).Value = Global.System.DBNull.Value
            End If
            If (Original_CST_SOC_RCS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(110).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(111).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(110).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(Original_CST_SOC_RCS,String)
            End If
            If (Original_CST_SOC_TVAINTRA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(112).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(113).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(112).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(Original_CST_SOC_TVAINTRA,String)
            End If
            If (Original_CST_SOC_LICENCE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(114).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(115).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(114).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(115).Value = CType(Original_CST_SOC_LICENCE,String)
            End If
            If (Original_CST_SOC2_RCS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(116).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(117).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(116).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(117).Value = CType(Original_CST_SOC2_RCS,String)
            End If
            If (Original_CST_SOC2_TVAINTRA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(118).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(119).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(118).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(119).Value = CType(Original_CST_SOC2_TVAINTRA,String)
            End If
            If (Original_CST_SOC2_LICENCE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(120).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(121).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(120).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(121).Value = CType(Original_CST_SOC2_LICENCE,String)
            End If
            If (Original_CST_EXPORT_COMPTA_PATH Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(122).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(123).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(122).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(123).Value = CType(Original_CST_EXPORT_COMPTA_PATH,String)
            End If
            If (Original_CST_SOC_COMPTETVA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(124).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(125).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(124).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(125).Value = CType(Original_CST_SOC_COMPTETVA,String)
            End If
            If (Original_CST_SOC_COMPTEPRODUIT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(126).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(127).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(126).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(127).Value = CType(Original_CST_SOC_COMPTEPRODUIT,String)
            End If
            If (Original_CST_SOC_COMPTEBANQUE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(128).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(129).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(128).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(129).Value = CType(Original_CST_SOC_COMPTEBANQUE,String)
            End If
            If (Original_CST_SOC2_COMPTETVA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(130).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(131).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(130).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(131).Value = CType(Original_CST_SOC2_COMPTETVA,String)
            End If
            If (Original_CST_SOC2_COMPTEPRODUIT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(132).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(133).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(132).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(133).Value = CType(Original_CST_SOC2_COMPTEPRODUIT,String)
            End If
            If (Original_CST_SOC2_COMPTEBANQUE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(134).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(135).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(134).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(135).Value = CType(Original_CST_SOC2_COMPTEBANQUE,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(136).Value = CType(Original_CST_ID,Short)
            If (Original_CST_SOC2_COMPTEPRODUIT_COL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(137).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(138).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(137).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(138).Value = CType(Original_CST_SOC2_COMPTEPRODUIT_COL,String)
            End If
            If (Original_CST_EDI_HOST Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(139).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(140).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(139).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(140).Value = CType(Original_CST_EDI_HOST,String)
            End If
            If (Original_CST_EDI_PORT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(141).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(142).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(141).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(142).Value = CType(Original_CST_EDI_PORT,String)
            End If
            If (Original_CST_EDI_FROM Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(143).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(144).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(143).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(144).Value = CType(Original_CST_EDI_FROM,String)
            End If
            If (Original_CST_EDI_TEMP Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(145).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(146).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(145).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(146).Value = CType(Original_CST_EDI_TEMP,String)
            End If
            If (Original_CST_SRVCE_PATH Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(147).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(148).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(147).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(148).Value = CType(Original_CST_SRVCE_PATH,String)
            End If
            If (Original_CST_SRVCE_NBSEC Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(149).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(150).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(149).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(150).Value = CType(Original_CST_SRVCE_NBSEC,String)
            End If
            If (Original_CST_SRVCE_PATHERROR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(151).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(152).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(151).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(152).Value = CType(Original_CST_SRVCE_PATHERROR,String)
            End If
            If (Original_CST_DERN_NUM_FACT_HBV.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(153).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(154).Value = CType(Original_CST_DERN_NUM_FACT_HBV.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(153).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(154).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CST_SOC_NOMSOC As String,  _
                    ByVal CST_SOC_ADRESSE_RUE1 As String,  _
                    ByVal CST_SOC_ADRESSE_RUE2 As String,  _
                    ByVal CST_SOC_ADRESSE_CP As String,  _
                    ByVal CST_SOC_ADRESSE_VILLE As String,  _
                    ByVal CST_SOC_TEL As String,  _
                    ByVal CST_SOC_FAX As String,  _
                    ByVal CST_SOC_PORT As String,  _
                    ByVal CST_SOC_EMAIL As String,  _
                    ByVal CST_FAX_PAGE_GARDE As String,  _
                    ByVal CST_FAX_ENVOI_PAGE_GARDE As Global.System.Nullable(Of Boolean),  _
                    ByVal CST_FAX_SERVERNAME As String,  _
                    ByVal CST_DERN_NUM_CMD_CLT As Global.System.Nullable(Of Integer),  _
                    ByVal CST_DERN_NUM_SCMD As Global.System.Nullable(Of Integer),  _
                    ByVal CST_DERN_NUM_BA As Global.System.Nullable(Of Integer),  _
                    ByVal CST_VERSION_BD As String,  _
                    ByVal CST_FAX_PREFIX As String,  _
                    ByVal CST_TX_COMMISSION As Global.System.Nullable(Of Single),  _
                    ByVal CST_DERN_NUM_FACTCOM As Global.System.Nullable(Of Integer),  _
                    ByVal CST_PATH_FACTCOM As String,  _
                    ByVal CST_DERN_NUM_FACT_TRP As Global.System.Nullable(Of Integer),  _
                    ByVal CST_TAXES_TRP As Global.System.Nullable(Of Double),  _
                    ByVal CST_PATH_FACTTRP As String,  _
                    ByVal CST_TRP_IDMODEREGLEMENT As String,  _
                    ByVal CST_SOC2_NOMSOC As String,  _
                    ByVal CST_SOC2_ADRESSE_RUE1 As String,  _
                    ByVal CST_SOC2_ADRESSE_RUE2 As String,  _
                    ByVal CST_SOC2_ADRESSE_CP As String,  _
                    ByVal CST_SOC2_ADRESSE_VILLE As String,  _
                    ByVal CST_SOC2_TEL As String,  _
                    ByVal CST_SOC2_FAX As String,  _
                    ByVal CST_SOC2_EMAIL As String,  _
                    ByVal CST_SOC2_PORT As String,  _
                    ByVal CST_PLTFRM_NOM As String,  _
                    ByVal CST_PLTFRM_RUE1 As String,  _
                    ByVal CST_PLTFRM_RUE2 As String,  _
                    ByVal CST_PLTFRM_CP As String,  _
                    ByVal CST_PLTFRM_VILLE As String,  _
                    ByVal CST_PLTFRM_TEL As String,  _
                    ByVal CST_PLTFRM_FAX As String,  _
                    ByVal CST_PLTFRM_EMAIL As String,  _
                    ByVal CST_PLTFRM_PORT As String,  _
                    ByVal CST_TRP_TXGAZOLE As Global.System.Nullable(Of Double),  _
                    ByVal CST_PU_PALL_PREP As Global.System.Nullable(Of Double),  _
                    ByVal CST_PU_PALL_NONPREP As Global.System.Nullable(Of Double),  _
                    ByVal FTP_HOSTNAME As String,  _
                    ByVal FTP_USERNAME As String,  _
                    ByVal FTP_PASSWORD As String,  _
                    ByVal FTP_REMOTEDIR As String,  _
                    ByVal FTP_LOCKFROMFILENAME As String,  _
                    ByVal FTP_LOCKTOFILENAME As String,  _
                    ByVal CST_DERN_NUM_FACT_COLISAGE As Global.System.Nullable(Of Short),  _
                    ByVal CST_COL_IDMODEREGLEMENT As Global.System.Nullable(Of Short),  _
                    ByVal CST_FACT_COL_TAXES As Global.System.Nullable(Of Double),  _
                    ByVal CST_FACT_COL_PU_COLIS As Global.System.Nullable(Of Double),  _
                    ByVal CST_SOC_RCS As String,  _
                    ByVal CST_SOC_TVAINTRA As String,  _
                    ByVal CST_SOC_LICENCE As String,  _
                    ByVal CST_SOC2_RCS As String,  _
                    ByVal CST_SOC2_TVAINTRA As String,  _
                    ByVal CST_SOC2_LICENCE As String,  _
                    ByVal CST_EXPORT_COMPTA_PATH As String,  _
                    ByVal CST_SOC_COMPTETVA As String,  _
                    ByVal CST_SOC_COMPTEPRODUIT As String,  _
                    ByVal CST_SOC_COMPTEBANQUE As String,  _
                    ByVal CST_SOC2_COMPTETVA As String,  _
                    ByVal CST_SOC2_COMPTEPRODUIT As String,  _
                    ByVal CST_SOC2_COMPTEBANQUE As String,  _
                    ByVal CST_ID As Short,  _
                    ByVal CST_SOC2_COMPTEPRODUIT_COL As String,  _
                    ByVal CST_EDI_HOST As String,  _
                    ByVal CST_EDI_PORT As String,  _
                    ByVal CST_EDI_FROM As String,  _
                    ByVal CST_EDI_TEMP As String,  _
                    ByVal CST_SRVCE_PATH As String,  _
                    ByVal CST_SRVCE_NBSEC As String,  _
                    ByVal CST_SRVCE_PATHERROR As String,  _
                    ByVal CST_DERN_NUM_FACT_HBV As Global.System.Nullable(Of Integer),  _
                    ByVal CST_FTPEDI_USER As String,  _
                    ByVal CST_FTPEDI_SRV As String,  _
                    ByVal CST_FTPEDI_PWD As String,  _
                    ByVal CST_FTPEDI_PORT As String,  _
                    ByVal CST_FTPEDI_REP As String,  _
                    ByVal CST_FTPEDI_REPLOCAL As String) As Integer
            If (CST_SOC_NOMSOC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CST_SOC_NOMSOC,String)
            End If
            If (CST_SOC_ADRESSE_RUE1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CST_SOC_ADRESSE_RUE1,String)
            End If
            If (CST_SOC_ADRESSE_RUE2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CST_SOC_ADRESSE_RUE2,String)
            End If
            If (CST_SOC_ADRESSE_CP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(CST_SOC_ADRESSE_CP,String)
            End If
            If (CST_SOC_ADRESSE_VILLE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(CST_SOC_ADRESSE_VILLE,String)
            End If
            If (CST_SOC_TEL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(CST_SOC_TEL,String)
            End If
            If (CST_SOC_FAX Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(CST_SOC_FAX,String)
            End If
            If (CST_SOC_PORT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(CST_SOC_PORT,String)
            End If
            If (CST_SOC_EMAIL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(CST_SOC_EMAIL,String)
            End If
            If (CST_FAX_PAGE_GARDE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(CST_FAX_PAGE_GARDE,String)
            End If
            If (CST_FAX_ENVOI_PAGE_GARDE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(CST_FAX_ENVOI_PAGE_GARDE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (CST_FAX_SERVERNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(CST_FAX_SERVERNAME,String)
            End If
            If (CST_DERN_NUM_CMD_CLT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(CST_DERN_NUM_CMD_CLT.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (CST_DERN_NUM_SCMD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(CST_DERN_NUM_SCMD.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (CST_DERN_NUM_BA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(CST_DERN_NUM_BA.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (CST_VERSION_BD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(CST_VERSION_BD,String)
            End If
            If (CST_FAX_PREFIX Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(CST_FAX_PREFIX,String)
            End If
            If (CST_TX_COMMISSION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(CST_TX_COMMISSION.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (CST_DERN_NUM_FACTCOM.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(CST_DERN_NUM_FACTCOM.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (CST_PATH_FACTCOM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(CST_PATH_FACTCOM,String)
            End If
            If (CST_DERN_NUM_FACT_TRP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(CST_DERN_NUM_FACT_TRP.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (CST_TAXES_TRP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(CST_TAXES_TRP.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (CST_PATH_FACTTRP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(CST_PATH_FACTTRP,String)
            End If
            If (CST_TRP_IDMODEREGLEMENT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(CST_TRP_IDMODEREGLEMENT,String)
            End If
            If (CST_SOC2_NOMSOC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(CST_SOC2_NOMSOC,String)
            End If
            If (CST_SOC2_ADRESSE_RUE1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(CST_SOC2_ADRESSE_RUE1,String)
            End If
            If (CST_SOC2_ADRESSE_RUE2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(CST_SOC2_ADRESSE_RUE2,String)
            End If
            If (CST_SOC2_ADRESSE_CP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(CST_SOC2_ADRESSE_CP,String)
            End If
            If (CST_SOC2_ADRESSE_VILLE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(CST_SOC2_ADRESSE_VILLE,String)
            End If
            If (CST_SOC2_TEL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(CST_SOC2_TEL,String)
            End If
            If (CST_SOC2_FAX Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(CST_SOC2_FAX,String)
            End If
            If (CST_SOC2_EMAIL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(CST_SOC2_EMAIL,String)
            End If
            If (CST_SOC2_PORT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(CST_SOC2_PORT,String)
            End If
            If (CST_PLTFRM_NOM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(CST_PLTFRM_NOM,String)
            End If
            If (CST_PLTFRM_RUE1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(CST_PLTFRM_RUE1,String)
            End If
            If (CST_PLTFRM_RUE2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(CST_PLTFRM_RUE2,String)
            End If
            If (CST_PLTFRM_CP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(CST_PLTFRM_CP,String)
            End If
            If (CST_PLTFRM_VILLE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(CST_PLTFRM_VILLE,String)
            End If
            If (CST_PLTFRM_TEL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(CST_PLTFRM_TEL,String)
            End If
            If (CST_PLTFRM_FAX Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(CST_PLTFRM_FAX,String)
            End If
            If (CST_PLTFRM_EMAIL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(CST_PLTFRM_EMAIL,String)
            End If
            If (CST_PLTFRM_PORT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(CST_PLTFRM_PORT,String)
            End If
            If (CST_TRP_TXGAZOLE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(CST_TRP_TXGAZOLE.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (CST_PU_PALL_PREP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(CST_PU_PALL_PREP.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (CST_PU_PALL_NONPREP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(CST_PU_PALL_NONPREP.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (FTP_HOSTNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(FTP_HOSTNAME,String)
            End If
            If (FTP_USERNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(FTP_USERNAME,String)
            End If
            If (FTP_PASSWORD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(FTP_PASSWORD,String)
            End If
            If (FTP_REMOTEDIR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(FTP_REMOTEDIR,String)
            End If
            If (FTP_LOCKFROMFILENAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(FTP_LOCKFROMFILENAME,String)
            End If
            If (FTP_LOCKTOFILENAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(FTP_LOCKTOFILENAME,String)
            End If
            If (CST_DERN_NUM_FACT_COLISAGE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(CST_DERN_NUM_FACT_COLISAGE.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (CST_COL_IDMODEREGLEMENT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(CST_COL_IDMODEREGLEMENT.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (CST_FACT_COL_TAXES.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(CST_FACT_COL_TAXES.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (CST_FACT_COL_PU_COLIS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(CST_FACT_COL_PU_COLIS.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (CST_SOC_RCS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(CST_SOC_RCS,String)
            End If
            If (CST_SOC_TVAINTRA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(CST_SOC_TVAINTRA,String)
            End If
            If (CST_SOC_LICENCE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(CST_SOC_LICENCE,String)
            End If
            If (CST_SOC2_RCS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(CST_SOC2_RCS,String)
            End If
            If (CST_SOC2_TVAINTRA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(CST_SOC2_TVAINTRA,String)
            End If
            If (CST_SOC2_LICENCE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(CST_SOC2_LICENCE,String)
            End If
            If (CST_EXPORT_COMPTA_PATH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(CST_EXPORT_COMPTA_PATH,String)
            End If
            If (CST_SOC_COMPTETVA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(CST_SOC_COMPTETVA,String)
            End If
            If (CST_SOC_COMPTEPRODUIT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(CST_SOC_COMPTEPRODUIT,String)
            End If
            If (CST_SOC_COMPTEBANQUE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(CST_SOC_COMPTEBANQUE,String)
            End If
            If (CST_SOC2_COMPTETVA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(CST_SOC2_COMPTETVA,String)
            End If
            If (CST_SOC2_COMPTEPRODUIT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(CST_SOC2_COMPTEPRODUIT,String)
            End If
            If (CST_SOC2_COMPTEBANQUE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(CST_SOC2_COMPTEBANQUE,String)
            End If
            Me.Adapter.InsertCommand.Parameters(68).Value = CType(CST_ID,Short)
            If (CST_SOC2_COMPTEPRODUIT_COL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(69).Value = CType(CST_SOC2_COMPTEPRODUIT_COL,String)
            End If
            If (CST_EDI_HOST Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(70).Value = CType(CST_EDI_HOST,String)
            End If
            If (CST_EDI_PORT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(71).Value = CType(CST_EDI_PORT,String)
            End If
            If (CST_EDI_FROM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(72).Value = CType(CST_EDI_FROM,String)
            End If
            If (CST_EDI_TEMP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(73).Value = CType(CST_EDI_TEMP,String)
            End If
            If (CST_SRVCE_PATH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(74).Value = CType(CST_SRVCE_PATH,String)
            End If
            If (CST_SRVCE_NBSEC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(75).Value = CType(CST_SRVCE_NBSEC,String)
            End If
            If (CST_SRVCE_PATHERROR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(76).Value = CType(CST_SRVCE_PATHERROR,String)
            End If
            If (CST_DERN_NUM_FACT_HBV.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(77).Value = CType(CST_DERN_NUM_FACT_HBV.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(77).Value = Global.System.DBNull.Value
            End If
            If (CST_FTPEDI_USER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(78).Value = CType(CST_FTPEDI_USER,String)
            End If
            If (CST_FTPEDI_SRV Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(79).Value = CType(CST_FTPEDI_SRV,String)
            End If
            If (CST_FTPEDI_PWD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(80).Value = CType(CST_FTPEDI_PWD,String)
            End If
            If (CST_FTPEDI_PORT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(81).Value = CType(CST_FTPEDI_PORT,String)
            End If
            If (CST_FTPEDI_REP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(82).Value = CType(CST_FTPEDI_REP,String)
            End If
            If (CST_FTPEDI_REPLOCAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(83).Value = CType(CST_FTPEDI_REPLOCAL,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CST_SOC_NOMSOC As String,  _
                    ByVal CST_SOC_ADRESSE_RUE1 As String,  _
                    ByVal CST_SOC_ADRESSE_RUE2 As String,  _
                    ByVal CST_SOC_ADRESSE_CP As String,  _
                    ByVal CST_SOC_ADRESSE_VILLE As String,  _
                    ByVal CST_SOC_TEL As String,  _
                    ByVal CST_SOC_FAX As String,  _
                    ByVal CST_SOC_PORT As String,  _
                    ByVal CST_SOC_EMAIL As String,  _
                    ByVal CST_FAX_PAGE_GARDE As String,  _
                    ByVal CST_FAX_ENVOI_PAGE_GARDE As Global.System.Nullable(Of Boolean),  _
                    ByVal CST_FAX_SERVERNAME As String,  _
                    ByVal CST_DERN_NUM_CMD_CLT As Global.System.Nullable(Of Integer),  _
                    ByVal CST_DERN_NUM_SCMD As Global.System.Nullable(Of Integer),  _
                    ByVal CST_DERN_NUM_BA As Global.System.Nullable(Of Integer),  _
                    ByVal CST_VERSION_BD As String,  _
                    ByVal CST_FAX_PREFIX As String,  _
                    ByVal CST_TX_COMMISSION As Global.System.Nullable(Of Single),  _
                    ByVal CST_DERN_NUM_FACTCOM As Global.System.Nullable(Of Integer),  _
                    ByVal CST_PATH_FACTCOM As String,  _
                    ByVal CST_DERN_NUM_FACT_TRP As Global.System.Nullable(Of Integer),  _
                    ByVal CST_TAXES_TRP As Global.System.Nullable(Of Double),  _
                    ByVal CST_PATH_FACTTRP As String,  _
                    ByVal CST_TRP_IDMODEREGLEMENT As String,  _
                    ByVal CST_SOC2_NOMSOC As String,  _
                    ByVal CST_SOC2_ADRESSE_RUE1 As String,  _
                    ByVal CST_SOC2_ADRESSE_RUE2 As String,  _
                    ByVal CST_SOC2_ADRESSE_CP As String,  _
                    ByVal CST_SOC2_ADRESSE_VILLE As String,  _
                    ByVal CST_SOC2_TEL As String,  _
                    ByVal CST_SOC2_FAX As String,  _
                    ByVal CST_SOC2_EMAIL As String,  _
                    ByVal CST_SOC2_PORT As String,  _
                    ByVal CST_PLTFRM_NOM As String,  _
                    ByVal CST_PLTFRM_RUE1 As String,  _
                    ByVal CST_PLTFRM_RUE2 As String,  _
                    ByVal CST_PLTFRM_CP As String,  _
                    ByVal CST_PLTFRM_VILLE As String,  _
                    ByVal CST_PLTFRM_TEL As String,  _
                    ByVal CST_PLTFRM_FAX As String,  _
                    ByVal CST_PLTFRM_EMAIL As String,  _
                    ByVal CST_PLTFRM_PORT As String,  _
                    ByVal CST_TRP_TXGAZOLE As Global.System.Nullable(Of Double),  _
                    ByVal CST_PU_PALL_PREP As Global.System.Nullable(Of Double),  _
                    ByVal CST_PU_PALL_NONPREP As Global.System.Nullable(Of Double),  _
                    ByVal FTP_HOSTNAME As String,  _
                    ByVal FTP_USERNAME As String,  _
                    ByVal FTP_PASSWORD As String,  _
                    ByVal FTP_REMOTEDIR As String,  _
                    ByVal FTP_LOCKFROMFILENAME As String,  _
                    ByVal FTP_LOCKTOFILENAME As String,  _
                    ByVal CST_DERN_NUM_FACT_COLISAGE As Global.System.Nullable(Of Short),  _
                    ByVal CST_COL_IDMODEREGLEMENT As Global.System.Nullable(Of Short),  _
                    ByVal CST_FACT_COL_TAXES As Global.System.Nullable(Of Double),  _
                    ByVal CST_FACT_COL_PU_COLIS As Global.System.Nullable(Of Double),  _
                    ByVal CST_SOC_RCS As String,  _
                    ByVal CST_SOC_TVAINTRA As String,  _
                    ByVal CST_SOC_LICENCE As String,  _
                    ByVal CST_SOC2_RCS As String,  _
                    ByVal CST_SOC2_TVAINTRA As String,  _
                    ByVal CST_SOC2_LICENCE As String,  _
                    ByVal CST_EXPORT_COMPTA_PATH As String,  _
                    ByVal CST_SOC_COMPTETVA As String,  _
                    ByVal CST_SOC_COMPTEPRODUIT As String,  _
                    ByVal CST_SOC_COMPTEBANQUE As String,  _
                    ByVal CST_SOC2_COMPTETVA As String,  _
                    ByVal CST_SOC2_COMPTEPRODUIT As String,  _
                    ByVal CST_SOC2_COMPTEBANQUE As String,  _
                    ByVal CST_ID As Short,  _
                    ByVal CST_SOC2_COMPTEPRODUIT_COL As String,  _
                    ByVal CST_EDI_HOST As String,  _
                    ByVal CST_EDI_PORT As String,  _
                    ByVal CST_EDI_FROM As String,  _
                    ByVal CST_EDI_TEMP As String,  _
                    ByVal CST_SRVCE_PATH As String,  _
                    ByVal CST_SRVCE_NBSEC As String,  _
                    ByVal CST_SRVCE_PATHERROR As String,  _
                    ByVal CST_DERN_NUM_FACT_HBV As Global.System.Nullable(Of Integer),  _
                    ByVal CST_FTPEDI_USER As String,  _
                    ByVal CST_FTPEDI_SRV As String,  _
                    ByVal CST_FTPEDI_PWD As String,  _
                    ByVal CST_FTPEDI_PORT As String,  _
                    ByVal CST_FTPEDI_REP As String,  _
                    ByVal CST_FTPEDI_REPLOCAL As String,  _
                    ByVal Original_CST_SOC_NOMSOC As String,  _
                    ByVal Original_CST_SOC_ADRESSE_RUE1 As String,  _
                    ByVal Original_CST_SOC_ADRESSE_RUE2 As String,  _
                    ByVal Original_CST_SOC_ADRESSE_CP As String,  _
                    ByVal Original_CST_SOC_ADRESSE_VILLE As String,  _
                    ByVal Original_CST_SOC_TEL As String,  _
                    ByVal Original_CST_SOC_FAX As String,  _
                    ByVal Original_CST_SOC_PORT As String,  _
                    ByVal Original_CST_SOC_EMAIL As String,  _
                    ByVal Original_CST_FAX_PAGE_GARDE As String,  _
                    ByVal Original_CST_FAX_ENVOI_PAGE_GARDE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CST_FAX_SERVERNAME As String,  _
                    ByVal Original_CST_DERN_NUM_CMD_CLT As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CST_DERN_NUM_SCMD As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CST_DERN_NUM_BA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CST_VERSION_BD As String,  _
                    ByVal Original_CST_FAX_PREFIX As String,  _
                    ByVal Original_CST_TX_COMMISSION As Global.System.Nullable(Of Single),  _
                    ByVal Original_CST_DERN_NUM_FACTCOM As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CST_PATH_FACTCOM As String,  _
                    ByVal Original_CST_DERN_NUM_FACT_TRP As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CST_TAXES_TRP As Global.System.Nullable(Of Double),  _
                    ByVal Original_CST_PATH_FACTTRP As String,  _
                    ByVal Original_CST_TRP_IDMODEREGLEMENT As String,  _
                    ByVal Original_CST_SOC2_NOMSOC As String,  _
                    ByVal Original_CST_SOC2_ADRESSE_RUE1 As String,  _
                    ByVal Original_CST_SOC2_ADRESSE_RUE2 As String,  _
                    ByVal Original_CST_SOC2_ADRESSE_CP As String,  _
                    ByVal Original_CST_SOC2_ADRESSE_VILLE As String,  _
                    ByVal Original_CST_SOC2_TEL As String,  _
                    ByVal Original_CST_SOC2_FAX As String,  _
                    ByVal Original_CST_SOC2_EMAIL As String,  _
                    ByVal Original_CST_SOC2_PORT As String,  _
                    ByVal Original_CST_PLTFRM_NOM As String,  _
                    ByVal Original_CST_PLTFRM_RUE1 As String,  _
                    ByVal Original_CST_PLTFRM_RUE2 As String,  _
                    ByVal Original_CST_PLTFRM_CP As String,  _
                    ByVal Original_CST_PLTFRM_VILLE As String,  _
                    ByVal Original_CST_PLTFRM_TEL As String,  _
                    ByVal Original_CST_PLTFRM_FAX As String,  _
                    ByVal Original_CST_PLTFRM_EMAIL As String,  _
                    ByVal Original_CST_PLTFRM_PORT As String,  _
                    ByVal Original_CST_TRP_TXGAZOLE As Global.System.Nullable(Of Double),  _
                    ByVal Original_CST_PU_PALL_PREP As Global.System.Nullable(Of Double),  _
                    ByVal Original_CST_PU_PALL_NONPREP As Global.System.Nullable(Of Double),  _
                    ByVal Original_FTP_HOSTNAME As String,  _
                    ByVal Original_FTP_USERNAME As String,  _
                    ByVal Original_FTP_PASSWORD As String,  _
                    ByVal Original_FTP_REMOTEDIR As String,  _
                    ByVal Original_FTP_LOCKFROMFILENAME As String,  _
                    ByVal Original_FTP_LOCKTOFILENAME As String,  _
                    ByVal Original_CST_DERN_NUM_FACT_COLISAGE As Global.System.Nullable(Of Short),  _
                    ByVal Original_CST_COL_IDMODEREGLEMENT As Global.System.Nullable(Of Short),  _
                    ByVal Original_CST_FACT_COL_TAXES As Global.System.Nullable(Of Double),  _
                    ByVal Original_CST_FACT_COL_PU_COLIS As Global.System.Nullable(Of Double),  _
                    ByVal Original_CST_SOC_RCS As String,  _
                    ByVal Original_CST_SOC_TVAINTRA As String,  _
                    ByVal Original_CST_SOC_LICENCE As String,  _
                    ByVal Original_CST_SOC2_RCS As String,  _
                    ByVal Original_CST_SOC2_TVAINTRA As String,  _
                    ByVal Original_CST_SOC2_LICENCE As String,  _
                    ByVal Original_CST_EXPORT_COMPTA_PATH As String,  _
                    ByVal Original_CST_SOC_COMPTETVA As String,  _
                    ByVal Original_CST_SOC_COMPTEPRODUIT As String,  _
                    ByVal Original_CST_SOC_COMPTEBANQUE As String,  _
                    ByVal Original_CST_SOC2_COMPTETVA As String,  _
                    ByVal Original_CST_SOC2_COMPTEPRODUIT As String,  _
                    ByVal Original_CST_SOC2_COMPTEBANQUE As String,  _
                    ByVal Original_CST_ID As Short,  _
                    ByVal Original_CST_SOC2_COMPTEPRODUIT_COL As String,  _
                    ByVal Original_CST_EDI_HOST As String,  _
                    ByVal Original_CST_EDI_PORT As String,  _
                    ByVal Original_CST_EDI_FROM As String,  _
                    ByVal Original_CST_EDI_TEMP As String,  _
                    ByVal Original_CST_SRVCE_PATH As String,  _
                    ByVal Original_CST_SRVCE_NBSEC As String,  _
                    ByVal Original_CST_SRVCE_PATHERROR As String,  _
                    ByVal Original_CST_DERN_NUM_FACT_HBV As Global.System.Nullable(Of Integer)) As Integer
            If (CST_SOC_NOMSOC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CST_SOC_NOMSOC,String)
            End If
            If (CST_SOC_ADRESSE_RUE1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CST_SOC_ADRESSE_RUE1,String)
            End If
            If (CST_SOC_ADRESSE_RUE2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CST_SOC_ADRESSE_RUE2,String)
            End If
            If (CST_SOC_ADRESSE_CP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CST_SOC_ADRESSE_CP,String)
            End If
            If (CST_SOC_ADRESSE_VILLE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(CST_SOC_ADRESSE_VILLE,String)
            End If
            If (CST_SOC_TEL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(CST_SOC_TEL,String)
            End If
            If (CST_SOC_FAX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(CST_SOC_FAX,String)
            End If
            If (CST_SOC_PORT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(CST_SOC_PORT,String)
            End If
            If (CST_SOC_EMAIL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(CST_SOC_EMAIL,String)
            End If
            If (CST_FAX_PAGE_GARDE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(CST_FAX_PAGE_GARDE,String)
            End If
            If (CST_FAX_ENVOI_PAGE_GARDE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(CST_FAX_ENVOI_PAGE_GARDE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (CST_FAX_SERVERNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(CST_FAX_SERVERNAME,String)
            End If
            If (CST_DERN_NUM_CMD_CLT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(CST_DERN_NUM_CMD_CLT.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (CST_DERN_NUM_SCMD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(CST_DERN_NUM_SCMD.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (CST_DERN_NUM_BA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(CST_DERN_NUM_BA.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (CST_VERSION_BD Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(CST_VERSION_BD,String)
            End If
            If (CST_FAX_PREFIX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(CST_FAX_PREFIX,String)
            End If
            If (CST_TX_COMMISSION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(CST_TX_COMMISSION.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (CST_DERN_NUM_FACTCOM.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(CST_DERN_NUM_FACTCOM.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (CST_PATH_FACTCOM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(CST_PATH_FACTCOM,String)
            End If
            If (CST_DERN_NUM_FACT_TRP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(CST_DERN_NUM_FACT_TRP.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (CST_TAXES_TRP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(CST_TAXES_TRP.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (CST_PATH_FACTTRP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(CST_PATH_FACTTRP,String)
            End If
            If (CST_TRP_IDMODEREGLEMENT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(CST_TRP_IDMODEREGLEMENT,String)
            End If
            If (CST_SOC2_NOMSOC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(CST_SOC2_NOMSOC,String)
            End If
            If (CST_SOC2_ADRESSE_RUE1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(CST_SOC2_ADRESSE_RUE1,String)
            End If
            If (CST_SOC2_ADRESSE_RUE2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(CST_SOC2_ADRESSE_RUE2,String)
            End If
            If (CST_SOC2_ADRESSE_CP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(CST_SOC2_ADRESSE_CP,String)
            End If
            If (CST_SOC2_ADRESSE_VILLE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(CST_SOC2_ADRESSE_VILLE,String)
            End If
            If (CST_SOC2_TEL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(CST_SOC2_TEL,String)
            End If
            If (CST_SOC2_FAX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(CST_SOC2_FAX,String)
            End If
            If (CST_SOC2_EMAIL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(CST_SOC2_EMAIL,String)
            End If
            If (CST_SOC2_PORT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(CST_SOC2_PORT,String)
            End If
            If (CST_PLTFRM_NOM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(CST_PLTFRM_NOM,String)
            End If
            If (CST_PLTFRM_RUE1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(CST_PLTFRM_RUE1,String)
            End If
            If (CST_PLTFRM_RUE2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(CST_PLTFRM_RUE2,String)
            End If
            If (CST_PLTFRM_CP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(CST_PLTFRM_CP,String)
            End If
            If (CST_PLTFRM_VILLE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(CST_PLTFRM_VILLE,String)
            End If
            If (CST_PLTFRM_TEL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(CST_PLTFRM_TEL,String)
            End If
            If (CST_PLTFRM_FAX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(CST_PLTFRM_FAX,String)
            End If
            If (CST_PLTFRM_EMAIL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(CST_PLTFRM_EMAIL,String)
            End If
            If (CST_PLTFRM_PORT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(CST_PLTFRM_PORT,String)
            End If
            If (CST_TRP_TXGAZOLE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(CST_TRP_TXGAZOLE.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (CST_PU_PALL_PREP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(CST_PU_PALL_PREP.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (CST_PU_PALL_NONPREP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(CST_PU_PALL_NONPREP.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (FTP_HOSTNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(FTP_HOSTNAME,String)
            End If
            If (FTP_USERNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(FTP_USERNAME,String)
            End If
            If (FTP_PASSWORD Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(FTP_PASSWORD,String)
            End If
            If (FTP_REMOTEDIR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(FTP_REMOTEDIR,String)
            End If
            If (FTP_LOCKFROMFILENAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(FTP_LOCKFROMFILENAME,String)
            End If
            If (FTP_LOCKTOFILENAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(FTP_LOCKTOFILENAME,String)
            End If
            If (CST_DERN_NUM_FACT_COLISAGE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(CST_DERN_NUM_FACT_COLISAGE.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (CST_COL_IDMODEREGLEMENT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(CST_COL_IDMODEREGLEMENT.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (CST_FACT_COL_TAXES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(CST_FACT_COL_TAXES.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (CST_FACT_COL_PU_COLIS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(CST_FACT_COL_PU_COLIS.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (CST_SOC_RCS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(CST_SOC_RCS,String)
            End If
            If (CST_SOC_TVAINTRA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(CST_SOC_TVAINTRA,String)
            End If
            If (CST_SOC_LICENCE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(CST_SOC_LICENCE,String)
            End If
            If (CST_SOC2_RCS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(CST_SOC2_RCS,String)
            End If
            If (CST_SOC2_TVAINTRA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(CST_SOC2_TVAINTRA,String)
            End If
            If (CST_SOC2_LICENCE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(CST_SOC2_LICENCE,String)
            End If
            If (CST_EXPORT_COMPTA_PATH Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(CST_EXPORT_COMPTA_PATH,String)
            End If
            If (CST_SOC_COMPTETVA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(CST_SOC_COMPTETVA,String)
            End If
            If (CST_SOC_COMPTEPRODUIT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(CST_SOC_COMPTEPRODUIT,String)
            End If
            If (CST_SOC_COMPTEBANQUE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(CST_SOC_COMPTEBANQUE,String)
            End If
            If (CST_SOC2_COMPTETVA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(CST_SOC2_COMPTETVA,String)
            End If
            If (CST_SOC2_COMPTEPRODUIT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(CST_SOC2_COMPTEPRODUIT,String)
            End If
            If (CST_SOC2_COMPTEBANQUE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(CST_SOC2_COMPTEBANQUE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(68).Value = CType(CST_ID,Short)
            If (CST_SOC2_COMPTEPRODUIT_COL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(CST_SOC2_COMPTEPRODUIT_COL,String)
            End If
            If (CST_EDI_HOST Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(CST_EDI_HOST,String)
            End If
            If (CST_EDI_PORT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(CST_EDI_PORT,String)
            End If
            If (CST_EDI_FROM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(CST_EDI_FROM,String)
            End If
            If (CST_EDI_TEMP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(CST_EDI_TEMP,String)
            End If
            If (CST_SRVCE_PATH Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(CST_SRVCE_PATH,String)
            End If
            If (CST_SRVCE_NBSEC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(CST_SRVCE_NBSEC,String)
            End If
            If (CST_SRVCE_PATHERROR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(CST_SRVCE_PATHERROR,String)
            End If
            If (CST_DERN_NUM_FACT_HBV.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(CST_DERN_NUM_FACT_HBV.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            End If
            If (CST_FTPEDI_USER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(CST_FTPEDI_USER,String)
            End If
            If (CST_FTPEDI_SRV Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(CST_FTPEDI_SRV,String)
            End If
            If (CST_FTPEDI_PWD Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(CST_FTPEDI_PWD,String)
            End If
            If (CST_FTPEDI_PORT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(CST_FTPEDI_PORT,String)
            End If
            If (CST_FTPEDI_REP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(CST_FTPEDI_REP,String)
            End If
            If (CST_FTPEDI_REPLOCAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(CST_FTPEDI_REPLOCAL,String)
            End If
            If (Original_CST_SOC_NOMSOC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_CST_SOC_NOMSOC,String)
            End If
            If (Original_CST_SOC_ADRESSE_RUE1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_CST_SOC_ADRESSE_RUE1,String)
            End If
            If (Original_CST_SOC_ADRESSE_RUE2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Original_CST_SOC_ADRESSE_RUE2,String)
            End If
            If (Original_CST_SOC_ADRESSE_CP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(Original_CST_SOC_ADRESSE_CP,String)
            End If
            If (Original_CST_SOC_ADRESSE_VILLE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(Original_CST_SOC_ADRESSE_VILLE,String)
            End If
            If (Original_CST_SOC_TEL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(Original_CST_SOC_TEL,String)
            End If
            If (Original_CST_SOC_FAX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(Original_CST_SOC_FAX,String)
            End If
            If (Original_CST_SOC_PORT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(Original_CST_SOC_PORT,String)
            End If
            If (Original_CST_SOC_EMAIL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(Original_CST_SOC_EMAIL,String)
            End If
            If (Original_CST_FAX_PAGE_GARDE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(Original_CST_FAX_PAGE_GARDE,String)
            End If
            If (Original_CST_FAX_ENVOI_PAGE_GARDE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(Original_CST_FAX_ENVOI_PAGE_GARDE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = Global.System.DBNull.Value
            End If
            If (Original_CST_FAX_SERVERNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(107).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(Original_CST_FAX_SERVERNAME,String)
            End If
            If (Original_CST_DERN_NUM_CMD_CLT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(Original_CST_DERN_NUM_CMD_CLT.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = Global.System.DBNull.Value
            End If
            If (Original_CST_DERN_NUM_SCMD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(Original_CST_DERN_NUM_SCMD.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = Global.System.DBNull.Value
            End If
            If (Original_CST_DERN_NUM_BA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(Original_CST_DERN_NUM_BA.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(113).Value = Global.System.DBNull.Value
            End If
            If (Original_CST_VERSION_BD Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(115).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(Original_CST_VERSION_BD,String)
            End If
            If (Original_CST_FAX_PREFIX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(117).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(Original_CST_FAX_PREFIX,String)
            End If
            If (Original_CST_TX_COMMISSION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(Original_CST_TX_COMMISSION.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(119).Value = Global.System.DBNull.Value
            End If
            If (Original_CST_DERN_NUM_FACTCOM.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(Original_CST_DERN_NUM_FACTCOM.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(121).Value = Global.System.DBNull.Value
            End If
            If (Original_CST_PATH_FACTCOM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(123).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(Original_CST_PATH_FACTCOM,String)
            End If
            If (Original_CST_DERN_NUM_FACT_TRP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(Original_CST_DERN_NUM_FACT_TRP.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(125).Value = Global.System.DBNull.Value
            End If
            If (Original_CST_TAXES_TRP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(Original_CST_TAXES_TRP.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(127).Value = Global.System.DBNull.Value
            End If
            If (Original_CST_PATH_FACTTRP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(129).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(Original_CST_PATH_FACTTRP,String)
            End If
            If (Original_CST_TRP_IDMODEREGLEMENT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(131).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(Original_CST_TRP_IDMODEREGLEMENT,String)
            End If
            If (Original_CST_SOC2_NOMSOC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(133).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(Original_CST_SOC2_NOMSOC,String)
            End If
            If (Original_CST_SOC2_ADRESSE_RUE1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(135).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(Original_CST_SOC2_ADRESSE_RUE1,String)
            End If
            If (Original_CST_SOC2_ADRESSE_RUE2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(137).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(Original_CST_SOC2_ADRESSE_RUE2,String)
            End If
            If (Original_CST_SOC2_ADRESSE_CP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(139).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(Original_CST_SOC2_ADRESSE_CP,String)
            End If
            If (Original_CST_SOC2_ADRESSE_VILLE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(141).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(Original_CST_SOC2_ADRESSE_VILLE,String)
            End If
            If (Original_CST_SOC2_TEL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(143).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(Original_CST_SOC2_TEL,String)
            End If
            If (Original_CST_SOC2_FAX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(145).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(Original_CST_SOC2_FAX,String)
            End If
            If (Original_CST_SOC2_EMAIL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(147).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(Original_CST_SOC2_EMAIL,String)
            End If
            If (Original_CST_SOC2_PORT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(149).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(Original_CST_SOC2_PORT,String)
            End If
            If (Original_CST_PLTFRM_NOM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(151).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(Original_CST_PLTFRM_NOM,String)
            End If
            If (Original_CST_PLTFRM_RUE1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(153).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(Original_CST_PLTFRM_RUE1,String)
            End If
            If (Original_CST_PLTFRM_RUE2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(155).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(Original_CST_PLTFRM_RUE2,String)
            End If
            If (Original_CST_PLTFRM_CP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(156).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(157).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(156).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(Original_CST_PLTFRM_CP,String)
            End If
            If (Original_CST_PLTFRM_VILLE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(158).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(159).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(158).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(Original_CST_PLTFRM_VILLE,String)
            End If
            If (Original_CST_PLTFRM_TEL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(160).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(161).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(160).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(Original_CST_PLTFRM_TEL,String)
            End If
            If (Original_CST_PLTFRM_FAX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(162).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(163).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(162).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(163).Value = CType(Original_CST_PLTFRM_FAX,String)
            End If
            If (Original_CST_PLTFRM_EMAIL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(164).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(165).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(164).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(Original_CST_PLTFRM_EMAIL,String)
            End If
            If (Original_CST_PLTFRM_PORT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(166).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(167).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(166).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(167).Value = CType(Original_CST_PLTFRM_PORT,String)
            End If
            If (Original_CST_TRP_TXGAZOLE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(168).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(169).Value = CType(Original_CST_TRP_TXGAZOLE.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(168).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(169).Value = Global.System.DBNull.Value
            End If
            If (Original_CST_PU_PALL_PREP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(170).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(171).Value = CType(Original_CST_PU_PALL_PREP.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(170).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(171).Value = Global.System.DBNull.Value
            End If
            If (Original_CST_PU_PALL_NONPREP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(172).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(173).Value = CType(Original_CST_PU_PALL_NONPREP.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(172).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(173).Value = Global.System.DBNull.Value
            End If
            If (Original_FTP_HOSTNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(174).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(175).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(174).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(175).Value = CType(Original_FTP_HOSTNAME,String)
            End If
            If (Original_FTP_USERNAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(176).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(177).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(176).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(177).Value = CType(Original_FTP_USERNAME,String)
            End If
            If (Original_FTP_PASSWORD Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(178).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(179).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(178).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(179).Value = CType(Original_FTP_PASSWORD,String)
            End If
            If (Original_FTP_REMOTEDIR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(180).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(181).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(180).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(181).Value = CType(Original_FTP_REMOTEDIR,String)
            End If
            If (Original_FTP_LOCKFROMFILENAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(182).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(183).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(182).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(183).Value = CType(Original_FTP_LOCKFROMFILENAME,String)
            End If
            If (Original_FTP_LOCKTOFILENAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(184).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(185).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(184).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(185).Value = CType(Original_FTP_LOCKTOFILENAME,String)
            End If
            If (Original_CST_DERN_NUM_FACT_COLISAGE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(186).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(187).Value = CType(Original_CST_DERN_NUM_FACT_COLISAGE.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(186).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(187).Value = Global.System.DBNull.Value
            End If
            If (Original_CST_COL_IDMODEREGLEMENT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(188).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(189).Value = CType(Original_CST_COL_IDMODEREGLEMENT.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(188).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(189).Value = Global.System.DBNull.Value
            End If
            If (Original_CST_FACT_COL_TAXES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(190).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(191).Value = CType(Original_CST_FACT_COL_TAXES.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(190).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(191).Value = Global.System.DBNull.Value
            End If
            If (Original_CST_FACT_COL_PU_COLIS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(192).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(193).Value = CType(Original_CST_FACT_COL_PU_COLIS.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(192).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(193).Value = Global.System.DBNull.Value
            End If
            If (Original_CST_SOC_RCS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(194).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(195).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(194).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(195).Value = CType(Original_CST_SOC_RCS,String)
            End If
            If (Original_CST_SOC_TVAINTRA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(196).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(197).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(196).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(197).Value = CType(Original_CST_SOC_TVAINTRA,String)
            End If
            If (Original_CST_SOC_LICENCE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(198).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(199).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(198).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(199).Value = CType(Original_CST_SOC_LICENCE,String)
            End If
            If (Original_CST_SOC2_RCS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(200).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(201).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(200).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(201).Value = CType(Original_CST_SOC2_RCS,String)
            End If
            If (Original_CST_SOC2_TVAINTRA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(202).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(203).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(202).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(203).Value = CType(Original_CST_SOC2_TVAINTRA,String)
            End If
            If (Original_CST_SOC2_LICENCE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(204).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(205).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(204).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(205).Value = CType(Original_CST_SOC2_LICENCE,String)
            End If
            If (Original_CST_EXPORT_COMPTA_PATH Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(206).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(207).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(206).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(207).Value = CType(Original_CST_EXPORT_COMPTA_PATH,String)
            End If
            If (Original_CST_SOC_COMPTETVA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(208).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(209).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(208).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(209).Value = CType(Original_CST_SOC_COMPTETVA,String)
            End If
            If (Original_CST_SOC_COMPTEPRODUIT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(210).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(211).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(210).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(211).Value = CType(Original_CST_SOC_COMPTEPRODUIT,String)
            End If
            If (Original_CST_SOC_COMPTEBANQUE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(212).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(213).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(212).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(213).Value = CType(Original_CST_SOC_COMPTEBANQUE,String)
            End If
            If (Original_CST_SOC2_COMPTETVA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(214).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(215).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(214).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(215).Value = CType(Original_CST_SOC2_COMPTETVA,String)
            End If
            If (Original_CST_SOC2_COMPTEPRODUIT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(216).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(217).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(216).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(217).Value = CType(Original_CST_SOC2_COMPTEPRODUIT,String)
            End If
            If (Original_CST_SOC2_COMPTEBANQUE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(218).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(219).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(218).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(219).Value = CType(Original_CST_SOC2_COMPTEBANQUE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(220).Value = CType(Original_CST_ID,Short)
            If (Original_CST_SOC2_COMPTEPRODUIT_COL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(221).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(222).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(221).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(222).Value = CType(Original_CST_SOC2_COMPTEPRODUIT_COL,String)
            End If
            If (Original_CST_EDI_HOST Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(223).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(224).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(223).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(224).Value = CType(Original_CST_EDI_HOST,String)
            End If
            If (Original_CST_EDI_PORT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(225).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(226).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(225).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(226).Value = CType(Original_CST_EDI_PORT,String)
            End If
            If (Original_CST_EDI_FROM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(227).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(228).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(227).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(228).Value = CType(Original_CST_EDI_FROM,String)
            End If
            If (Original_CST_EDI_TEMP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(229).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(230).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(229).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(230).Value = CType(Original_CST_EDI_TEMP,String)
            End If
            If (Original_CST_SRVCE_PATH Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(231).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(232).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(231).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(232).Value = CType(Original_CST_SRVCE_PATH,String)
            End If
            If (Original_CST_SRVCE_NBSEC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(233).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(234).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(233).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(234).Value = CType(Original_CST_SRVCE_NBSEC,String)
            End If
            If (Original_CST_SRVCE_PATHERROR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(235).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(236).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(235).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(236).Value = CType(Original_CST_SRVCE_PATHERROR,String)
            End If
            If (Original_CST_DERN_NUM_FACT_HBV.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(237).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(238).Value = CType(Original_CST_DERN_NUM_FACT_HBV.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(237).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(238).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CST_SOC_NOMSOC As String,  _
                    ByVal CST_SOC_ADRESSE_RUE1 As String,  _
                    ByVal CST_SOC_ADRESSE_RUE2 As String,  _
                    ByVal CST_SOC_ADRESSE_CP As String,  _
                    ByVal CST_SOC_ADRESSE_VILLE As String,  _
                    ByVal CST_SOC_TEL As String,  _
                    ByVal CST_SOC_FAX As String,  _
                    ByVal CST_SOC_PORT As String,  _
                    ByVal CST_SOC_EMAIL As String,  _
                    ByVal CST_FAX_PAGE_GARDE As String,  _
                    ByVal CST_FAX_ENVOI_PAGE_GARDE As Global.System.Nullable(Of Boolean),  _
                    ByVal CST_FAX_SERVERNAME As String,  _
                    ByVal CST_DERN_NUM_CMD_CLT As Global.System.Nullable(Of Integer),  _
                    ByVal CST_DERN_NUM_SCMD As Global.System.Nullable(Of Integer),  _
                    ByVal CST_DERN_NUM_BA As Global.System.Nullable(Of Integer),  _
                    ByVal CST_VERSION_BD As String,  _
                    ByVal CST_FAX_PREFIX As String,  _
                    ByVal CST_TX_COMMISSION As Global.System.Nullable(Of Single),  _
                    ByVal CST_DERN_NUM_FACTCOM As Global.System.Nullable(Of Integer),  _
                    ByVal CST_PATH_FACTCOM As String,  _
                    ByVal CST_DERN_NUM_FACT_TRP As Global.System.Nullable(Of Integer),  _
                    ByVal CST_TAXES_TRP As Global.System.Nullable(Of Double),  _
                    ByVal CST_PATH_FACTTRP As String,  _
                    ByVal CST_TRP_IDMODEREGLEMENT As String,  _
                    ByVal CST_SOC2_NOMSOC As String,  _
                    ByVal CST_SOC2_ADRESSE_RUE1 As String,  _
                    ByVal CST_SOC2_ADRESSE_RUE2 As String,  _
                    ByVal CST_SOC2_ADRESSE_CP As String,  _
                    ByVal CST_SOC2_ADRESSE_VILLE As String,  _
                    ByVal CST_SOC2_TEL As String,  _
                    ByVal CST_SOC2_FAX As String,  _
                    ByVal CST_SOC2_EMAIL As String,  _
                    ByVal CST_SOC2_PORT As String,  _
                    ByVal CST_PLTFRM_NOM As String,  _
                    ByVal CST_PLTFRM_RUE1 As String,  _
                    ByVal CST_PLTFRM_RUE2 As String,  _
                    ByVal CST_PLTFRM_CP As String,  _
                    ByVal CST_PLTFRM_VILLE As String,  _
                    ByVal CST_PLTFRM_TEL As String,  _
                    ByVal CST_PLTFRM_FAX As String,  _
                    ByVal CST_PLTFRM_EMAIL As String,  _
                    ByVal CST_PLTFRM_PORT As String,  _
                    ByVal CST_TRP_TXGAZOLE As Global.System.Nullable(Of Double),  _
                    ByVal CST_PU_PALL_PREP As Global.System.Nullable(Of Double),  _
                    ByVal CST_PU_PALL_NONPREP As Global.System.Nullable(Of Double),  _
                    ByVal FTP_HOSTNAME As String,  _
                    ByVal FTP_USERNAME As String,  _
                    ByVal FTP_PASSWORD As String,  _
                    ByVal FTP_REMOTEDIR As String,  _
                    ByVal FTP_LOCKFROMFILENAME As String,  _
                    ByVal FTP_LOCKTOFILENAME As String,  _
                    ByVal CST_DERN_NUM_FACT_COLISAGE As Global.System.Nullable(Of Short),  _
                    ByVal CST_COL_IDMODEREGLEMENT As Global.System.Nullable(Of Short),  _
                    ByVal CST_FACT_COL_TAXES As Global.System.Nullable(Of Double),  _
                    ByVal CST_FACT_COL_PU_COLIS As Global.System.Nullable(Of Double),  _
                    ByVal CST_SOC_RCS As String,  _
                    ByVal CST_SOC_TVAINTRA As String,  _
                    ByVal CST_SOC_LICENCE As String,  _
                    ByVal CST_SOC2_RCS As String,  _
                    ByVal CST_SOC2_TVAINTRA As String,  _
                    ByVal CST_SOC2_LICENCE As String,  _
                    ByVal CST_EXPORT_COMPTA_PATH As String,  _
                    ByVal CST_SOC_COMPTETVA As String,  _
                    ByVal CST_SOC_COMPTEPRODUIT As String,  _
                    ByVal CST_SOC_COMPTEBANQUE As String,  _
                    ByVal CST_SOC2_COMPTETVA As String,  _
                    ByVal CST_SOC2_COMPTEPRODUIT As String,  _
                    ByVal CST_SOC2_COMPTEBANQUE As String,  _
                    ByVal CST_SOC2_COMPTEPRODUIT_COL As String,  _
                    ByVal CST_EDI_HOST As String,  _
                    ByVal CST_EDI_PORT As String,  _
                    ByVal CST_EDI_FROM As String,  _
                    ByVal CST_EDI_TEMP As String,  _
                    ByVal CST_SRVCE_PATH As String,  _
                    ByVal CST_SRVCE_NBSEC As String,  _
                    ByVal CST_SRVCE_PATHERROR As String,  _
                    ByVal CST_DERN_NUM_FACT_HBV As Global.System.Nullable(Of Integer),  _
                    ByVal CST_FTPEDI_USER As String,  _
                    ByVal CST_FTPEDI_SRV As String,  _
                    ByVal CST_FTPEDI_PWD As String,  _
                    ByVal CST_FTPEDI_PORT As String,  _
                    ByVal CST_FTPEDI_REP As String,  _
                    ByVal CST_FTPEDI_REPLOCAL As String,  _
                    ByVal Original_CST_SOC_NOMSOC As String,  _
                    ByVal Original_CST_SOC_ADRESSE_RUE1 As String,  _
                    ByVal Original_CST_SOC_ADRESSE_RUE2 As String,  _
                    ByVal Original_CST_SOC_ADRESSE_CP As String,  _
                    ByVal Original_CST_SOC_ADRESSE_VILLE As String,  _
                    ByVal Original_CST_SOC_TEL As String,  _
                    ByVal Original_CST_SOC_FAX As String,  _
                    ByVal Original_CST_SOC_PORT As String,  _
                    ByVal Original_CST_SOC_EMAIL As String,  _
                    ByVal Original_CST_FAX_PAGE_GARDE As String,  _
                    ByVal Original_CST_FAX_ENVOI_PAGE_GARDE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CST_FAX_SERVERNAME As String,  _
                    ByVal Original_CST_DERN_NUM_CMD_CLT As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CST_DERN_NUM_SCMD As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CST_DERN_NUM_BA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CST_VERSION_BD As String,  _
                    ByVal Original_CST_FAX_PREFIX As String,  _
                    ByVal Original_CST_TX_COMMISSION As Global.System.Nullable(Of Single),  _
                    ByVal Original_CST_DERN_NUM_FACTCOM As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CST_PATH_FACTCOM As String,  _
                    ByVal Original_CST_DERN_NUM_FACT_TRP As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CST_TAXES_TRP As Global.System.Nullable(Of Double),  _
                    ByVal Original_CST_PATH_FACTTRP As String,  _
                    ByVal Original_CST_TRP_IDMODEREGLEMENT As String,  _
                    ByVal Original_CST_SOC2_NOMSOC As String,  _
                    ByVal Original_CST_SOC2_ADRESSE_RUE1 As String,  _
                    ByVal Original_CST_SOC2_ADRESSE_RUE2 As String,  _
                    ByVal Original_CST_SOC2_ADRESSE_CP As String,  _
                    ByVal Original_CST_SOC2_ADRESSE_VILLE As String,  _
                    ByVal Original_CST_SOC2_TEL As String,  _
                    ByVal Original_CST_SOC2_FAX As String,  _
                    ByVal Original_CST_SOC2_EMAIL As String,  _
                    ByVal Original_CST_SOC2_PORT As String,  _
                    ByVal Original_CST_PLTFRM_NOM As String,  _
                    ByVal Original_CST_PLTFRM_RUE1 As String,  _
                    ByVal Original_CST_PLTFRM_RUE2 As String,  _
                    ByVal Original_CST_PLTFRM_CP As String,  _
                    ByVal Original_CST_PLTFRM_VILLE As String,  _
                    ByVal Original_CST_PLTFRM_TEL As String,  _
                    ByVal Original_CST_PLTFRM_FAX As String,  _
                    ByVal Original_CST_PLTFRM_EMAIL As String,  _
                    ByVal Original_CST_PLTFRM_PORT As String,  _
                    ByVal Original_CST_TRP_TXGAZOLE As Global.System.Nullable(Of Double),  _
                    ByVal Original_CST_PU_PALL_PREP As Global.System.Nullable(Of Double),  _
                    ByVal Original_CST_PU_PALL_NONPREP As Global.System.Nullable(Of Double),  _
                    ByVal Original_FTP_HOSTNAME As String,  _
                    ByVal Original_FTP_USERNAME As String,  _
                    ByVal Original_FTP_PASSWORD As String,  _
                    ByVal Original_FTP_REMOTEDIR As String,  _
                    ByVal Original_FTP_LOCKFROMFILENAME As String,  _
                    ByVal Original_FTP_LOCKTOFILENAME As String,  _
                    ByVal Original_CST_DERN_NUM_FACT_COLISAGE As Global.System.Nullable(Of Short),  _
                    ByVal Original_CST_COL_IDMODEREGLEMENT As Global.System.Nullable(Of Short),  _
                    ByVal Original_CST_FACT_COL_TAXES As Global.System.Nullable(Of Double),  _
                    ByVal Original_CST_FACT_COL_PU_COLIS As Global.System.Nullable(Of Double),  _
                    ByVal Original_CST_SOC_RCS As String,  _
                    ByVal Original_CST_SOC_TVAINTRA As String,  _
                    ByVal Original_CST_SOC_LICENCE As String,  _
                    ByVal Original_CST_SOC2_RCS As String,  _
                    ByVal Original_CST_SOC2_TVAINTRA As String,  _
                    ByVal Original_CST_SOC2_LICENCE As String,  _
                    ByVal Original_CST_EXPORT_COMPTA_PATH As String,  _
                    ByVal Original_CST_SOC_COMPTETVA As String,  _
                    ByVal Original_CST_SOC_COMPTEPRODUIT As String,  _
                    ByVal Original_CST_SOC_COMPTEBANQUE As String,  _
                    ByVal Original_CST_SOC2_COMPTETVA As String,  _
                    ByVal Original_CST_SOC2_COMPTEPRODUIT As String,  _
                    ByVal Original_CST_SOC2_COMPTEBANQUE As String,  _
                    ByVal Original_CST_ID As Short,  _
                    ByVal Original_CST_SOC2_COMPTEPRODUIT_COL As String,  _
                    ByVal Original_CST_EDI_HOST As String,  _
                    ByVal Original_CST_EDI_PORT As String,  _
                    ByVal Original_CST_EDI_FROM As String,  _
                    ByVal Original_CST_EDI_TEMP As String,  _
                    ByVal Original_CST_SRVCE_PATH As String,  _
                    ByVal Original_CST_SRVCE_NBSEC As String,  _
                    ByVal Original_CST_SRVCE_PATHERROR As String,  _
                    ByVal Original_CST_DERN_NUM_FACT_HBV As Global.System.Nullable(Of Integer)) As Integer
            Return Me.Update(CST_SOC_NOMSOC, CST_SOC_ADRESSE_RUE1, CST_SOC_ADRESSE_RUE2, CST_SOC_ADRESSE_CP, CST_SOC_ADRESSE_VILLE, CST_SOC_TEL, CST_SOC_FAX, CST_SOC_PORT, CST_SOC_EMAIL, CST_FAX_PAGE_GARDE, CST_FAX_ENVOI_PAGE_GARDE, CST_FAX_SERVERNAME, CST_DERN_NUM_CMD_CLT, CST_DERN_NUM_SCMD, CST_DERN_NUM_BA, CST_VERSION_BD, CST_FAX_PREFIX, CST_TX_COMMISSION, CST_DERN_NUM_FACTCOM, CST_PATH_FACTCOM, CST_DERN_NUM_FACT_TRP, CST_TAXES_TRP, CST_PATH_FACTTRP, CST_TRP_IDMODEREGLEMENT, CST_SOC2_NOMSOC, CST_SOC2_ADRESSE_RUE1, CST_SOC2_ADRESSE_RUE2, CST_SOC2_ADRESSE_CP, CST_SOC2_ADRESSE_VILLE, CST_SOC2_TEL, CST_SOC2_FAX, CST_SOC2_EMAIL, CST_SOC2_PORT, CST_PLTFRM_NOM, CST_PLTFRM_RUE1, CST_PLTFRM_RUE2, CST_PLTFRM_CP, CST_PLTFRM_VILLE, CST_PLTFRM_TEL, CST_PLTFRM_FAX, CST_PLTFRM_EMAIL, CST_PLTFRM_PORT, CST_TRP_TXGAZOLE, CST_PU_PALL_PREP, CST_PU_PALL_NONPREP, FTP_HOSTNAME, FTP_USERNAME, FTP_PASSWORD, FTP_REMOTEDIR, FTP_LOCKFROMFILENAME, FTP_LOCKTOFILENAME, CST_DERN_NUM_FACT_COLISAGE, CST_COL_IDMODEREGLEMENT, CST_FACT_COL_TAXES, CST_FACT_COL_PU_COLIS, CST_SOC_RCS, CST_SOC_TVAINTRA, CST_SOC_LICENCE, CST_SOC2_RCS, CST_SOC2_TVAINTRA, CST_SOC2_LICENCE, CST_EXPORT_COMPTA_PATH, CST_SOC_COMPTETVA, CST_SOC_COMPTEPRODUIT, CST_SOC_COMPTEBANQUE, CST_SOC2_COMPTETVA, CST_SOC2_COMPTEPRODUIT, CST_SOC2_COMPTEBANQUE, Original_CST_ID, CST_SOC2_COMPTEPRODUIT_COL, CST_EDI_HOST, CST_EDI_PORT, CST_EDI_FROM, CST_EDI_TEMP, CST_SRVCE_PATH, CST_SRVCE_NBSEC, CST_SRVCE_PATHERROR, CST_DERN_NUM_FACT_HBV, CST_FTPEDI_USER, CST_FTPEDI_SRV, CST_FTPEDI_PWD, CST_FTPEDI_PORT, CST_FTPEDI_REP, CST_FTPEDI_REPLOCAL, Original_CST_SOC_NOMSOC, Original_CST_SOC_ADRESSE_RUE1, Original_CST_SOC_ADRESSE_RUE2, Original_CST_SOC_ADRESSE_CP, Original_CST_SOC_ADRESSE_VILLE, Original_CST_SOC_TEL, Original_CST_SOC_FAX, Original_CST_SOC_PORT, Original_CST_SOC_EMAIL, Original_CST_FAX_PAGE_GARDE, Original_CST_FAX_ENVOI_PAGE_GARDE, Original_CST_FAX_SERVERNAME, Original_CST_DERN_NUM_CMD_CLT, Original_CST_DERN_NUM_SCMD, Original_CST_DERN_NUM_BA, Original_CST_VERSION_BD, Original_CST_FAX_PREFIX, Original_CST_TX_COMMISSION, Original_CST_DERN_NUM_FACTCOM, Original_CST_PATH_FACTCOM, Original_CST_DERN_NUM_FACT_TRP, Original_CST_TAXES_TRP, Original_CST_PATH_FACTTRP, Original_CST_TRP_IDMODEREGLEMENT, Original_CST_SOC2_NOMSOC, Original_CST_SOC2_ADRESSE_RUE1, Original_CST_SOC2_ADRESSE_RUE2, Original_CST_SOC2_ADRESSE_CP, Original_CST_SOC2_ADRESSE_VILLE, Original_CST_SOC2_TEL, Original_CST_SOC2_FAX, Original_CST_SOC2_EMAIL, Original_CST_SOC2_PORT, Original_CST_PLTFRM_NOM, Original_CST_PLTFRM_RUE1, Original_CST_PLTFRM_RUE2, Original_CST_PLTFRM_CP, Original_CST_PLTFRM_VILLE, Original_CST_PLTFRM_TEL, Original_CST_PLTFRM_FAX, Original_CST_PLTFRM_EMAIL, Original_CST_PLTFRM_PORT, Original_CST_TRP_TXGAZOLE, Original_CST_PU_PALL_PREP, Original_CST_PU_PALL_NONPREP, Original_FTP_HOSTNAME, Original_FTP_USERNAME, Original_FTP_PASSWORD, Original_FTP_REMOTEDIR, Original_FTP_LOCKFROMFILENAME, Original_FTP_LOCKTOFILENAME, Original_CST_DERN_NUM_FACT_COLISAGE, Original_CST_COL_IDMODEREGLEMENT, Original_CST_FACT_COL_TAXES, Original_CST_FACT_COL_PU_COLIS, Original_CST_SOC_RCS, Original_CST_SOC_TVAINTRA, Original_CST_SOC_LICENCE, Original_CST_SOC2_RCS, Original_CST_SOC2_TVAINTRA, Original_CST_SOC2_LICENCE, Original_CST_EXPORT_COMPTA_PATH, Original_CST_SOC_COMPTETVA, Original_CST_SOC_COMPTEPRODUIT, Original_CST_SOC_COMPTEBANQUE, Original_CST_SOC2_COMPTETVA, Original_CST_SOC2_COMPTEPRODUIT, Original_CST_SOC2_COMPTEBANQUE, Original_CST_ID, Original_CST_SOC2_COMPTEPRODUIT_COL, Original_CST_EDI_HOST, Original_CST_EDI_PORT, Original_CST_EDI_FROM, Original_CST_EDI_TEMP, Original_CST_SRVCE_PATH, Original_CST_SRVCE_NBSEC, Original_CST_SRVCE_PATHERROR, Original_CST_DERN_NUM_FACT_HBV)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function getNextCode_CMD_CLT() As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(2)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class MVT_STOCKTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "MVT_STOCK"
            tableMapping.ColumnMappings.Add("STK_ID", "STK_ID")
            tableMapping.ColumnMappings.Add("STK_PRD_ID", "STK_PRD_ID")
            tableMapping.ColumnMappings.Add("STK_DATE", "STK_DATE")
            tableMapping.ColumnMappings.Add("STK_TYPE", "STK_TYPE")
            tableMapping.ColumnMappings.Add("STK_REF_ID", "STK_REF_ID")
            tableMapping.ColumnMappings.Add("STK_LIB", "STK_LIB")
            tableMapping.ColumnMappings.Add("STK_QTE", "STK_QTE")
            tableMapping.ColumnMappings.Add("STK_COMM", "STK_COMM")
            tableMapping.ColumnMappings.Add("STK_ETAT", "STK_ETAT")
            tableMapping.ColumnMappings.Add("STK_IDFACTCOLISAGE", "STK_IDFACTCOLISAGE")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.vini_DB.My.MySettings.Default.ConnectString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     MVT_STOCK.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         MVT_STOCK "
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT     MVT_STOCK.STK_ID, MVT_STOCK.STK_DATE, MVT_STOCK.STK_TYPE, MVT_STOCK.ST"& _ 
                "K_LIB, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MVT_STOCK.STK_QTE / RQ_CONDITIONNEMENT.PAR_VALUE "& _ 
                "AS STK_QTECOLIS, MVT_STOCK.STK_PRD_ID, PRODUIT.PRD_COND_ID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "    MVT_STOCK.STK_QTE, PRODUIT.PRD_CODE, FOURNISSEUR.FRN_NOM, FOURNISSEUR.FRN_RS"& _ 
                ", PRODUIT.PRD_LIBELLE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      RQ_CONDITIONNEMENT.PAR_VALUE AS C"& _ 
                "OND, FOURNISSEUR.FRN_CODE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         MVT_STOCK INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "    PRODUIT ON MVT_STOCK.STK_PRD_ID = PRODUIT.PRD_ID INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "       FOURNISSEUR ON PRODUIT.PRD_FRN_ID = FOURNISSEUR.FRN_ID INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                RQ_CONDITIONNEMENT ON PRODUIT.PRD_COND_ID = RQ_CONDITIONNEMENT.P"& _ 
                "AR_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (MVT_STOCK.STK_IDFACTCOLISAGE = 0) AND (MVT_STOCK.STK_DATE >= ?"& _ 
                ") AND (MVT_STOCK.STK_DATE <= ?) AND (PRODUIT.PRD_STOCK = 1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "        (FOURNISSEUR.FRN_CODE = ?)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY FOURNISSEUR.FRN_CODE, MVT_STOCK.STK"& _ 
                "_DATE, MVT_STOCK.STK_TYPE, PRODUIT.PRD_CODE"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("STK_DATE", Global.System.Data.OleDb.OleDbType.DBTimeStamp, 8, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "STK_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("STK_DATE1", Global.System.Data.OleDb.OleDbType.DBTimeStamp, 8, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "STK_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FRN_CODE", Global.System.Data.OleDb.OleDbType.WChar, 50, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRN_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsVinicom.MVT_STOCKDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsVinicom.MVT_STOCKDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsVinicom.MVT_STOCKDataTable = New dsVinicom.MVT_STOCKDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillForRECAPCOLISAGE(ByVal dataTable As dsVinicom.MVT_STOCKDataTable, ByVal STK_DATE As Global.System.Nullable(Of Date), ByVal STK_DATE1 As Global.System.Nullable(Of Date), ByVal FRN_CODE As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (STK_DATE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(STK_DATE.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (STK_DATE1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(STK_DATE1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (FRN_CODE Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(FRN_CODE,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataForRECAPCOLISAGE(ByVal STK_DATE As Global.System.Nullable(Of Date), ByVal STK_DATE1 As Global.System.Nullable(Of Date), ByVal FRN_CODE As String) As dsVinicom.MVT_STOCKDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (STK_DATE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(STK_DATE.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (STK_DATE1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(STK_DATE1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (FRN_CODE Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(FRN_CODE,String)
            End If
            Dim dataTable As dsVinicom.MVT_STOCKDataTable = New dsVinicom.MVT_STOCKDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FRN_COMMTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FRN_COMM"
            tableMapping.ColumnMappings.Add("FRNC_FRN_ID", "FRNC_FRN_ID")
            tableMapping.ColumnMappings.Add("FRNC_TYPE_CLIENT", "FRNC_TYPE_CLIENT")
            tableMapping.ColumnMappings.Add("FRNC_TX_COMM", "FRNC_TX_COMM")
            tableMapping.ColumnMappings.Add("FRNC_ID", "FRNC_ID")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [FRN_COMM] WHERE (([FRNC_ID] = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FRNC_ID", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRNC_ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [FRN_COMM] ([FRNC_FRN_ID], [FRNC_TYPE_CLIENT], [FRNC_TX_COMM]) VALUES"& _ 
                " (?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FRNC_FRN_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRNC_FRN_ID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FRNC_TYPE_CLIENT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRNC_TYPE_CLIENT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FRNC_TX_COMM", Global.System.Data.OleDb.OleDbType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(5,Byte), CType(2,Byte), "FRNC_TX_COMM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [FRN_COMM] SET [FRNC_FRN_ID] = ?, [FRNC_TYPE_CLIENT] = ?, [FRNC_TX_COMM] ="& _ 
                " ? WHERE (([FRNC_ID] = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FRNC_FRN_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRNC_FRN_ID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FRNC_TYPE_CLIENT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRNC_TYPE_CLIENT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FRNC_TX_COMM", Global.System.Data.OleDb.OleDbType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(5,Byte), CType(2,Byte), "FRNC_TX_COMM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FRNC_ID", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRNC_ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.vini_DB.My.MySettings.Default.ConnectString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(5) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     FRNC_FRN_ID, FRNC_TYPE_CLIENT, FRNC_TX_COMM, FRNC_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         FRN"& _ 
                "_COMM"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM FRN_COMM"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (FRNC_FRN_ID = ?)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FRNC_FRN_ID", Global.System.Data.OleDb.OleDbType.[Integer], 4, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRNC_FRN_ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._commandCollection(2) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT FRNC_FRN_ID, FRNC_ID, FRNC_TX_COMM, FRNC_TYPE_CLIENT FROM FRN_COMM WHERE ("& _ 
                "FRNC_FRN_ID = ?)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FRNC_FRN_ID", Global.System.Data.OleDb.OleDbType.[Integer], 4, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRNC_FRN_ID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT FRNC_FRN_ID, FRNC_ID, FRNC_TX_COMM, FRNC_TYPE_CLIENT FROM FRN_COMM WHERE ("& _ 
                "FRNC_FRN_ID = ?) AND (FRNC_TYPE_CLIENT = ?)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FRNC_FRN_ID", Global.System.Data.OleDb.OleDbType.[Integer], 4, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRNC_FRN_ID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FRNC_TYPE_CLIENT", Global.System.Data.OleDb.OleDbType.WChar, 10, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRNC_TYPE_CLIENT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT FRNC_FRN_ID, FRNC_ID, FRNC_TX_COMM, FRNC_TYPE_CLIENT FROM FRN_COMM WHERE ("& _ 
                "FRNC_FRN_ID = ?)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FRNC_FRN_ID", Global.System.Data.OleDb.OleDbType.[Integer], 4, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRNC_FRN_ID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(5) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT     MAX(FRNC_ID) AS FRNC_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         FRN_COMM"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsVinicom.FRN_COMMDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsVinicom.FRN_COMMDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsVinicom.FRN_COMMDataTable = New dsVinicom.FRN_COMMDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByFRNID(ByVal dataTable As dsVinicom.FRN_COMMDataTable, ByVal FRNC_FRN_ID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FRNC_FRN_ID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByFRNID(ByVal FRNC_FRN_ID As Integer) As dsVinicom.FRN_COMMDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FRNC_FRN_ID,Integer)
            Dim dataTable As dsVinicom.FRN_COMMDataTable = New dsVinicom.FRN_COMMDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByFRNID_TYPECLT(ByVal dataTable As dsVinicom.FRN_COMMDataTable, ByVal FRNC_FRN_ID As Integer, ByVal FRNC_TYPE_CLIENT As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FRNC_FRN_ID,Integer)
            If (FRNC_TYPE_CLIENT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FRNC_TYPE_CLIENT")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FRNC_TYPE_CLIENT,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByFRNID_TYPECLT(ByVal FRNC_FRN_ID As Integer, ByVal FRNC_TYPE_CLIENT As String) As dsVinicom.FRN_COMMDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FRNC_FRN_ID,Integer)
            If (FRNC_TYPE_CLIENT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FRNC_TYPE_CLIENT")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FRNC_TYPE_CLIENT,String)
            End If
            Dim dataTable As dsVinicom.FRN_COMMDataTable = New dsVinicom.FRN_COMMDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByID(ByVal dataTable As dsVinicom.FRN_COMMDataTable, ByVal FRNC_FRN_ID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FRNC_FRN_ID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByID(ByVal FRNC_FRN_ID As Integer) As dsVinicom.FRN_COMMDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FRNC_FRN_ID,Integer)
            Dim dataTable As dsVinicom.FRN_COMMDataTable = New dsVinicom.FRN_COMMDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsVinicom.FRN_COMMDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsVinicom) As Integer
            Return Me.Adapter.Update(dataSet, "FRN_COMM")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_FRNC_ID As Short) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_FRNC_ID,Short)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal FRNC_FRN_ID As Integer, ByVal FRNC_TYPE_CLIENT As String, ByVal FRNC_TX_COMM As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(FRNC_FRN_ID,Integer)
            If (FRNC_TYPE_CLIENT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FRNC_TYPE_CLIENT")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(FRNC_TYPE_CLIENT,String)
            End If
            If (FRNC_TX_COMM.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(FRNC_TX_COMM.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FRNC_FRN_ID As Integer, ByVal FRNC_TYPE_CLIENT As String, ByVal FRNC_TX_COMM As Global.System.Nullable(Of Decimal), ByVal Original_FRNC_ID As Short) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(FRNC_FRN_ID,Integer)
            If (FRNC_TYPE_CLIENT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FRNC_TYPE_CLIENT")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FRNC_TYPE_CLIENT,String)
            End If
            If (FRNC_TX_COMM.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(FRNC_TX_COMM.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_FRNC_ID,Short)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteFromFRN_ID(ByVal FRNC_FRN_ID As Integer) As Integer
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(FRNC_FRN_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function getMaxID() As Global.System.Nullable(Of Short)
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(5)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Short)()
            Else
                Return New Global.System.Nullable(Of Short)(CType(returnValue,Short))
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TRANSPORTEURTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TRANSPORTEUR"
            tableMapping.ColumnMappings.Add("TRP_ID", "TRP_ID")
            tableMapping.ColumnMappings.Add("TRP_CODE", "TRP_CODE")
            tableMapping.ColumnMappings.Add("TRP_NOM", "TRP_NOM")
            tableMapping.ColumnMappings.Add("TRP_LIV_RUE1", "TRP_LIV_RUE1")
            tableMapping.ColumnMappings.Add("TRP_LIV_RUE2", "TRP_LIV_RUE2")
            tableMapping.ColumnMappings.Add("TRP_LIV_CP", "TRP_LIV_CP")
            tableMapping.ColumnMappings.Add("TRP_LIV_VILLE", "TRP_LIV_VILLE")
            tableMapping.ColumnMappings.Add("TRP_LIV_TEL", "TRP_LIV_TEL")
            tableMapping.ColumnMappings.Add("TRP_LIV_FAX", "TRP_LIV_FAX")
            tableMapping.ColumnMappings.Add("TRP_LIV_PORT", "TRP_LIV_PORT")
            tableMapping.ColumnMappings.Add("TRP_LIV_EMAIL", "TRP_LIV_EMAIL")
            tableMapping.ColumnMappings.Add("TRP_DEFAUT", "TRP_DEFAUT")
            tableMapping.ColumnMappings.Add("TRP_COMM", "TRP_COMM")
            tableMapping.ColumnMappings.Add("TRP_LICENCE", "TRP_LICENCE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [TRANSPORTEUR] WHERE (([TRP_ID] = ?) AND ([TRP_CODE] = ?) AND ([TRP_N"& _ 
                "OM] = ?) AND ((? = 1 AND [TRP_LIV_RUE1] IS NULL) OR ([TRP_LIV_RUE1] = ?)) AND (("& _ 
                "? = 1 AND [TRP_LIV_RUE2] IS NULL) OR ([TRP_LIV_RUE2] = ?)) AND ((? = 1 AND [TRP_"& _ 
                "LIV_CP] IS NULL) OR ([TRP_LIV_CP] = ?)) AND ((? = 1 AND [TRP_LIV_VILLE] IS NULL)"& _ 
                " OR ([TRP_LIV_VILLE] = ?)) AND ((? = 1 AND [TRP_LIV_TEL] IS NULL) OR ([TRP_LIV_T"& _ 
                "EL] = ?)) AND ((? = 1 AND [TRP_LIV_FAX] IS NULL) OR ([TRP_LIV_FAX] = ?)) AND ((?"& _ 
                " = 1 AND [TRP_LIV_PORT] IS NULL) OR ([TRP_LIV_PORT] = ?)) AND ((? = 1 AND [TRP_L"& _ 
                "IV_EMAIL] IS NULL) OR ([TRP_LIV_EMAIL] = ?)) AND ((? = 1 AND [TRP_DEFAUT] IS NUL"& _ 
                "L) OR ([TRP_DEFAUT] = ?)) AND ((? = 1 AND [TRP_COMM] IS NULL) OR ([TRP_COMM] = ?"& _ 
                ")) AND ((? = 1 AND [TRP_LICENCE] IS NULL) OR ([TRP_LICENCE] = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TRP_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TRP_CODE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TRP_NOM", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_NOM", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TRP_LIV_RUE1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_RUE1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TRP_LIV_RUE1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_RUE1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TRP_LIV_RUE2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_RUE2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TRP_LIV_RUE2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_RUE2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TRP_LIV_CP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_CP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TRP_LIV_CP", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_CP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TRP_LIV_VILLE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_VILLE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TRP_LIV_VILLE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_VILLE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TRP_LIV_TEL", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_TEL", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TRP_LIV_TEL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_TEL", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TRP_LIV_FAX", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_FAX", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TRP_LIV_FAX", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_FAX", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TRP_LIV_PORT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_PORT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TRP_LIV_PORT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_PORT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TRP_LIV_EMAIL", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_EMAIL", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TRP_LIV_EMAIL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_EMAIL", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TRP_DEFAUT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_DEFAUT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TRP_DEFAUT", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_DEFAUT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TRP_COMM", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_COMM", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TRP_COMM", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_COMM", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TRP_LICENCE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LICENCE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TRP_LICENCE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LICENCE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [TRANSPORTEUR] ([TRP_CODE], [TRP_NOM], [TRP_LIV_RUE1], [TRP_LIV_RUE2]"& _ 
                ", [TRP_LIV_CP], [TRP_LIV_VILLE], [TRP_LIV_TEL], [TRP_LIV_FAX], [TRP_LIV_PORT], ["& _ 
                "TRP_LIV_EMAIL], [TRP_DEFAUT], [TRP_COMM], [TRP_LICENCE]) VALUES (?, ?, ?, ?, ?, "& _ 
                "?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TRP_CODE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TRP_NOM", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_NOM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TRP_LIV_RUE1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_RUE1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TRP_LIV_RUE2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_RUE2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TRP_LIV_CP", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_CP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TRP_LIV_VILLE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_VILLE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TRP_LIV_TEL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_TEL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TRP_LIV_FAX", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_FAX", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TRP_LIV_PORT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_PORT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TRP_LIV_EMAIL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_EMAIL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TRP_DEFAUT", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_DEFAUT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TRP_COMM", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_COMM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TRP_LICENCE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LICENCE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [TRANSPORTEUR] SET [TRP_CODE] = ?, [TRP_NOM] = ?, [TRP_LIV_RUE1] = ?, [TRP"& _ 
                "_LIV_RUE2] = ?, [TRP_LIV_CP] = ?, [TRP_LIV_VILLE] = ?, [TRP_LIV_TEL] = ?, [TRP_L"& _ 
                "IV_FAX] = ?, [TRP_LIV_PORT] = ?, [TRP_LIV_EMAIL] = ?, [TRP_DEFAUT] = ?, [TRP_COM"& _ 
                "M] = ?, [TRP_LICENCE] = ? WHERE (([TRP_ID] = ?) AND ([TRP_CODE] = ?) AND ([TRP_N"& _ 
                "OM] = ?) AND ((? = 1 AND [TRP_LIV_RUE1] IS NULL) OR ([TRP_LIV_RUE1] = ?)) AND (("& _ 
                "? = 1 AND [TRP_LIV_RUE2] IS NULL) OR ([TRP_LIV_RUE2] = ?)) AND ((? = 1 AND [TRP_"& _ 
                "LIV_CP] IS NULL) OR ([TRP_LIV_CP] = ?)) AND ((? = 1 AND [TRP_LIV_VILLE] IS NULL)"& _ 
                " OR ([TRP_LIV_VILLE] = ?)) AND ((? = 1 AND [TRP_LIV_TEL] IS NULL) OR ([TRP_LIV_T"& _ 
                "EL] = ?)) AND ((? = 1 AND [TRP_LIV_FAX] IS NULL) OR ([TRP_LIV_FAX] = ?)) AND ((?"& _ 
                " = 1 AND [TRP_LIV_PORT] IS NULL) OR ([TRP_LIV_PORT] = ?)) AND ((? = 1 AND [TRP_L"& _ 
                "IV_EMAIL] IS NULL) OR ([TRP_LIV_EMAIL] = ?)) AND ((? = 1 AND [TRP_DEFAUT] IS NUL"& _ 
                "L) OR ([TRP_DEFAUT] = ?)) AND ((? = 1 AND [TRP_COMM] IS NULL) OR ([TRP_COMM] = ?"& _ 
                ")) AND ((? = 1 AND [TRP_LICENCE] IS NULL) OR ([TRP_LICENCE] = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TRP_CODE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TRP_NOM", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_NOM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TRP_LIV_RUE1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_RUE1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TRP_LIV_RUE2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_RUE2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TRP_LIV_CP", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_CP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TRP_LIV_VILLE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_VILLE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TRP_LIV_TEL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_TEL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TRP_LIV_FAX", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_FAX", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TRP_LIV_PORT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_PORT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TRP_LIV_EMAIL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_EMAIL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TRP_DEFAUT", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_DEFAUT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TRP_COMM", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_COMM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TRP_LICENCE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LICENCE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TRP_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TRP_CODE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TRP_NOM", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_NOM", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TRP_LIV_RUE1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_RUE1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TRP_LIV_RUE1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_RUE1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TRP_LIV_RUE2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_RUE2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TRP_LIV_RUE2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_RUE2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TRP_LIV_CP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_CP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TRP_LIV_CP", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_CP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TRP_LIV_VILLE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_VILLE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TRP_LIV_VILLE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_VILLE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TRP_LIV_TEL", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_TEL", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TRP_LIV_TEL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_TEL", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TRP_LIV_FAX", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_FAX", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TRP_LIV_FAX", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_FAX", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TRP_LIV_PORT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_PORT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TRP_LIV_PORT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_PORT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TRP_LIV_EMAIL", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_EMAIL", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TRP_LIV_EMAIL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LIV_EMAIL", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TRP_DEFAUT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_DEFAUT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TRP_DEFAUT", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_DEFAUT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TRP_COMM", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_COMM", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TRP_COMM", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_COMM", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TRP_LICENCE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LICENCE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TRP_LICENCE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRP_LICENCE", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.vini_DB.My.MySettings.Default.ConnectString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     TRANSPORTEUR.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         TRANSPORTEUR"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsVinicom.TRANSPORTEURDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsVinicom.TRANSPORTEURDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsVinicom.TRANSPORTEURDataTable = New dsVinicom.TRANSPORTEURDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsVinicom.TRANSPORTEURDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsVinicom) As Integer
            Return Me.Adapter.Update(dataSet, "TRANSPORTEUR")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_TRP_ID As Integer, ByVal Original_TRP_CODE As String, ByVal Original_TRP_NOM As String, ByVal Original_TRP_LIV_RUE1 As String, ByVal Original_TRP_LIV_RUE2 As String, ByVal Original_TRP_LIV_CP As String, ByVal Original_TRP_LIV_VILLE As String, ByVal Original_TRP_LIV_TEL As String, ByVal Original_TRP_LIV_FAX As String, ByVal Original_TRP_LIV_PORT As String, ByVal Original_TRP_LIV_EMAIL As String, ByVal Original_TRP_DEFAUT As Global.System.Nullable(Of Boolean), ByVal Original_TRP_COMM As String, ByVal Original_TRP_LICENCE As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_TRP_ID,Integer)
            If (Original_TRP_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TRP_CODE")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_TRP_CODE,String)
            End If
            If (Original_TRP_NOM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TRP_NOM")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_TRP_NOM,String)
            End If
            If (Original_TRP_LIV_RUE1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_TRP_LIV_RUE1,String)
            End If
            If (Original_TRP_LIV_RUE2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_TRP_LIV_RUE2,String)
            End If
            If (Original_TRP_LIV_CP Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_TRP_LIV_CP,String)
            End If
            If (Original_TRP_LIV_VILLE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_TRP_LIV_VILLE,String)
            End If
            If (Original_TRP_LIV_TEL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_TRP_LIV_TEL,String)
            End If
            If (Original_TRP_LIV_FAX Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_TRP_LIV_FAX,String)
            End If
            If (Original_TRP_LIV_PORT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_TRP_LIV_PORT,String)
            End If
            If (Original_TRP_LIV_EMAIL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_TRP_LIV_EMAIL,String)
            End If
            If (Original_TRP_DEFAUT.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_TRP_DEFAUT.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_TRP_COMM Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_TRP_COMM,String)
            End If
            If (Original_TRP_LICENCE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_TRP_LICENCE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal TRP_CODE As String, ByVal TRP_NOM As String, ByVal TRP_LIV_RUE1 As String, ByVal TRP_LIV_RUE2 As String, ByVal TRP_LIV_CP As String, ByVal TRP_LIV_VILLE As String, ByVal TRP_LIV_TEL As String, ByVal TRP_LIV_FAX As String, ByVal TRP_LIV_PORT As String, ByVal TRP_LIV_EMAIL As String, ByVal TRP_DEFAUT As Global.System.Nullable(Of Boolean), ByVal TRP_COMM As String, ByVal TRP_LICENCE As String) As Integer
            If (TRP_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TRP_CODE")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(TRP_CODE,String)
            End If
            If (TRP_NOM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TRP_NOM")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(TRP_NOM,String)
            End If
            If (TRP_LIV_RUE1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(TRP_LIV_RUE1,String)
            End If
            If (TRP_LIV_RUE2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(TRP_LIV_RUE2,String)
            End If
            If (TRP_LIV_CP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(TRP_LIV_CP,String)
            End If
            If (TRP_LIV_VILLE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(TRP_LIV_VILLE,String)
            End If
            If (TRP_LIV_TEL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(TRP_LIV_TEL,String)
            End If
            If (TRP_LIV_FAX Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(TRP_LIV_FAX,String)
            End If
            If (TRP_LIV_PORT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(TRP_LIV_PORT,String)
            End If
            If (TRP_LIV_EMAIL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(TRP_LIV_EMAIL,String)
            End If
            If (TRP_DEFAUT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(TRP_DEFAUT.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (TRP_COMM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(TRP_COMM,String)
            End If
            If (TRP_LICENCE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(TRP_LICENCE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal TRP_CODE As String,  _
                    ByVal TRP_NOM As String,  _
                    ByVal TRP_LIV_RUE1 As String,  _
                    ByVal TRP_LIV_RUE2 As String,  _
                    ByVal TRP_LIV_CP As String,  _
                    ByVal TRP_LIV_VILLE As String,  _
                    ByVal TRP_LIV_TEL As String,  _
                    ByVal TRP_LIV_FAX As String,  _
                    ByVal TRP_LIV_PORT As String,  _
                    ByVal TRP_LIV_EMAIL As String,  _
                    ByVal TRP_DEFAUT As Global.System.Nullable(Of Boolean),  _
                    ByVal TRP_COMM As String,  _
                    ByVal TRP_LICENCE As String,  _
                    ByVal Original_TRP_ID As Integer,  _
                    ByVal Original_TRP_CODE As String,  _
                    ByVal Original_TRP_NOM As String,  _
                    ByVal Original_TRP_LIV_RUE1 As String,  _
                    ByVal Original_TRP_LIV_RUE2 As String,  _
                    ByVal Original_TRP_LIV_CP As String,  _
                    ByVal Original_TRP_LIV_VILLE As String,  _
                    ByVal Original_TRP_LIV_TEL As String,  _
                    ByVal Original_TRP_LIV_FAX As String,  _
                    ByVal Original_TRP_LIV_PORT As String,  _
                    ByVal Original_TRP_LIV_EMAIL As String,  _
                    ByVal Original_TRP_DEFAUT As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TRP_COMM As String,  _
                    ByVal Original_TRP_LICENCE As String) As Integer
            If (TRP_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TRP_CODE")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(TRP_CODE,String)
            End If
            If (TRP_NOM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TRP_NOM")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(TRP_NOM,String)
            End If
            If (TRP_LIV_RUE1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(TRP_LIV_RUE1,String)
            End If
            If (TRP_LIV_RUE2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(TRP_LIV_RUE2,String)
            End If
            If (TRP_LIV_CP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(TRP_LIV_CP,String)
            End If
            If (TRP_LIV_VILLE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(TRP_LIV_VILLE,String)
            End If
            If (TRP_LIV_TEL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(TRP_LIV_TEL,String)
            End If
            If (TRP_LIV_FAX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(TRP_LIV_FAX,String)
            End If
            If (TRP_LIV_PORT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(TRP_LIV_PORT,String)
            End If
            If (TRP_LIV_EMAIL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(TRP_LIV_EMAIL,String)
            End If
            If (TRP_DEFAUT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(TRP_DEFAUT.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (TRP_COMM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(TRP_COMM,String)
            End If
            If (TRP_LICENCE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(TRP_LICENCE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_TRP_ID,Integer)
            If (Original_TRP_CODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TRP_CODE")
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_TRP_CODE,String)
            End If
            If (Original_TRP_NOM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TRP_NOM")
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_TRP_NOM,String)
            End If
            If (Original_TRP_LIV_RUE1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_TRP_LIV_RUE1,String)
            End If
            If (Original_TRP_LIV_RUE2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_TRP_LIV_RUE2,String)
            End If
            If (Original_TRP_LIV_CP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_TRP_LIV_CP,String)
            End If
            If (Original_TRP_LIV_VILLE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_TRP_LIV_VILLE,String)
            End If
            If (Original_TRP_LIV_TEL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_TRP_LIV_TEL,String)
            End If
            If (Original_TRP_LIV_FAX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_TRP_LIV_FAX,String)
            End If
            If (Original_TRP_LIV_PORT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_TRP_LIV_PORT,String)
            End If
            If (Original_TRP_LIV_EMAIL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_TRP_LIV_EMAIL,String)
            End If
            If (Original_TRP_DEFAUT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_TRP_DEFAUT.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Original_TRP_COMM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_TRP_COMM,String)
            End If
            If (Original_TRP_LICENCE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_TRP_LICENCE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FACTCOMTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FACTCOM"
            tableMapping.ColumnMappings.Add("FCT_ID", "FCT_ID")
            tableMapping.ColumnMappings.Add("FCT_CODE", "FCT_CODE")
            tableMapping.ColumnMappings.Add("FCT_ETAT", "FCT_ETAT")
            tableMapping.ColumnMappings.Add("FCT_DATE", "FCT_DATE")
            tableMapping.ColumnMappings.Add("FCT_PERIODE", "FCT_PERIODE")
            tableMapping.ColumnMappings.Add("FCT_TOTAL_HT", "FCT_TOTAL_HT")
            tableMapping.ColumnMappings.Add("FCT_TOTAL_TTC", "FCT_TOTAL_TTC")
            tableMapping.ColumnMappings.Add("FCT_MONTANT_REGLEMENT", "FCT_MONTANT_REGLEMENT")
            tableMapping.ColumnMappings.Add("FCT_DATE_REGLEMENT", "FCT_DATE_REGLEMENT")
            tableMapping.ColumnMappings.Add("FCT_REF_REGLEMENT", "FCT_REF_REGLEMENT")
            tableMapping.ColumnMappings.Add("FCT_FRN_ID", "FCT_FRN_ID")
            tableMapping.ColumnMappings.Add("FCT_COM_FACT", "FCT_COM_FACT")
            tableMapping.ColumnMappings.Add("FCT_DATE_STAT", "FCT_DATE_STAT")
            tableMapping.ColumnMappings.Add("FCT_BINTERNET", "FCT_BINTERNET")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [FACTCOM] WHERE (([FCT_ID] = ?) AND ((? = 1 AND [FCT_CODE] IS NULL) O"& _ 
                "R ([FCT_CODE] = ?)) AND ((? = 1 AND [FCT_ETAT] IS NULL) OR ([FCT_ETAT] = ?)) AND"& _ 
                " ((? = 1 AND [FCT_DATE] IS NULL) OR ([FCT_DATE] = ?)) AND ((? = 1 AND [FCT_PERIO"& _ 
                "DE] IS NULL) OR ([FCT_PERIODE] = ?)) AND ((? = 1 AND [FCT_TOTAL_HT] IS NULL) OR "& _ 
                "([FCT_TOTAL_HT] = ?)) AND ((? = 1 AND [FCT_TOTAL_TTC] IS NULL) OR ([FCT_TOTAL_TT"& _ 
                "C] = ?)) AND ((? = 1 AND [FCT_MONTANT_REGLEMENT] IS NULL) OR ([FCT_MONTANT_REGLE"& _ 
                "MENT] = ?)) AND ((? = 1 AND [FCT_DATE_REGLEMENT] IS NULL) OR ([FCT_DATE_REGLEMEN"& _ 
                "T] = ?)) AND ((? = 1 AND [FCT_REF_REGLEMENT] IS NULL) OR ([FCT_REF_REGLEMENT] = "& _ 
                "?)) AND ([FCT_FRN_ID] = ?) AND ((? = 1 AND [FCT_DATE_STAT] IS NULL) OR ([FCT_DAT"& _ 
                "E_STAT] = ?)) AND ((? = 1 AND [FCT_BINTERNET] IS NULL) OR ([FCT_BINTERNET] = ?))"& _ 
                ")"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FCT_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FCT_CODE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_CODE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FCT_CODE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FCT_ETAT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_ETAT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FCT_ETAT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_ETAT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FCT_DATE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FCT_DATE", Global.System.Data.OleDb.OleDbType.DBTimeStamp, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FCT_PERIODE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_PERIODE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FCT_PERIODE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_PERIODE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FCT_TOTAL_HT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_TOTAL_HT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FCT_TOTAL_HT", Global.System.Data.OleDb.OleDbType.Currency, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_TOTAL_HT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FCT_TOTAL_TTC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_TOTAL_TTC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FCT_TOTAL_TTC", Global.System.Data.OleDb.OleDbType.Currency, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_TOTAL_TTC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FCT_MONTANT_REGLEMENT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_MONTANT_REGLEMENT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FCT_MONTANT_REGLEMENT", Global.System.Data.OleDb.OleDbType.Currency, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_MONTANT_REGLEMENT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FCT_DATE_REGLEMENT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_DATE_REGLEMENT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FCT_DATE_REGLEMENT", Global.System.Data.OleDb.OleDbType.DBTimeStamp, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_DATE_REGLEMENT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FCT_REF_REGLEMENT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_REF_REGLEMENT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FCT_REF_REGLEMENT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_REF_REGLEMENT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FCT_FRN_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_FRN_ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FCT_DATE_STAT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_DATE_STAT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FCT_DATE_STAT", Global.System.Data.OleDb.OleDbType.DBTimeStamp, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_DATE_STAT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FCT_BINTERNET", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_BINTERNET", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FCT_BINTERNET", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_BINTERNET", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [FACTCOM] ([FCT_CODE], [FCT_ETAT], [FCT_DATE], [FCT_PERIODE], [FCT_TO"& _ 
                "TAL_HT], [FCT_TOTAL_TTC], [FCT_MONTANT_REGLEMENT], [FCT_DATE_REGLEMENT], [FCT_RE"& _ 
                "F_REGLEMENT], [FCT_FRN_ID], [FCT_COM_FACT], [FCT_DATE_STAT], [FCT_BINTERNET]) VA"& _ 
                "LUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FCT_CODE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FCT_ETAT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_ETAT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FCT_DATE", Global.System.Data.OleDb.OleDbType.DBTimeStamp, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FCT_PERIODE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_PERIODE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FCT_TOTAL_HT", Global.System.Data.OleDb.OleDbType.Currency, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_TOTAL_HT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FCT_TOTAL_TTC", Global.System.Data.OleDb.OleDbType.Currency, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_TOTAL_TTC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FCT_MONTANT_REGLEMENT", Global.System.Data.OleDb.OleDbType.Currency, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_MONTANT_REGLEMENT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FCT_DATE_REGLEMENT", Global.System.Data.OleDb.OleDbType.DBTimeStamp, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_DATE_REGLEMENT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FCT_REF_REGLEMENT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_REF_REGLEMENT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FCT_FRN_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_FRN_ID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FCT_COM_FACT", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_COM_FACT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FCT_DATE_STAT", Global.System.Data.OleDb.OleDbType.DBTimeStamp, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_DATE_STAT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FCT_BINTERNET", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_BINTERNET", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [FACTCOM] SET [FCT_CODE] = ?, [FCT_ETAT] = ?, [FCT_DATE] = ?, [FCT_PERIODE"& _ 
                "] = ?, [FCT_TOTAL_HT] = ?, [FCT_TOTAL_TTC] = ?, [FCT_MONTANT_REGLEMENT] = ?, [FC"& _ 
                "T_DATE_REGLEMENT] = ?, [FCT_REF_REGLEMENT] = ?, [FCT_FRN_ID] = ?, [FCT_COM_FACT]"& _ 
                " = ?, [FCT_DATE_STAT] = ?, [FCT_BINTERNET] = ? WHERE (([FCT_ID] = ?) AND ((? = 1"& _ 
                " AND [FCT_CODE] IS NULL) OR ([FCT_CODE] = ?)) AND ((? = 1 AND [FCT_ETAT] IS NULL"& _ 
                ") OR ([FCT_ETAT] = ?)) AND ((? = 1 AND [FCT_DATE] IS NULL) OR ([FCT_DATE] = ?)) "& _ 
                "AND ((? = 1 AND [FCT_PERIODE] IS NULL) OR ([FCT_PERIODE] = ?)) AND ((? = 1 AND ["& _ 
                "FCT_TOTAL_HT] IS NULL) OR ([FCT_TOTAL_HT] = ?)) AND ((? = 1 AND [FCT_TOTAL_TTC] "& _ 
                "IS NULL) OR ([FCT_TOTAL_TTC] = ?)) AND ((? = 1 AND [FCT_MONTANT_REGLEMENT] IS NU"& _ 
                "LL) OR ([FCT_MONTANT_REGLEMENT] = ?)) AND ((? = 1 AND [FCT_DATE_REGLEMENT] IS NU"& _ 
                "LL) OR ([FCT_DATE_REGLEMENT] = ?)) AND ((? = 1 AND [FCT_REF_REGLEMENT] IS NULL) "& _ 
                "OR ([FCT_REF_REGLEMENT] = ?)) AND ([FCT_FRN_ID] = ?) AND ((? = 1 AND [FCT_DATE_S"& _ 
                "TAT] IS NULL) OR ([FCT_DATE_STAT] = ?)) AND ((? = 1 AND [FCT_BINTERNET] IS NULL)"& _ 
                " OR ([FCT_BINTERNET] = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FCT_CODE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FCT_ETAT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_ETAT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FCT_DATE", Global.System.Data.OleDb.OleDbType.DBTimeStamp, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FCT_PERIODE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_PERIODE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FCT_TOTAL_HT", Global.System.Data.OleDb.OleDbType.Currency, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_TOTAL_HT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FCT_TOTAL_TTC", Global.System.Data.OleDb.OleDbType.Currency, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_TOTAL_TTC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FCT_MONTANT_REGLEMENT", Global.System.Data.OleDb.OleDbType.Currency, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_MONTANT_REGLEMENT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FCT_DATE_REGLEMENT", Global.System.Data.OleDb.OleDbType.DBTimeStamp, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_DATE_REGLEMENT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FCT_REF_REGLEMENT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_REF_REGLEMENT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FCT_FRN_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_FRN_ID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FCT_COM_FACT", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_COM_FACT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FCT_DATE_STAT", Global.System.Data.OleDb.OleDbType.DBTimeStamp, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_DATE_STAT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FCT_BINTERNET", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_BINTERNET", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FCT_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FCT_CODE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_CODE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FCT_CODE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FCT_ETAT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_ETAT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FCT_ETAT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_ETAT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FCT_DATE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FCT_DATE", Global.System.Data.OleDb.OleDbType.DBTimeStamp, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FCT_PERIODE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_PERIODE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FCT_PERIODE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_PERIODE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FCT_TOTAL_HT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_TOTAL_HT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FCT_TOTAL_HT", Global.System.Data.OleDb.OleDbType.Currency, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_TOTAL_HT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FCT_TOTAL_TTC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_TOTAL_TTC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FCT_TOTAL_TTC", Global.System.Data.OleDb.OleDbType.Currency, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_TOTAL_TTC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FCT_MONTANT_REGLEMENT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_MONTANT_REGLEMENT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FCT_MONTANT_REGLEMENT", Global.System.Data.OleDb.OleDbType.Currency, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_MONTANT_REGLEMENT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FCT_DATE_REGLEMENT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_DATE_REGLEMENT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FCT_DATE_REGLEMENT", Global.System.Data.OleDb.OleDbType.DBTimeStamp, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_DATE_REGLEMENT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FCT_REF_REGLEMENT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_REF_REGLEMENT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FCT_REF_REGLEMENT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_REF_REGLEMENT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FCT_FRN_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_FRN_ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FCT_DATE_STAT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_DATE_STAT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FCT_DATE_STAT", Global.System.Data.OleDb.OleDbType.DBTimeStamp, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_DATE_STAT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FCT_BINTERNET", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_BINTERNET", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FCT_BINTERNET", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FCT_BINTERNET", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.vini_DB.My.MySettings.Default.ConnectString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     *"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         FACTCOM"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsVinicom.FACTCOMDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsVinicom.FACTCOMDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsVinicom.FACTCOMDataTable = New dsVinicom.FACTCOMDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsVinicom.FACTCOMDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsVinicom) As Integer
            Return Me.Adapter.Update(dataSet, "FACTCOM")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class LOCKTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "LOCK"
            tableMapping.ColumnMappings.Add("LCK_PERSISTID", "LCK_PERSISTID")
            tableMapping.ColumnMappings.Add("LCK_NAME", "LCK_NAME")
            tableMapping.ColumnMappings.Add("LCK_DATE", "LCK_DATE")
            tableMapping.ColumnMappings.Add("LCK_TYPE", "LCK_TYPE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [LOCK] WHERE (([LCK_PERSISTID] = ?) AND ([LCK_TYPE] = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LCK_PERSISTID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LCK_PERSISTID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LCK_TYPE", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LCK_TYPE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [LOCK] ([LCK_PERSISTID], [LCK_TYPE], [LCK_NAME], [LCK_DATE]) VALUES ("& _ 
                "?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LCK_PERSISTID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LCK_PERSISTID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LCK_TYPE", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LCK_TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LCK_NAME", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LCK_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LCK_DATE", Global.System.Data.OleDb.OleDbType.DBTimeStamp, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LCK_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [LOCK] SET [LCK_PERSISTID] = ?, [LCK_TYPE] = ?, [LCK_NAME] = ?, [LCK_DATE]"& _ 
                " = ? WHERE (([LCK_PERSISTID] = ?) AND ([LCK_TYPE] = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LCK_PERSISTID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LCK_PERSISTID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LCK_TYPE", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LCK_TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LCK_NAME", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LCK_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LCK_DATE", Global.System.Data.OleDb.OleDbType.DBTimeStamp, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LCK_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LCK_PERSISTID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LCK_PERSISTID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LCK_TYPE", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LCK_TYPE", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.vini_DB.My.MySettings.Default.ConnectString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     LOCK.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         LOCK"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM LOCK"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (LCK_NAME = ?)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LCK_NAME", Global.System.Data.OleDb.OleDbType.[Char], 50, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LCK_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._commandCollection(2) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT     LCK_PERSISTID, LCK_TYPE, LCK_NAME, LCK_DATE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         LOCK"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE "& _ 
                "    (LCK_NAME = ?)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LCK_NAME", Global.System.Data.OleDb.OleDbType.[Char], 50, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LCK_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT     LCK_PERSISTID, LCK_TYPE, LCK_NAME, LCK_DATE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         LOCK"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE "& _ 
                "    (LCK_PERSISTID = ?) AND (LCK_TYPE = ?)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LCK_PERSISTID", Global.System.Data.OleDb.OleDbType.[Integer], 4, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LCK_PERSISTID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LCK_TYPE", Global.System.Data.OleDb.OleDbType.[Char], 50, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LCK_TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsVinicom.LOCKDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsVinicom.LOCKDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsVinicom.LOCKDataTable = New dsVinicom.LOCKDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByMachineName(ByVal dataTable As dsVinicom.LOCKDataTable, ByVal LCK_NAME As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (LCK_NAME Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(LCK_NAME,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByMachineName(ByVal LCK_NAME As String) As dsVinicom.LOCKDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (LCK_NAME Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(LCK_NAME,String)
            End If
            Dim dataTable As dsVinicom.LOCKDataTable = New dsVinicom.LOCKDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByPersistID_dataType(ByVal dataTable As dsVinicom.LOCKDataTable, ByVal LCK_PERSISTID As Integer, ByVal LCK_TYPE As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LCK_PERSISTID,Integer)
            If (LCK_TYPE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LCK_TYPE")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(LCK_TYPE,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByPersistID_dataType(ByVal LCK_PERSISTID As Integer, ByVal LCK_TYPE As String) As dsVinicom.LOCKDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LCK_PERSISTID,Integer)
            If (LCK_TYPE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LCK_TYPE")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(LCK_TYPE,String)
            End If
            Dim dataTable As dsVinicom.LOCKDataTable = New dsVinicom.LOCKDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsVinicom.LOCKDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsVinicom) As Integer
            Return Me.Adapter.Update(dataSet, "LOCK")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_LCK_PERSISTID As Integer, ByVal Original_LCK_TYPE As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_LCK_PERSISTID,Integer)
            If (Original_LCK_TYPE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LCK_TYPE")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_LCK_TYPE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal LCK_PERSISTID As Integer, ByVal LCK_TYPE As String, ByVal LCK_NAME As String, ByVal LCK_DATE As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(LCK_PERSISTID,Integer)
            If (LCK_TYPE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LCK_TYPE")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(LCK_TYPE,String)
            End If
            If (LCK_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(LCK_NAME,String)
            End If
            If (LCK_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(LCK_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal LCK_PERSISTID As Integer, ByVal LCK_TYPE As String, ByVal LCK_NAME As String, ByVal LCK_DATE As Global.System.Nullable(Of Date), ByVal Original_LCK_PERSISTID As Integer, ByVal Original_LCK_TYPE As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(LCK_PERSISTID,Integer)
            If (LCK_TYPE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LCK_TYPE")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(LCK_TYPE,String)
            End If
            If (LCK_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(LCK_NAME,String)
            End If
            If (LCK_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(LCK_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_LCK_PERSISTID,Integer)
            If (Original_LCK_TYPE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LCK_TYPE")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_LCK_TYPE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal LCK_NAME As String, ByVal LCK_DATE As Global.System.Nullable(Of Date), ByVal Original_LCK_PERSISTID As Integer, ByVal Original_LCK_TYPE As String) As Integer
            Return Me.Update(Original_LCK_PERSISTID, Original_LCK_TYPE, LCK_NAME, LCK_DATE, Original_LCK_PERSISTID, Original_LCK_TYPE)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeletefromName(ByVal LCK_NAME As String) As Integer
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(1)
            If (LCK_NAME Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(LCK_NAME,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class USERSRIGHTSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "USERSRIGHTS"
            tableMapping.ColumnMappings.Add("RGH_ID", "RGH_ID")
            tableMapping.ColumnMappings.Add("RGH_TAG", "RGH_TAG")
            tableMapping.ColumnMappings.Add("RGH_ROLE", "RGH_ROLE")
            tableMapping.ColumnMappings.Add("RGH_DROIT", "RGH_DROIT")
            tableMapping.ColumnMappings.Add("RGH_TEXT", "RGH_TEXT")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [USERSRIGHTS] WHERE (([RGH_ID] = ?) AND ((? = 1 AND [RGH_TAG] IS NULL"& _ 
                ") OR ([RGH_TAG] = ?)) AND ((? = 1 AND [RGH_ROLE] IS NULL) OR ([RGH_ROLE] = ?)) A"& _ 
                "ND ((? = 1 AND [RGH_DROIT] IS NULL) OR ([RGH_DROIT] = ?)) AND ((? = 1 AND [RGH_T"& _ 
                "EXT] IS NULL) OR ([RGH_TEXT] = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_RGH_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGH_ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_RGH_TAG", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGH_TAG", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_RGH_TAG", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGH_TAG", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_RGH_ROLE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGH_ROLE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_RGH_ROLE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGH_ROLE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_RGH_DROIT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGH_DROIT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_RGH_DROIT", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGH_DROIT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_RGH_TEXT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGH_TEXT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_RGH_TEXT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGH_TEXT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [USERSRIGHTS] ([RGH_TAG], [RGH_ROLE], [RGH_DROIT], [RGH_TEXT]) VALUES"& _ 
                " (?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGH_TAG", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGH_TAG", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGH_ROLE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGH_ROLE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGH_DROIT", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGH_DROIT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGH_TEXT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGH_TEXT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [USERSRIGHTS] SET [RGH_TAG] = ?, [RGH_ROLE] = ?, [RGH_DROIT] = ?, [RGH_TEX"& _ 
                "T] = ? WHERE (([RGH_ID] = ?) AND ((? = 1 AND [RGH_TAG] IS NULL) OR ([RGH_TAG] = "& _ 
                "?)) AND ((? = 1 AND [RGH_ROLE] IS NULL) OR ([RGH_ROLE] = ?)) AND ((? = 1 AND [RG"& _ 
                "H_DROIT] IS NULL) OR ([RGH_DROIT] = ?)) AND ((? = 1 AND [RGH_TEXT] IS NULL) OR ("& _ 
                "[RGH_TEXT] = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGH_TAG", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGH_TAG", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGH_ROLE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGH_ROLE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGH_DROIT", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGH_DROIT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RGH_TEXT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGH_TEXT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_RGH_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGH_ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_RGH_TAG", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGH_TAG", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_RGH_TAG", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGH_TAG", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_RGH_ROLE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGH_ROLE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_RGH_ROLE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGH_ROLE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_RGH_DROIT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGH_DROIT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_RGH_DROIT", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGH_DROIT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_RGH_TEXT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGH_TEXT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_RGH_TEXT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RGH_TEXT", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.vini_DB.My.MySettings.Default.ConnectString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     RGH_ID, RGH_TAG, RGH_ROLE, RGH_DROIT, RGH_TEXT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         USERSRIGH"& _ 
                "TS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsVinicom.USERSRIGHTSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsVinicom.USERSRIGHTSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsVinicom.USERSRIGHTSDataTable = New dsVinicom.USERSRIGHTSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsVinicom.USERSRIGHTSDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsVinicom) As Integer
            Return Me.Adapter.Update(dataSet, "USERSRIGHTS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_RGH_ID As Integer, ByVal Original_RGH_TAG As String, ByVal Original_RGH_ROLE As Global.System.Nullable(Of Integer), ByVal Original_RGH_DROIT As Global.System.Nullable(Of Boolean), ByVal Original_RGH_TEXT As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_RGH_ID,Integer)
            If (Original_RGH_TAG Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_RGH_TAG,String)
            End If
            If (Original_RGH_ROLE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_RGH_ROLE.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_RGH_DROIT.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_RGH_DROIT.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_RGH_TEXT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_RGH_TEXT,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal RGH_TAG As String, ByVal RGH_ROLE As Global.System.Nullable(Of Integer), ByVal RGH_DROIT As Global.System.Nullable(Of Boolean), ByVal RGH_TEXT As String) As Integer
            If (RGH_TAG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(RGH_TAG,String)
            End If
            If (RGH_ROLE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(RGH_ROLE.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (RGH_DROIT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(RGH_DROIT.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (RGH_TEXT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(RGH_TEXT,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal RGH_TAG As String, ByVal RGH_ROLE As Global.System.Nullable(Of Integer), ByVal RGH_DROIT As Global.System.Nullable(Of Boolean), ByVal RGH_TEXT As String, ByVal Original_RGH_ID As Integer, ByVal Original_RGH_TAG As String, ByVal Original_RGH_ROLE As Global.System.Nullable(Of Integer), ByVal Original_RGH_DROIT As Global.System.Nullable(Of Boolean), ByVal Original_RGH_TEXT As String) As Integer
            If (RGH_TAG Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(RGH_TAG,String)
            End If
            If (RGH_ROLE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(RGH_ROLE.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (RGH_DROIT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(RGH_DROIT.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (RGH_TEXT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(RGH_TEXT,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_RGH_ID,Integer)
            If (Original_RGH_TAG Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_RGH_TAG,String)
            End If
            If (Original_RGH_ROLE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_RGH_ROLE.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_RGH_DROIT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_RGH_DROIT.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_RGH_TEXT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_RGH_TEXT,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class USERSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "USERS"
            tableMapping.ColumnMappings.Add("USR_ID", "USR_ID")
            tableMapping.ColumnMappings.Add("USR_CODE", "USR_CODE")
            tableMapping.ColumnMappings.Add("USR_PASSWORD", "USR_PASSWORD")
            tableMapping.ColumnMappings.Add("USR_ROLE", "USR_ROLE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [USERS] WHERE (([USR_ID] = ?) AND ((? = 1 AND [USR_CODE] IS NULL) OR "& _ 
                "([USR_CODE] = ?)) AND ((? = 1 AND [USR_PASSWORD] IS NULL) OR ([USR_PASSWORD] = ?"& _ 
                ")) AND ([USR_ROLE] = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_USR_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_USR_CODE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_CODE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_USR_CODE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_USR_PASSWORD", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_PASSWORD", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_USR_PASSWORD", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_PASSWORD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_USR_ROLE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_ROLE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [USERS] ([USR_CODE], [USR_PASSWORD], [USR_ROLE]) VALUES (?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("USR_CODE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("USR_PASSWORD", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_PASSWORD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("USR_ROLE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_ROLE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [USERS] SET [USR_CODE] = ?, [USR_PASSWORD] = ?, [USR_ROLE] = ? WHERE (([US"& _ 
                "R_ID] = ?) AND ((? = 1 AND [USR_CODE] IS NULL) OR ([USR_CODE] = ?)) AND ((? = 1 "& _ 
                "AND [USR_PASSWORD] IS NULL) OR ([USR_PASSWORD] = ?)) AND ([USR_ROLE] = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("USR_CODE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("USR_PASSWORD", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_PASSWORD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("USR_ROLE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_ROLE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_USR_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_USR_CODE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_CODE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_USR_CODE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_USR_PASSWORD", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_PASSWORD", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_USR_PASSWORD", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_PASSWORD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_USR_ROLE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_ROLE", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.vini_DB.My.MySettings.Default.ConnectString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     USERS.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         USERS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsVinicom.USERSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsVinicom.USERSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsVinicom.USERSDataTable = New dsVinicom.USERSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsVinicom.USERSDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsVinicom) As Integer
            Return Me.Adapter.Update(dataSet, "USERS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_USR_ID As Integer, ByVal Original_USR_CODE As String, ByVal Original_USR_PASSWORD As String, ByVal Original_USR_ROLE As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_USR_ID,Integer)
            If (Original_USR_CODE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_USR_CODE,String)
            End If
            If (Original_USR_PASSWORD Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_USR_PASSWORD,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_USR_ROLE,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal USR_CODE As String, ByVal USR_PASSWORD As String, ByVal USR_ROLE As Integer) As Integer
            If (USR_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(USR_CODE,String)
            End If
            If (USR_PASSWORD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(USR_PASSWORD,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(USR_ROLE,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal USR_CODE As String, ByVal USR_PASSWORD As String, ByVal USR_ROLE As Integer, ByVal Original_USR_ID As Integer, ByVal Original_USR_CODE As String, ByVal Original_USR_PASSWORD As String, ByVal Original_USR_ROLE As Integer) As Integer
            If (USR_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(USR_CODE,String)
            End If
            If (USR_PASSWORD Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(USR_PASSWORD,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(USR_ROLE,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_USR_ID,Integer)
            If (Original_USR_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_USR_CODE,String)
            End If
            If (Original_USR_PASSWORD Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_USR_PASSWORD,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_USR_ROLE,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class APPELATIONTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "APPELATION"
            tableMapping.ColumnMappings.Add("APP_CHATEAU", "APP_CHATEAU")
            tableMapping.ColumnMappings.Add("APP_APPELATION", "APP_APPELATION")
            tableMapping.ColumnMappings.Add("APP_ENCEPAG", "APP_ENCEPAG")
            tableMapping.ColumnMappings.Add("APP_TERROIR", "APP_TERROIR")
            tableMapping.ColumnMappings.Add("APP_DESCRIPTIF", "APP_DESCRIPTIF")
            tableMapping.ColumnMappings.Add("APP_ETIQUETTE", "APP_ETIQUETTE")
            tableMapping.ColumnMappings.Add("APP_ID", "APP_ID")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [APPELATION] WHERE (((? = 1 AND [APP_CHATEAU] IS NULL) OR ([APP_CHATE"& _ 
                "AU] = ?)) AND ((? = 1 AND [APP_APPELATION] IS NULL) OR ([APP_APPELATION] = ?)) A"& _ 
                "ND ([APP_ID] = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_APP_CHATEAU", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APP_CHATEAU", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_APP_CHATEAU", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APP_CHATEAU", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_APP_APPELATION", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APP_APPELATION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_APP_APPELATION", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APP_APPELATION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_APP_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APP_ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [APPELATION] ([APP_CHATEAU], [APP_APPELATION], [APP_ENCEPAG], [APP_TE"& _ 
                "RROIR], [APP_DESCRIPTIF], [APP_ETIQUETTE], [APP_ID]) VALUES (?, ?, ?, ?, ?, ?, ?"& _ 
                ")"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("APP_CHATEAU", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APP_CHATEAU", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("APP_APPELATION", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APP_APPELATION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("APP_ENCEPAG", Global.System.Data.OleDb.OleDbType.LongVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APP_ENCEPAG", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("APP_TERROIR", Global.System.Data.OleDb.OleDbType.LongVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APP_TERROIR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("APP_DESCRIPTIF", Global.System.Data.OleDb.OleDbType.LongVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APP_DESCRIPTIF", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("APP_ETIQUETTE", Global.System.Data.OleDb.OleDbType.LongVarBinary, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APP_ETIQUETTE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("APP_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APP_ID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [APPELATION] SET [APP_CHATEAU] = ?, [APP_APPELATION] = ?, [APP_ENCEPAG] = "& _ 
                "?, [APP_TERROIR] = ?, [APP_DESCRIPTIF] = ?, [APP_ETIQUETTE] = ?, [APP_ID] = ? WH"& _ 
                "ERE (((? = 1 AND [APP_CHATEAU] IS NULL) OR ([APP_CHATEAU] = ?)) AND ((? = 1 AND "& _ 
                "[APP_APPELATION] IS NULL) OR ([APP_APPELATION] = ?)) AND ([APP_ID] = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("APP_CHATEAU", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APP_CHATEAU", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("APP_APPELATION", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APP_APPELATION", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("APP_ENCEPAG", Global.System.Data.OleDb.OleDbType.LongVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APP_ENCEPAG", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("APP_TERROIR", Global.System.Data.OleDb.OleDbType.LongVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APP_TERROIR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("APP_DESCRIPTIF", Global.System.Data.OleDb.OleDbType.LongVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APP_DESCRIPTIF", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("APP_ETIQUETTE", Global.System.Data.OleDb.OleDbType.LongVarBinary, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APP_ETIQUETTE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("APP_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APP_ID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_APP_CHATEAU", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APP_CHATEAU", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_APP_CHATEAU", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APP_CHATEAU", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_APP_APPELATION", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APP_APPELATION", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_APP_APPELATION", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APP_APPELATION", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_APP_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APP_ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.vini_DB.My.MySettings.Default.ConnectString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     APPELATION.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         APPELATION"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsVinicom.APPELATIONDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsVinicom.APPELATIONDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsVinicom.APPELATIONDataTable = New dsVinicom.APPELATIONDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsVinicom.APPELATIONDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsVinicom) As Integer
            Return Me.Adapter.Update(dataSet, "APPELATION")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_APP_CHATEAU As String, ByVal Original_APP_APPELATION As String, ByVal Original_APP_ID As Integer) As Integer
            If (Original_APP_CHATEAU Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_APP_CHATEAU,String)
            End If
            If (Original_APP_APPELATION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_APP_APPELATION,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_APP_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal APP_CHATEAU As String, ByVal APP_APPELATION As String, ByVal APP_ENCEPAG As String, ByVal APP_TERROIR As String, ByVal APP_DESCRIPTIF As String, ByVal APP_ETIQUETTE() As Byte, ByVal APP_ID As Integer) As Integer
            If (APP_CHATEAU Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(APP_CHATEAU,String)
            End If
            If (APP_APPELATION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(APP_APPELATION,String)
            End If
            If (APP_ENCEPAG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(APP_ENCEPAG,String)
            End If
            If (APP_TERROIR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(APP_TERROIR,String)
            End If
            If (APP_DESCRIPTIF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(APP_DESCRIPTIF,String)
            End If
            If (APP_ETIQUETTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(APP_ETIQUETTE,Byte())
            End If
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(APP_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal APP_CHATEAU As String, ByVal APP_APPELATION As String, ByVal APP_ENCEPAG As String, ByVal APP_TERROIR As String, ByVal APP_DESCRIPTIF As String, ByVal APP_ETIQUETTE() As Byte, ByVal APP_ID As Integer, ByVal Original_APP_CHATEAU As String, ByVal Original_APP_APPELATION As String, ByVal Original_APP_ID As Integer) As Integer
            If (APP_CHATEAU Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(APP_CHATEAU,String)
            End If
            If (APP_APPELATION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(APP_APPELATION,String)
            End If
            If (APP_ENCEPAG Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(APP_ENCEPAG,String)
            End If
            If (APP_TERROIR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(APP_TERROIR,String)
            End If
            If (APP_DESCRIPTIF Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(APP_DESCRIPTIF,String)
            End If
            If (APP_ETIQUETTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(APP_ETIQUETTE,Byte())
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(APP_ID,Integer)
            If (Original_APP_CHATEAU Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_APP_CHATEAU,String)
            End If
            If (Original_APP_APPELATION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_APP_APPELATION,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_APP_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal APP_CHATEAU As String, ByVal APP_APPELATION As String, ByVal APP_ENCEPAG As String, ByVal APP_TERROIR As String, ByVal APP_DESCRIPTIF As String, ByVal APP_ETIQUETTE() As Byte, ByVal Original_APP_CHATEAU As String, ByVal Original_APP_APPELATION As String, ByVal Original_APP_ID As Integer) As Integer
            Return Me.Update(APP_CHATEAU, APP_APPELATION, APP_ENCEPAG, APP_TERROIR, APP_DESCRIPTIF, APP_ETIQUETTE, Original_APP_ID, Original_APP_CHATEAU, Original_APP_APPELATION, Original_APP_ID)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FICHETECHNIQUE_FOURNISSEURTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FICHETECHNIQUE_FOURNISSEUR"
            tableMapping.ColumnMappings.Add("FTFRN_TXTDOMAINE", "FTFRN_TXTDOMAINE")
            tableMapping.ColumnMappings.Add("FTFRN_TXTFOURNISSEUR", "FTFRN_TXTFOURNISSEUR")
            tableMapping.ColumnMappings.Add("FTFRN_TXTTERROIR", "FTFRN_TXTTERROIR")
            tableMapping.ColumnMappings.Add("FTFRN_ID", "FTFRN_ID")
            tableMapping.ColumnMappings.Add("FTFRN_SPECIALITE", "FTFRN_SPECIALITE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [FICHETECHNIQUE_FOURNISSEUR] WHERE (([FTFRN_ID] = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FTFRN_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTFRN_ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [FICHETECHNIQUE_FOURNISSEUR] ([FTFRN_TXTDOMAINE], [FTFRN_TXTFOURNISSE"& _ 
                "UR], [FTFRN_TXTTERROIR], [FTFRN_ID], [FTFRN_SPECIALITE]) VALUES (?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FTFRN_TXTDOMAINE", Global.System.Data.OleDb.OleDbType.LongVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTFRN_TXTDOMAINE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FTFRN_TXTFOURNISSEUR", Global.System.Data.OleDb.OleDbType.LongVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTFRN_TXTFOURNISSEUR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FTFRN_TXTTERROIR", Global.System.Data.OleDb.OleDbType.LongVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTFRN_TXTTERROIR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FTFRN_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTFRN_ID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FTFRN_SPECIALITE", Global.System.Data.OleDb.OleDbType.LongVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTFRN_SPECIALITE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [FICHETECHNIQUE_FOURNISSEUR] SET [FTFRN_TXTDOMAINE] = ?, [FTFRN_TXTFOURNIS"& _ 
                "SEUR] = ?, [FTFRN_TXTTERROIR] = ?, [FTFRN_ID] = ?, [FTFRN_SPECIALITE] = ? WHERE "& _ 
                "(([FTFRN_ID] = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FTFRN_TXTDOMAINE", Global.System.Data.OleDb.OleDbType.LongVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTFRN_TXTDOMAINE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FTFRN_TXTFOURNISSEUR", Global.System.Data.OleDb.OleDbType.LongVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTFRN_TXTFOURNISSEUR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FTFRN_TXTTERROIR", Global.System.Data.OleDb.OleDbType.LongVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTFRN_TXTTERROIR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FTFRN_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTFRN_ID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FTFRN_SPECIALITE", Global.System.Data.OleDb.OleDbType.LongVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTFRN_SPECIALITE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FTFRN_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTFRN_ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.vini_DB.My.MySettings.Default.ConnectString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     FTFRN_TXTDOMAINE, FTFRN_TXTFOURNISSEUR, FTFRN_TXTTERROIR, FTFRN_ID, FT"& _ 
                "FRN_SPECIALITE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         FICHETECHNIQUE_FOURNISSEUR"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT FTFRN_ID, FTFRN_SPECIALITE, FTFRN_TXTDOMAINE, FTFRN_TXTFOURNISSEUR, FTFRN_"& _ 
                "TXTTERROIR FROM FICHETECHNIQUE_FOURNISSEUR WHERE (FTFRN_ID = ?)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FTFRN_ID", Global.System.Data.OleDb.OleDbType.[Integer], 4, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FTFRN_ID", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsVinicom.FICHETECHNIQUE_FOURNISSEURDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsVinicom.FICHETECHNIQUE_FOURNISSEURDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsVinicom.FICHETECHNIQUE_FOURNISSEURDataTable = New dsVinicom.FICHETECHNIQUE_FOURNISSEURDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByID(ByVal dataTable As dsVinicom.FICHETECHNIQUE_FOURNISSEURDataTable, ByVal FTFRN_ID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FTFRN_ID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByID(ByVal FTFRN_ID As Integer) As dsVinicom.FICHETECHNIQUE_FOURNISSEURDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FTFRN_ID,Integer)
            Dim dataTable As dsVinicom.FICHETECHNIQUE_FOURNISSEURDataTable = New dsVinicom.FICHETECHNIQUE_FOURNISSEURDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsVinicom.FICHETECHNIQUE_FOURNISSEURDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsVinicom) As Integer
            Return Me.Adapter.Update(dataSet, "FICHETECHNIQUE_FOURNISSEUR")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_FTFRN_ID As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_FTFRN_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal FTFRN_TXTDOMAINE As String, ByVal FTFRN_TXTFOURNISSEUR As String, ByVal FTFRN_TXTTERROIR As String, ByVal FTFRN_ID As Integer, ByVal FTFRN_SPECIALITE As String) As Integer
            If (FTFRN_TXTDOMAINE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(FTFRN_TXTDOMAINE,String)
            End If
            If (FTFRN_TXTFOURNISSEUR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(FTFRN_TXTFOURNISSEUR,String)
            End If
            If (FTFRN_TXTTERROIR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(FTFRN_TXTTERROIR,String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(FTFRN_ID,Integer)
            If (FTFRN_SPECIALITE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(FTFRN_SPECIALITE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FTFRN_TXTDOMAINE As String, ByVal FTFRN_TXTFOURNISSEUR As String, ByVal FTFRN_TXTTERROIR As String, ByVal FTFRN_ID As Integer, ByVal FTFRN_SPECIALITE As String, ByVal Original_FTFRN_ID As Integer) As Integer
            If (FTFRN_TXTDOMAINE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(FTFRN_TXTDOMAINE,String)
            End If
            If (FTFRN_TXTFOURNISSEUR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FTFRN_TXTFOURNISSEUR,String)
            End If
            If (FTFRN_TXTTERROIR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(FTFRN_TXTTERROIR,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(FTFRN_ID,Integer)
            If (FTFRN_SPECIALITE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(FTFRN_SPECIALITE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_FTFRN_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FTFRN_TXTDOMAINE As String, ByVal FTFRN_TXTFOURNISSEUR As String, ByVal FTFRN_TXTTERROIR As String, ByVal FTFRN_SPECIALITE As String, ByVal Original_FTFRN_ID As Integer) As Integer
            Return Me.Update(FTFRN_TXTDOMAINE, FTFRN_TXTFOURNISSEUR, FTFRN_TXTTERROIR, Original_FTFRN_ID, FTFRN_SPECIALITE, Original_FTFRN_ID)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class IMAGESTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "IMAGES"
            tableMapping.ColumnMappings.Add("IMG_ID", "IMG_ID")
            tableMapping.ColumnMappings.Add("IMG_OBJECT_ID", "IMG_OBJECT_ID")
            tableMapping.ColumnMappings.Add("IMG_TYPE", "IMG_TYPE")
            tableMapping.ColumnMappings.Add("IMG_NUM", "IMG_NUM")
            tableMapping.ColumnMappings.Add("IMG_IMAGE", "IMG_IMAGE")
            tableMapping.ColumnMappings.Add("IMG_DESC", "IMG_DESC")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [IMAGES] WHERE (([IMG_ID] = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_IMG_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IMG_ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [IMAGES] ([IMG_OBJECT_ID], [IMG_TYPE], [IMG_NUM], [IMG_IMAGE], [IMG_D"& _ 
                "ESC]) VALUES (?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IMG_OBJECT_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IMG_OBJECT_ID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IMG_TYPE", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IMG_TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IMG_NUM", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IMG_NUM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IMG_IMAGE", Global.System.Data.OleDb.OleDbType.LongVarBinary, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IMG_IMAGE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IMG_DESC", Global.System.Data.OleDb.OleDbType.LongVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IMG_DESC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [IMAGES] SET [IMG_OBJECT_ID] = ?, [IMG_TYPE] = ?, [IMG_NUM] = ?, [IMG_IMAG"& _ 
                "E] = ?, [IMG_DESC] = ? WHERE (([IMG_ID] = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IMG_OBJECT_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IMG_OBJECT_ID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IMG_TYPE", Global.System.Data.OleDb.OleDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IMG_TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IMG_NUM", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IMG_NUM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IMG_IMAGE", Global.System.Data.OleDb.OleDbType.LongVarBinary, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IMG_IMAGE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IMG_DESC", Global.System.Data.OleDb.OleDbType.LongVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IMG_DESC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_IMG_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IMG_ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.vini_DB.My.MySettings.Default.ConnectString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     IMG_ID, IMG_OBJECT_ID, IMG_TYPE, IMG_NUM, IMG_IMAGE, IMG_DESC"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM   "& _ 
                "      IMAGES"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT IMG_DESC, IMG_ID, IMG_IMAGE, IMG_NUM, IMG_OBJECT_ID, IMG_TYPE FROM IMAGES "& _ 
                "WHERE (IMG_ID = ?)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IMG_ID", Global.System.Data.OleDb.OleDbType.[Integer], 4, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IMG_ID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT IMG_DESC, IMG_ID, IMG_IMAGE, IMG_NUM, IMG_OBJECT_ID, IMG_TYPE FROM IMAGES "& _ 
                "WHERE (IMG_OBJECT_ID = ?) AND (IMG_TYPE = ?) AND (IMG_NUM = ?)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IMG_OBJECT_ID", Global.System.Data.OleDb.OleDbType.[Integer], 4, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IMG_OBJECT_ID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IMG_TYPE", Global.System.Data.OleDb.OleDbType.[Char], 50, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IMG_TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IMG_NUM", Global.System.Data.OleDb.OleDbType.[Integer], 4, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IMG_NUM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT     MAX(IMG_ID) AS IMG_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         IMAGES"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsVinicom.IMAGESDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsVinicom.IMAGESDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsVinicom.IMAGESDataTable = New dsVinicom.IMAGESDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByID(ByVal dataTable As dsVinicom.IMAGESDataTable, ByVal IMG_ID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(IMG_ID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByID(ByVal IMG_ID As Integer) As dsVinicom.IMAGESDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(IMG_ID,Integer)
            Dim dataTable As dsVinicom.IMAGESDataTable = New dsVinicom.IMAGESDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByObjectID_Type_Num(ByVal dataTable As dsVinicom.IMAGESDataTable, ByVal IMG_OBJECT_ID As Global.System.Nullable(Of Integer), ByVal IMG_TYPE As String, ByVal IMG_NUM As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (IMG_OBJECT_ID.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(IMG_OBJECT_ID.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (IMG_TYPE Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IMG_TYPE,String)
            End If
            If (IMG_NUM.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(IMG_NUM.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByObjectID_Type_Num(ByVal IMG_OBJECT_ID As Global.System.Nullable(Of Integer), ByVal IMG_TYPE As String, ByVal IMG_NUM As Global.System.Nullable(Of Integer)) As dsVinicom.IMAGESDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (IMG_OBJECT_ID.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(IMG_OBJECT_ID.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (IMG_TYPE Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IMG_TYPE,String)
            End If
            If (IMG_NUM.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(IMG_NUM.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsVinicom.IMAGESDataTable = New dsVinicom.IMAGESDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsVinicom.IMAGESDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsVinicom) As Integer
            Return Me.Adapter.Update(dataSet, "IMAGES")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_IMG_ID As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_IMG_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal IMG_OBJECT_ID As Global.System.Nullable(Of Integer), ByVal IMG_TYPE As String, ByVal IMG_NUM As Global.System.Nullable(Of Integer), ByVal IMG_IMAGE() As Byte, ByVal IMG_DESC As String) As Integer
            If (IMG_OBJECT_ID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(IMG_OBJECT_ID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (IMG_TYPE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(IMG_TYPE,String)
            End If
            If (IMG_NUM.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(IMG_NUM.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (IMG_IMAGE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(IMG_IMAGE,Byte())
            End If
            If (IMG_DESC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(IMG_DESC,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal IMG_OBJECT_ID As Global.System.Nullable(Of Integer), ByVal IMG_TYPE As String, ByVal IMG_NUM As Global.System.Nullable(Of Integer), ByVal IMG_IMAGE() As Byte, ByVal IMG_DESC As String, ByVal Original_IMG_ID As Integer) As Integer
            If (IMG_OBJECT_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(IMG_OBJECT_ID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (IMG_TYPE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(IMG_TYPE,String)
            End If
            If (IMG_NUM.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(IMG_NUM.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (IMG_IMAGE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(IMG_IMAGE,Byte())
            End If
            If (IMG_DESC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(IMG_DESC,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_IMG_ID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GETNEWID() As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(3)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
    End Class
End Namespace
